<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Very</title>
  
  <subtitle>personal blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-05-06T12:43:12.811Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chan Willian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>手机热点无法使用</title>
    <link href="http://yoursite.com/2021/05/06/Others/%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2021/05/06/Others/%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</id>
    <published>2021-05-06T12:42:58.000Z</published>
    <updated>2021-05-06T12:43:12.811Z</updated>
    
    <content type="html"><![CDATA[<h3 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h3><ul><li><strong>热点的AP频段</strong> 可能选择的不合适        <strong>更换AP频段，热点能够正常使用</strong></li></ul><blockquote><p>发现，在学校的不同地点，需要不同的AP频段，才能正常使用我的手机热点</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;发现问题&quot;&gt;&lt;a href=&quot;#发现问题&quot; class=&quot;headerlink&quot; title=&quot;发现问题&quot;&gt;&lt;/a&gt;发现问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;热点的AP频段&lt;/strong&gt; 可能选择的不合适        &lt;strong&gt;更换AP频段，
      
    
    </summary>
    
    
    
      <category term="Others" scheme="http://yoursite.com/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>ABBYY使用教程</title>
    <link href="http://yoursite.com/2021/04/24/Others/ABBYY%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2021/04/24/Others/ABBYY%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2021-04-24T07:42:16.000Z</published>
    <updated>2021-05-06T12:37:09.599Z</updated>
    
    <content type="html"><![CDATA[<h3 id="识别图片生成文字"><a href="#识别图片生成文字" class="headerlink" title="识别图片生成文字"></a>识别图片生成文字</h3><ul><li>使用<strong>FineReaderOCR</strong>  即可。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;识别图片生成文字&quot;&gt;&lt;a href=&quot;#识别图片生成文字&quot; class=&quot;headerlink&quot; title=&quot;识别图片生成文字&quot;&gt;&lt;/a&gt;识别图片生成文字&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;strong&gt;FineReaderOCR&lt;/strong&gt;  即可。&lt;/l
      
    
    </summary>
    
    
    
      <category term="Others" scheme="http://yoursite.com/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>IDEA使用教程</title>
    <link href="http://yoursite.com/2021/04/07/JavaWeb/IDEA%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2021/04/07/JavaWeb/IDEA%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2021-04-07T09:13:37.000Z</published>
    <updated>2021-04-07T09:20:36.311Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-1-1-项目结构"><a href="#1-1-1-项目结构" class="headerlink" title="1.1.1  项目结构"></a>1.1.1  项目结构</h4><p><img src="https://i.loli.net/2021/04/07/U2zNqhSXBx6H3ys.png" alt="img"></p><h4 id="1-1-2-IDEA常用快捷键"><a href="#1-1-2-IDEA常用快捷键" class="headerlink" title="1.1.2  IDEA常用快捷键"></a>1.1.2  IDEA常用快捷键</h4><table><thead><tr><th><strong>快捷健</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>Alt+Enter</td><td>导入包，自动修正代码</td></tr><tr><td>Ctrl+Y</td><td>删除光标所在行</td></tr><tr><td>Ctrl+D</td><td>复制光标所在行的内容，插入光标位置下面</td></tr><tr><td>Ctrl+Alt+L</td><td>格式化代码</td></tr><tr><td>Ctrl+/</td><td>单行注释</td></tr><tr><td>Ctrl+Shift+/</td><td>选中代码注释，多行注释，再按取消注释</td></tr><tr><td>Alt+Ins</td><td>自动生成代码，toString, get, set等方法</td></tr><tr><td>Alt+Shift+上下箭头</td><td>移动当前代码行</td></tr></tbody></table><h4 id="1-1-3-IDEA修改快捷键"><a href="#1-1-3-IDEA修改快捷键" class="headerlink" title="1.1.3  IDEA修改快捷键"></a>1.1.3  IDEA修改快捷键</h4><p><img src="https://i.loli.net/2021/04/07/cF8XtsCZKJRyNfq.png" alt="img"></p><h4 id="1-1-4-模块的导入"><a href="#1-1-4-模块的导入" class="headerlink" title="1.1.4  模块的导入"></a>1.1.4  模块的导入</h4><p><img src="https://i.loli.net/2021/04/07/cF8XtsCZKJRyNfq.png" alt="img"></p><p><img src="https://i.loli.net/2021/04/07/cF8XtsCZKJRyNfq.png" alt="img"></p><ul><li>选中某个文件夹后，一路回车即可。</li></ul><h4 id="1-1-5-JavaBeen的快速创建"><a href="#1-1-5-JavaBeen的快速创建" class="headerlink" title="1.1.5  JavaBeen的快速创建"></a>1.1.5  JavaBeen的快速创建</h4><p><img src="https://i.loli.net/2021/04/07/EHLomjrMh3RcaYg.png" alt="img"></p><p><img src="https://i.loli.net/2021/04/07/EHLomjrMh3RcaYg.png" alt="img"></p><h4 id="1-1-6-快捷遍历输出"><a href="#1-1-6-快捷遍历输出" class="headerlink" title="1.1.6  快捷遍历输出"></a>1.1.6  快捷遍历输出</h4><p><img src="https://i.loli.net/2021/04/07/EHLomjrMh3RcaYg.png" alt="img"></p><h4 id="1-1-7-查看某个类的详细内容"><a href="#1-1-7-查看某个类的详细内容" class="headerlink" title="1.1.7  查看某个类的详细内容"></a>1.1.7  查看某个类的详细内容</h4><ul><li><strong>按住 Ctrl  ，然后 使用鼠标点击 某个类，即可。</strong></li></ul><h4 id="1-1-8-查看类文件的方法结构"><a href="#1-1-8-查看类文件的方法结构" class="headerlink" title="1.1.8  查看类文件的方法结构"></a>1.1.8  查看类文件的方法结构</h4><ul><li><strong>Alt + 7</strong> </li></ul><p><img src="https://i.loli.net/2021/04/07/XPjSFtrYTOU1a2z.png" alt="img"></p><h2 id="1-2-Tomcat"><a href="#1-2-Tomcat" class="headerlink" title="1.2 Tomcat"></a>1.2 Tomcat</h2><h4 id="1-2-1-Tomcat-项目的属性设置"><a href="#1-2-1-Tomcat-项目的属性设置" class="headerlink" title="1.2.1  Tomcat 项目的属性设置"></a>1.2.1  Tomcat 项目的属性设置</h4><p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p><p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p><h4 id="1-2-2-打开不同的Tomcat项目"><a href="#1-2-2-打开不同的Tomcat项目" class="headerlink" title="1.2.2  打开不同的Tomcat项目"></a>1.2.2  打开不同的Tomcat项目</h4><ol><li>打开另一个Tomcat项目，<strong>需要更改Tomcat的相关属性</strong></li><li><strong>选择你要使用的Tomcat项目</strong></li></ol><p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p><h4 id="1-2-3-编辑你的Tomcat项目"><a href="#1-2-3-编辑你的Tomcat项目" class="headerlink" title="1.2.3 编辑你的Tomcat项目"></a>1.2.3 编辑你的Tomcat项目</h4><ul><li><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></li></ul><h4 id="1-2-4-Tomcat项目对应的文件目录"><a href="#1-2-4-Tomcat项目对应的文件目录" class="headerlink" title="1.2.4  Tomcat项目对应的文件目录"></a>1.2.4  Tomcat项目对应的文件目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\JAVA_DEMO2\out\artifacts</span><br></pre></td></tr></table></figure><h4 id="1-2-5-添加jar包"><a href="#1-2-5-添加jar包" class="headerlink" title="1.2.5  添加jar包"></a><strong>1.2.5</strong>  添加jar包</h4><ol><li>导入jar包</li><li>添加到使用列表</li></ol><p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p><p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p><h4 id="1-2-6-更改Servlet模板"><a href="#1-2-6-更改Servlet模板" class="headerlink" title="1.2.6  更改Servlet模板"></a>1.2.6  更改Servlet模板</h4><img src="https://i.loli.net/2021/04/07/Eid5ZVFszmJN8tG.png" alt="img" style="zoom:80%;" /><h4 id="1-2-6-JSP工作文件夹"><a href="#1-2-6-JSP工作文件夹" class="headerlink" title="1.2.6   JSP工作文件夹"></a><strong>1.2.6</strong>   <strong>JSP工作文件夹</strong></h4><h4 id="1-2-7-更改Filter模板"><a href="#1-2-7-更改Filter模板" class="headerlink" title="1.2.7  更改Filter模板"></a>1.2.7  更改Filter模板</h4><h2 id="1-3-使用技巧"><a href="#1-3-使用技巧" class="headerlink" title="1.3 使用技巧"></a>1.3 使用技巧</h2><h4 id="1-3-1-添加代办TODO"><a href="#1-3-1-添加代办TODO" class="headerlink" title="1.3.1  添加代办TODO"></a>1.3.1  添加代办TODO</h4><ul><li><strong>在java代码中添加TODO，直接写注释即可。</strong></li></ul><p><img src="https://i.loli.net/2021/04/07/Ydrn9fb3GpNAk6S.png" alt="img"></p><ul><li><strong>在jsp代码中添加TODO，同样是写注释即可。</strong></li></ul><p><img src="https://i.loli.net/2021/04/07/Ydrn9fb3GpNAk6S.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-1-1-项目结构&quot;&gt;&lt;a href=&quot;#1-1-1-项目结构&quot; class=&quot;headerlink&quot; title=&quot;1.1.1  项目结构&quot;&gt;&lt;/a&gt;1.1.1  项目结构&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/04
      
    
    </summary>
    
    
    
      <category term="JAVA_IDEA使用技巧" scheme="http://yoursite.com/tags/JAVA-IDEA%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>List-13_JQuery高级</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/JavaScript/List-13_JQuery%E9%AB%98%E7%BA%A7/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/JavaScript/List-13_JQuery%E9%AB%98%E7%BA%A7/</id>
    <published>2021-04-06T12:20:07.000Z</published>
    <updated>2021-04-06T12:44:14.212Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h3><ul><li>JQuery 高级<ul><li>动画</li><li>遍历</li><li>事件绑定</li></ul></li><li>案例</li><li>插件</li></ul><h2 id="0-1-JQuery-高级"><a href="#0-1-JQuery-高级" class="headerlink" title="0.1 JQuery 高级"></a>0.1 JQuery 高级</h2><h4 id="1）动画"><a href="#1）动画" class="headerlink" title="1）动画"></a>1）动画</h4><ul><li><p>三种方式显示和隐藏元素</p><blockquote><ol><li><h4 id="默认显示和隐藏方式"><a href="#默认显示和隐藏方式" class="headerlink" title="默认显示和隐藏方式"></a>默认显示和隐藏方式</h4></li></ol></blockquote><ul><li><p><strong>show</strong> ( [ speed,  [easing],  [fn]]  )</p><ol><li>参数：<ol><li><strong>speed</strong>：<strong>动画的速度</strong>。三个预定义的值(“slow”,”normal”, “fast”)或表示动画时长的毫秒数值(如：1000)</li><li><strong>easing</strong>：<strong>用来指定切换效果</strong>，默认是”swing”，可用参数”linear”<ul><li><strong>swing：动画执行时效果是 先慢，中间快，最后又慢</strong></li><li><strong>linear：动画执行时速度是匀速的</strong></li></ul></li><li><strong>fn</strong>：在动画完成时执行的函数，<strong>每个元素执行一次</strong>。</li></ol></li></ol></li><li><p>hide( [ speed,  [easing],  [fn]]  )</p></li><li><p>toggle( [ speed,  [easing],  [fn]]  )</p></li></ul></li><li><blockquote><h4 id="2-滑动显示和隐藏方式"><a href="#2-滑动显示和隐藏方式" class="headerlink" title="2.滑动显示和隐藏方式"></a>2.滑动显示和隐藏方式</h4></blockquote><ul><li><p><strong>slideDown</strong>([speed],[easing],[fn])</p></li><li><p><strong>slideUp</strong>([speed,[easing],[fn]])</p></li><li><p><strong>slideToggle</strong>([speed],[easing],[fn])</p></li></ul></li><li><blockquote><h4 id="3-淡入淡出显示和隐藏方式"><a href="#3-淡入淡出显示和隐藏方式" class="headerlink" title="3.淡入淡出显示和隐藏方式"></a>3.淡入淡出显示和隐藏方式</h4></blockquote><ul><li><strong>fadeIn</strong>([speed],[easing],[fn])<ul><li><strong>fadeOut</strong>([speed],[easing],[fn])</li><li><strong>fadeToggle</strong>([speed,[easing],[fn]])</li></ul></li></ul></li></ul><h4 id="2）遍历"><a href="#2）遍历" class="headerlink" title="2）遍历"></a>2）遍历</h4><ul><li><p>JS的遍历方式</p><ul><li>for(初始化值；循环结束条件；步长)</li></ul></li><li><blockquote><h4 id="JQ的遍历方式"><a href="#JQ的遍历方式" class="headerlink" title="JQ的遍历方式"></a>JQ的遍历方式</h4></blockquote><ul><li><p><strong>1、jq对象.each(callback)</strong></p><ul><li>语法：<code>jquery对象.each(function(index,element){</code><ul><li>​        <code>})；</code></li><li><strong>index：就是元素在集合中的索引</strong><ul><li><strong>element：就是集合中的每一个元素对象</strong></li><li><strong>this：集合中的每一个元素对象</strong></li></ul></li></ul></li><li><strong>回调函数返回值</strong>：<ul><li><strong>$.each(object, [callback])</strong><ul><li>true：如果当前function返回为false，则结束循环(break)。</li><li>false：如果当前function返回为true，则结束本次循环，继续下次循环(continue)</li></ul></li></ul></li></ul></li><li><p><strong>2、for..of</strong>： </p><ul><li><strong>for(元素对象 of 容器对象)</strong></li></ul></li></ul></li></ul><h4 id="3）事件绑定"><a href="#3）事件绑定" class="headerlink" title="3）事件绑定"></a>3）事件绑定</h4><ul><li><p><strong>jquery标准的绑定方式</strong></p><ul><li>jq对象.事件方法(回调函数)；</li><li>注：如果调用事件方法，不传递回调函数，<strong>则会触发浏览器默认行为</strong>。<ul><li>表单对象.submit()；    //让表单提交</li></ul></li></ul></li><li><p><strong>on绑定事件/off解除绑定</strong></p><ul><li>jq对象.on(“事件名称”,回调函数)</li><li>jq对象.off(“事件名称”)<ul><li>如果off方法不传递任何参数，<strong>则将组件上的所有事件全部解绑</strong></li></ul></li></ul></li><li><p><strong>事件切换：toggle</strong></p><ul><li><p>jq对象.toggle(fn1,fn2…)</p><ul><li>当单击jq对象对应的组件后，会执行<strong>fn1</strong>.<strong>第二次点击会执行</strong>fn2…..</li></ul></li><li><p>注意：<strong>1.9版本 .toggle() 方法删除</strong>，jQuery Migrate（迁移）插件可以恢复此功能。</p><ul><li><script src="../js/jquery-migrate-1.0.0.js" type="text/javascript" charset="utf-8"></script></li></ul></li></ul></li></ul><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h4 id="广告的自动现实和隐藏"><a href="#广告的自动现实和隐藏" class="headerlink" title="广告的自动现实和隐藏"></a>广告的自动现实和隐藏</h4><ul><li><h4 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h4><ul><li>当页面加载完，3秒后。自动显示广告动消失。</li></ul></li><li><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><ol><li>使用定时器来完成。setTimeout (执行一次定时器)</li><li>Query的显示和隐藏动画效果其实就是控制display</li><li>使用  show/hide方法来完成广告的显示</li></ol></li><li><p>代码实现</p><ul><li><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//入口函数，在页面加载完成之后，定义定时器，调用这两个方法</span></span><br><span class="line">    $(function () &#123;</span><br><span class="line">       <span class="comment">//定义定时器，调用adShow方法 3秒后执行一次</span></span><br><span class="line">       setTimeout(adShow,<span class="number">3000</span>)；</span><br><span class="line">       <span class="comment">//定义定时器，调用adHide方法，8秒后执行一次</span></span><br><span class="line">        setTimeout(adHide,<span class="number">8000</span>)；</span><br><span class="line">    &#125;)；</span><br><span class="line">    <span class="comment">//显示广告</span></span><br><span class="line">    <span class="function">function <span class="title">adShow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取广告div，调用显示方法</span></span><br><span class="line">        $(<span class="string">"#ad"</span>).show(<span class="string">"slow"</span>)；</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//隐藏广告</span></span><br><span class="line">    <span class="function">function <span class="title">adHide</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取广告div，调用隐藏方法</span></span><br><span class="line">        $(<span class="string">"#ad"</span>).hide(<span class="string">"slow"</span>)；</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="抽奖"><a href="#抽奖" class="headerlink" title="抽奖"></a>抽奖</h4><ul><li><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h4><ol><li>给开始按钮绑定单击事件<ol><li>定义循环定时器<ul><li>切换小相框的src属性</li></ul></li><li>定义数组，存放图片资源路径<ul><li>生成随机数。数组索引        </li></ul></li></ol></li><li>给结束按钮绑定单击事件<ol><li>停止定时器</li><li>给大相框设置src属性</li></ol></li></ol></li><li><p><strong>disabled不能够使用</strong></p><ul><li><pre><code class="javascript">$(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">true</span>)；$(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">false</span>)；&lt;!--￼<span class="number">1</span>--&gt;</code></pre></li></ul></li><li><p>代码实现</p></li><li><pre><code class="java">&lt;script language=<span class="string">'javascript'</span> type=<span class="string">'text/javascript'</span>&gt;    <span class="keyword">var</span> imgs = [<span class="string">"../img/man00.jpg"</span>,                <span class="string">"../img/man01.jpg"</span>,                <span class="string">"../img/man02.jpg"</span>,                <span class="string">"../img/man03.jpg"</span>,                <span class="string">"../img/man04.jpg"</span>,                <span class="string">"../img/man05.jpg"</span>,                <span class="string">"../img/man06.jpg"</span>,                ]；    <span class="keyword">var</span> startId；<span class="comment">//开始定时器的id</span>    <span class="keyword">var</span> index；<span class="comment">//随机角标</span>    $(function () {        <span class="comment">//处理按钮是否可以使用的效果</span>        $(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="keyword">false</span>)；        $(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="keyword">true</span>)；</code></pre></li></ul><pre><code>       //1. 给开始按钮绑定单击事件        $(&quot;#startID&quot;).click(function () {            // 1.1 定义循环定时器 20毫秒执行一次            startId = setInterval(function () {                //处理按钮是否可以使用的效果                $(&quot;#startID&quot;).prop(&quot;disabled&quot;,true)；                $(&quot;#stopID&quot;).prop(&quot;disabled&quot;,false)；                //1.2生成随机角标 0-6                index = Math.floor(Math.random() * 7)；//0.000--0.999 --&gt; * 7 --&gt; 0.0-----6.9999                //1.3设置小相框的src属性                $(&quot;#img1ID&quot;).prop(&quot;src&quot;,imgs[index])；            },200)；        })；        //2. 给结束按钮绑定单击事件        $(&quot;#stopID&quot;).click(function () {            //处理按钮是否可以使用的效果            $(&quot;#startID&quot;).prop(&quot;disabled&quot;,false)；            $(&quot;#stopID&quot;).prop(&quot;disabled&quot;,true)；           // 1.1 停止定时器            clearInterval(startId)；           // 1.2 给大相框设置src属性            $(&quot;#img2ID&quot;).prop(&quot;src&quot;,imgs[index]).hide()；            //显示1秒之后            $(&quot;#img2ID&quot;).show(1000)；        })；    })；&lt;/script&gt;</code></pre><pre><code>## 0.2 插件：- 增强JQuery的功能- 实现方式：  - **$.fn.extend(object)**     - **增强**    通过Jquery获取的对象的功能  $(&quot;#id&quot;)  - **$.extend(object)**    - 增强JQeury对象自身的功能   $/jQuery</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容：&quot;&gt;&lt;a href=&quot;#今日内容：&quot; class=&quot;headerlink&quot; title=&quot;今日内容：&quot;&gt;&lt;/a&gt;今日内容：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JQuery 高级&lt;ul&gt;
&lt;li&gt;动画&lt;/li&gt;
&lt;li&gt;遍历&lt;/li&gt;
&lt;li&gt;事件绑定&lt;/li&gt;

      
    
    </summary>
    
    
      <category term="JQ" scheme="http://yoursite.com/categories/JQ/"/>
    
    
  </entry>
  
  <entry>
    <title>List-12_JQuery基础</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/JavaScript/List-12_JQuery%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/JavaScript/List-12_JQuery%E5%9F%BA%E7%A1%80/</id>
    <published>2021-04-06T12:19:56.000Z</published>
    <updated>2021-04-06T12:21:54.637Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>JQuery 基础：<ul><li>概念</li><li>快速入门</li></ul></li><li>JQuery对象和JS对象区别与转换</li><li>选择器</li><li>DOM操作</li><li>案例</li></ul><h2 id="0-1-JQuery-基础："><a href="#0-1-JQuery-基础：" class="headerlink" title="0.1 JQuery 基础："></a>0.1 JQuery 基础：</h2><p><strong>概念： 一个JavaScript框架。简化JS开发</strong></p><ul><li>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。</li><li>jQuery设计的宗旨    是“write Less，Do More”，<strong>即倡导写更少的代码，做更多的事情。</strong></li><li>它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，<strong>优化HTML文档操作、事件处理、动画设计和Ajax交互。</strong></li><li>JavaScript框架：本质上就是一些js文件，封装了js的原生代码而已</li></ul><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><ol><li><p>步骤：</p><ol><li><p>下载JQuery</p><ul><li>jquery-xxx.js 与 jquery-xxx.min.js区别：<ul><li>jquery-xxx.js：开发版本。给程序员看的，<strong>有良好的缩进和注释</strong>。体积大一些</li><li>jquery-xxx.min.js：生产版本。程序中使用，没有缩进。体积小一些。<strong>程序加载更快</strong></li></ul></li></ul></li></ol></li><li><p>导入JQuery的js文件：导入min.js文件</p></li><li><p><strong>使用</strong></p><ul><li><p>示例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div1 = $(<span class="string">"#div1"</span>);</span><br><span class="line"></span><br><span class="line">alert(div1.html());</span><br></pre></td></tr></table></figure></li></ul></li></ol><blockquote><h4 id="JQuery对象和JS对象区别与转换"><a href="#JQuery对象和JS对象区别与转换" class="headerlink" title="JQuery对象和JS对象区别与转换"></a>JQuery对象和JS对象区别与转换</h4></blockquote><ul><li>JQuery对象在操作时，<strong>更加方便</strong>。<ul><li>JQuery对象和js对象<strong>方法不通用的</strong>.</li><li>两者相互转换<ul><li>JQuery – &gt; JS ： <ul><li>JQ 对象[ 索引 ] </li><li>或者 JQ 对象.get( 索引)</li></ul></li><li>JS– &gt;JQuery：<strong>$(JS 对象)</strong></li></ul></li></ul></li></ul><h2 id="0-2-基本操作学习："><a href="#0-2-基本操作学习：" class="headerlink" title="0.2 基本操作学习："></a>0.2 基本操作学习：</h2><ul><li><p>事件绑定</p><ul><li><pre><code class="javascript"><span class="comment">//1.获取b1按钮</span>   $(<span class="string">"#b1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{       alert(<span class="string">"abc"</span>);   });&lt;!--￼<span class="number">1</span>--&gt;</code></pre></li></ul></li></ul><h2 id="0-3-选择器"><a href="#0-3-选择器" class="headerlink" title="0.3 选择器"></a>0.3 选择器</h2><ul><li><strong>筛选具有相似特征的元素</strong>(标签)</li></ul><h4 id="1）选择器分类"><a href="#1）选择器分类" class="headerlink" title="1）选择器分类"></a>1）选择器分类</h4><blockquote><h4 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h4></blockquote><ol><li>标签选择器（元素选择器）<ul><li>语法： $(“html标签名”) 获得所有匹配标签名称的元素</li></ul></li><li><strong>id选择器</strong> <ul><li>语法： $(“#id的属性值”) 获得与指定id属性值匹配的元素</li></ul></li><li>类选择器<ul><li>语法： $(“.class的属性值”) 获得与指定的class属性值匹配的元素</li></ul></li><li>并集选择器：<ul><li>语法： $(“选择器1,选择器2….”) 获取多个选择器选中的所有元素</li></ul></li></ol><blockquote><h4 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h4></blockquote><ul><li>后代选择器<ul><li>语法： $(“A B “) 选择A元素内部的<strong>所有B元素</strong>        </li></ul></li><li>子选择器<ul><li>语法： $(“A &gt; B”) 选择A元素内部的<strong>所有B子元素</strong></li></ul></li></ul><blockquote><h4 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h4></blockquote><ol><li>属性名称选择器 <ul><li>语法： $(“A[属性名]”) 包含指定属性的选择器</li></ul></li><li>属性选择器<ul><li>语法： $(“A[属性名=’值’]”) 包含指定属性等于指定值的选择器</li></ul></li><li>复合属性选择器<ul><li>语法： $(“A[属性名=’值’][]…”) 包含多个属性条件的选择器</li></ul></li></ol><blockquote><h4 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h4></blockquote><ol><li>首元素选择器 <ul><li>语法： ：first 获得选择的元素中的第一个元素</li></ul></li><li>尾元素选择器 <ul><li>语法： ：last 获得选择的元素中的最后一个元素</li></ul></li><li>非元素选择器<ul><li>语法： ：not(selector) 不包括指定内容的元素</li></ul></li><li>偶数选择器<ul><li>语法： ：even 偶数，从 0 开始计数</li></ul></li><li>奇数选择器<ul><li>语法： ：odd 奇数，从 0 开始计数</li></ul></li><li>等于索引选择器<ul><li>语法： ：eq(index) 指定索引元素</li></ul></li><li>大于索引选择器 <ul><li>语法： ：gt(index) 大于指定索引元素</li></ul></li><li>小于索引选择器 <ul><li>语法： ：lt(index) 小于指定索引元素</li></ul></li><li>标题选择器<ul><li>语法： ：header 获得标题（h1~h6）元素，固定写法</li></ul></li></ol><blockquote><h4 id="表单过滤选择器"><a href="#表单过滤选择器" class="headerlink" title="表单过滤选择器"></a>表单过滤选择器</h4></blockquote><ol><li>可用元素选择器 <ul><li>语法： ：enabled 获得可用元素</li></ul></li><li>不可用元素选择器 <ul><li>语法： ：disabled 获得不可用元素</li></ul></li><li>选中选择器 <ul><li>语法： <strong>：checked</strong> 获得<strong>单选/复选框选中的元素</strong></li></ul></li><li>选中选择器 <ul><li>语法： <strong>：selected</strong> 获得<strong>下拉框选中的元素</strong></li></ul></li></ol><h2 id="0-4-DOM操作"><a href="#0-4-DOM操作" class="headerlink" title="0.4 DOM操作"></a>0.4 DOM操作</h2><h4 id="1）内容操作"><a href="#1）内容操作" class="headerlink" title="1）内容操作"></a>1）内容操作</h4><ol><li>html()： 获取/设置元素的标签体内容   <a><font>内容</font></a>  –&gt; <font>内容</font></li><li>text()： 获取/设置元素的标签体纯文本内容   <a><font>内容</font></a> –&gt; 内容</li><li>val()： 获取/设置元素的value属性值</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取myinput 的value值</span></span><br><span class="line"><span class="keyword">var</span> value = $(<span class="string">"#myInput"</span>).val();</span><br><span class="line">alert(value);</span><br><span class="line">            $(<span class="string">"#myInput"</span>).val(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取mydiv的标签体内容</span></span><br><span class="line"><span class="keyword">var</span> html = $(<span class="string">"#myDiv"</span>).html();</span><br><span class="line">alert(html);</span><br><span class="line">            $(<span class="string">"#myDiv"</span>).html(<span class="string">"&lt;p&gt;aaaa&lt;/p&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取mydiv文本内容</span></span><br><span class="line">            <span class="keyword">var</span> text = $(<span class="string">"#myDiv"</span>).text();</span><br><span class="line">            alert(text);</span><br><span class="line">            $(<span class="string">"#myDiv"</span>).text(<span class="string">"bbb"</span>);</span><br></pre></td></tr></table></figure><h4 id="2）属性操作"><a href="#2）属性操作" class="headerlink" title="2）属性操作"></a>2）属性操作</h4><ul><li><strong>通用属性操作</strong><ol><li><strong>attr</strong>()： 获取/设置元素的属性</li><li>removeAttr()：删除属性</li><li><strong>prop</strong>()：获取/设置元素的属性</li><li>removeProp()：删除属性</li><li>attr和prop<strong>区别</strong>？</li><li>如果操作的是元素的<strong>固有属性，则建议使用prop</strong></li><li>如果操作的是元素<strong>自定义的属性，则建议使用attr</strong></li></ol></li><li><strong>对class属性操作</strong><ul><li><strong>addClass</strong>()：添加class属性值</li></ul><ol start="2"><li>removeClass()：删除class属性值</li><li><strong>toggleClass</strong>()：切换class属性<ul><li>toggleClass(“one”)： <ul><li>判断如果元素对象上存在class=”one”，则将属性值one删除掉。  如果元素对象上不存在    class=”one”，则添加</li></ul></li></ul></li><li><strong>css</strong>()：</li></ol></li></ul><h4 id="3）CRUD操作："><a href="#3）CRUD操作：" class="headerlink" title="3）CRUD操作："></a>3）CRUD操作：</h4><ul><li><strong>append</strong>()：父元素将子元素追加到末尾<ul><li>对象1.append(对象2)： 将对象2添加到对象1元素内部，并且在末尾</li></ul></li><li><strong>prepend</strong>()：父元素将子元素追加到开头<ul><li>对象1.prepend(对象2)：将对象2添加到对象1元素内部，并且在开头</li></ul></li><li>appendTo()：<ul><li>对象1.appendTo(对象2)：将对象1添加到对象2内部，并且在末尾</li></ul></li><li>prependTo()：<ul><li>对象1.prependTo(对象2)：将对象1添加到对象2内部，并且在开头</li></ul></li><li>after()：添加元素到元素后边<ul><li>对象1.after(对象2)： 将对象2添加到对象1后边。对象1和对象2是兄弟关系</li></ul></li><li>before()：添加元素到元素前边<ul><li>对象1.before(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li></ul></li><li>insertAfter()<ul><li>对象1.insertAfter(对象2)：将对象2添加到对象1后边。对象1和对象2是兄弟关系</li></ul></li><li>insertBefore()<ul><li>对象1.insertBefore(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li></ul></li><li><strong>remove</strong>()：移除元素<ul><li>对象.remove()：将对象删除掉</li></ul></li><li><strong>empty</strong>()：清空元素的所有后代元素。<ul><li>对象.empty()：将对象的后代元素全部清空，但是保留当前对象以及其属性节点</li></ul></li></ul><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h4 id="全选和全不选"><a href="#全选和全不选" class="headerlink" title="全选和全不选"></a>全选和全不选</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectAll</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="comment">//获取下边的复选框</span></span><br><span class="line">$(<span class="string">".itemSelect "</span>).prop(<span class="string">"checked"</span>,obj.checked);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="下拉菜单，左右移动"><a href="#下拉菜单，左右移动" class="headerlink" title="下拉菜单，左右移动"></a>下拉菜单，左右移动</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//toRight</span></span><br><span class="line">    $(<span class="string">"#toRight"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取右边的下拉列表对象，append(左边下拉列表选中的option)</span></span><br><span class="line">        $(<span class="string">"#rightName"</span>).append($(<span class="string">"#leftName &gt; option:selected"</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//toLeft</span></span><br><span class="line">    $(<span class="string">"#toLeft"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//appendTo   获取右边选中的option，将其移动到左边下拉列表中</span></span><br><span class="line">        $(<span class="string">"#rightName &gt; option:selected"</span>).appendTo($(<span class="string">"#leftName"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JQuery 基础：&lt;ul&gt;
&lt;li&gt;概念&lt;/li&gt;
&lt;li&gt;快速入门&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="JQ" scheme="http://yoursite.com/categories/JQ/"/>
    
    
  </entry>
  
  <entry>
    <title>List-08_Cookie_Session</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/List-08-Cookie-Session/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/List-08-Cookie-Session/</id>
    <published>2021-04-06T08:08:22.000Z</published>
    <updated>2021-04-06T08:08:58.791Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>会话技术<ul><li>Cookie</li><li>Session</li></ul></li><li>JSP：入门学习</li></ul><h3 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h3><ol><li>会话：一次会话中包含多次请求和响应。<ul><li>一次会话：<strong>浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止</strong></li></ul></li><li>功能：<strong>在一次会话的范围内的多次请求间</strong>，共享数据</li><li>方式：<ol><li><strong>客户端会话技术：Cookie</strong></li><li><strong>服务器端会话技术：Session</strong></li></ol></li></ol><h2 id="0-1-Cookie："><a href="#0-1-Cookie：" class="headerlink" title="0.1 Cookie："></a>0.1 Cookie：</h2><ul><li>概念：客户端会话技术，<strong>将数据保存到客户端</strong></li></ul><h4 id="1）快速入门："><a href="#1）快速入门：" class="headerlink" title="1）快速入门："></a>1）快速入门：</h4><ul><li><p>使用步骤：</p><ol><li><strong>创建Cookie对象，绑定数据</strong><ul><li>new Cookie(String name, String value) </li></ul></li><li><strong>发送Cookie对象</strong><ul><li>response.addCookie(Cookie cookie) </li></ul></li><li><strong>获取Cookie，拿到数据</strong><ul><li>Cookie[ ]  request.getCookies()  </li></ul></li></ol></li><li><p><strong>实现原理</strong></p><ul><li><strong>基于响应头set-cookie和请求头cookie实现</strong><ul><li><img src="https://i.loli.net/2021/01/24/AHTQi3X5kC6z1Rj.png" alt=""></li></ul></li></ul></li></ul><h4 id="2）cookie的细节"><a href="#2）cookie的细节" class="headerlink" title="2）cookie的细节"></a>2）cookie的细节</h4><blockquote><h4 id="一次可不可以发送多个cookie"><a href="#一次可不可以发送多个cookie" class="headerlink" title="一次可不可以发送多个cookie?"></a>一次可不可以发送多个cookie?</h4></blockquote><ul><li>可以<ul><li><strong>可以创建多个Cookie对象，使用response调用多次addCookie方法发送cookie即可。</strong></li></ul></li></ul><blockquote><h4 id="cookie在浏览器中保存多长时间？"><a href="#cookie在浏览器中保存多长时间？" class="headerlink" title="cookie在浏览器中保存多长时间？"></a>cookie在浏览器中保存多长时间？</h4></blockquote><ol><li><strong>默认情况下</strong>，当浏览器关闭后，Cookie数据被销毁</li><li><strong>持久化存储</strong>：<ul><li><strong>setMaxAge</strong>(int seconds)<ul><li>正数：将Cookie数据写到硬盘的文件中。<strong>持久化存储</strong>。并指定cookie存活时间，时间到后，cookie文件自动失效</li><li>负数：默认值</li><li>零：删除cookie信息</li></ul></li></ul></li></ol><blockquote><h4 id="cookie能不能存中文？"><a href="#cookie能不能存中文？" class="headerlink" title="cookie能不能存中文？"></a>cookie能不能存中文？</h4></blockquote><ul><li>在tomcat 8 之前 cookie<strong><strong>中不能直接存储中文数据</strong></strong>。<ul><li>需要将中文数据转码—一般采用URL编码(%E3)</li></ul></li><li>在tomcat 8 之后，cookie支持中文数据。特殊字符还是不支持，<strong>建议使用URL编码存储，URL解码解析</strong></li></ul><blockquote><h4 id="cookie共享问题"><a href="#cookie共享问题" class="headerlink" title="cookie共享问题"></a>cookie共享问题</h4></blockquote><ul><li>假设在一个tomcat服务器中，部署了<strong>多个web项目</strong>，那么在这些web项目中cookie<strong>能不能共享</strong>？</li></ul><ul><li><strong>默认情况下cookie不能共享</strong><ul><li>setPath(String path)：设置cookie的获取范围。默认情况下，设置当前的虚拟目录</li><li>如果要共享，则可以将path设置为”/“</li></ul></li></ul><blockquote><h4 id="不同的tomcat服务器间cookie共享问题？"><a href="#不同的tomcat服务器间cookie共享问题？" class="headerlink" title="不同的tomcat服务器间cookie共享问题？"></a>不同的tomcat服务器间cookie共享问题？</h4></blockquote><ul><li><strong>setDomain</strong>(String path)：<strong>如果设置一级域名相同</strong>，那么多个服务器之间cookie可以共享<ul><li>例如，setDomain(“.baidu.com”)：那么tieba.baidu.com和news.baidu.com中cookie可以共享</li></ul></li></ul><h4 id="3）Cookie的特点和作用"><a href="#3）Cookie的特点和作用" class="headerlink" title="3）Cookie的特点和作用"></a>3）Cookie的特点和作用</h4><ul><li>特点：<ul><li>cookie<strong>存储数据在客户端浏览器</strong></li><li>浏览器对于单个cookie <strong>的大小有限制</strong>(4kb) 以及 <strong>对同一个域名下的总</strong>cookie<strong>数量也有限制</strong>(20个)</li></ul></li></ul><ul><li>作用：<ol><li>cookie<strong>一般用于存出少量的不太敏感的数据</strong></li><li><strong>在不登录的情况下，完成服务器对客户端的身份识别</strong></li></ol></li></ul><h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><blockquote><h4 id="记住上一次访问时间"><a href="#记住上一次访问时间" class="headerlink" title="记住上一次访问时间"></a>记住上一次访问时间</h4></blockquote><ul><li>需求：<ol><li>访问一个Servlet，<strong>如果是第一次访问</strong>，则提示：您好，欢迎您首次访问。</li><li><strong>如果不是第一次访问</strong>，则提示：欢迎回来，您上次访问时间为:显示时间字符串</li></ol></li><li><img src="https://i.loli.net/2021/01/24/7CdY6MeqaAiryF9.png" alt=""></li></ul><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><ol><li>可以采用Cookie来完成</li><li><strong>在服务器中的Servlet判断是否有一个名为lastTime的cookie</strong><ol><li>有：不是第一次访问<ol><li>响应数据：欢迎回来，您上次访问时间为:2018年6月10日11:50:20</li><li>写回Cookie：lastTime=2018年6月10日11:50:01</li></ol></li><li>没有：是第一次访问<ol><li>响应数据：您好，欢迎您首次访问</li><li>写回Cookie：lastTime=2018年6月10日11:50:01</li></ol></li></ol></li></ol><h2 id="0-2-JSP入门学习"><a href="#0-2-JSP入门学习" class="headerlink" title="0.2 JSP入门学习"></a>0.2 JSP入门学习</h2><ul><li><p><strong>概念：</strong></p><ul><li>Java Server Pages： java服务器端页面</li><li>可以理解为：<strong>一个特殊的页面，其中既可以指定定义html标签，又可以定义java代码</strong></li><li><strong>用于简化书写！！！</strong></li></ul></li><li><p><strong>原理</strong></p><ul><li><strong>JSP本质上就是一个Servlet</strong></li><li><img src="https://i.loli.net/2021/01/24/dWTumt1sPGFDrIg.png" alt="JSP原理.png"></li></ul></li></ul><h4 id="1）JSP的脚本："><a href="#1）JSP的脚本：" class="headerlink" title="1）JSP的脚本："></a>1）JSP的脚本：</h4><ul><li><strong>JSP定义Java代码的方式</strong><ul><li><strong>&lt;%  代码 %&gt;</strong>：定义的java代码，在service方法中。<strong>可以在此处使用正常的java代码</strong></li><li><strong>&lt;%! 代码 %&gt;</strong>：定义的java代码，在jsp转换后的java类的成员位置。<strong>可以在此处成定义成员变量</strong></li><li><strong>&lt;%= 代码 %&gt;</strong>：定义的java代码，会输出到页面上。<strong>可以直接书写要输入的内容</strong></li></ul></li></ul><h4 id="2）JSP的内置对象："><a href="#2）JSP的内置对象：" class="headerlink" title="2）JSP的内置对象："></a>2）JSP的内置对象：</h4><ul><li>在jsp页面中<strong>不需要获取和创建，可以直接使用的对象</strong></li><li>jsp一共有9个内置对象。<ul><li>request</li><li>response</li><li>out：字符输出流对象。可以将数据输出到页面上。和response.getWriter()类似</li></ul></li></ul><ul><li><strong>response.getWriter()和out.write()的区别：</strong><ul><li>在tomcat服务器真正给客户端做出响应之前，会先找response缓冲区数据，再找out缓冲区数据。</li><li>response.getWriter()数据输出永远<strong>在out.write()之前</strong></li></ul></li></ul><h2 id="案例"><a href="#案例" class="headerlink" title="案例:"></a>案例:</h2><h4 id="改造Cookie案例"><a href="#改造Cookie案例" class="headerlink" title="改造Cookie案例"></a>改造Cookie案例</h4><h2 id="0-3-Session"><a href="#0-3-Session" class="headerlink" title="0.3 Session"></a>0.3 Session</h2><ul><li>概念：服务器端会话技术，在一次会话的多次请求间共享数据，<strong>将数据保存在服务器端的对象中</strong>。<strong>HttpSession</strong></li></ul><h4 id="1）快速入门：-1"><a href="#1）快速入门：-1" class="headerlink" title="1）快速入门："></a>1）快速入门：</h4><ol><li><strong>获取HttpSession对象：</strong><ul><li>HttpSession session = <strong>request.getSession();</strong></li></ul></li><li><strong>使用HttpSession对象：</strong><ul><li>Object <strong>getAttribute</strong>(String name)  </li><li>void <strong>setAttribute</strong>(String name, Object value)</li><li>void <strong>removeAttribute</strong>(String name)  </li></ul></li></ol><ul><li><strong>原理</strong><ul><li><strong>Session的实现是依赖于Cookie的。</strong></li><li><img src="https://i.loli.net/2021/01/24/KVYW5xLmQChsjR4.png" alt=""></li></ul></li></ul><h4 id="2）细节："><a href="#2）细节：" class="headerlink" title="2）细节："></a>2）细节：</h4><blockquote><h4 id="当客户端关闭后，服务器不关闭，两次获取session是否为同一个？"><a href="#当客户端关闭后，服务器不关闭，两次获取session是否为同一个？" class="headerlink" title="当客户端关闭后，服务器不关闭，两次获取session是否为同一个？"></a>当客户端关闭后，服务器不关闭，两次获取session是否为同一个？</h4></blockquote><ul><li><strong>默认情况下。不是。</strong></li><li>如果需要相同，则可以创建Cookie，键为JSESSIONID，设置最大存活时间，让cookie持久化保存。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cookie c = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>,session.getId());</span><br><span class="line"></span><br><span class="line">c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">response.addCookie(c);</span><br></pre></td></tr></table></figure><blockquote><h4 id="客户端不关闭，服务器关闭后，两次获取的session是同一个吗？"><a href="#客户端不关闭，服务器关闭后，两次获取的session是同一个吗？" class="headerlink" title="客户端不关闭，服务器关闭后，两次获取的session是同一个吗？"></a>客户端不关闭，服务器关闭后，两次获取的session是同一个吗？</h4></blockquote><ul><li><p><strong>不是同一个，但是要确保数据不丢失</strong>。tomcat自动完成以下工作</p><ul><li><p>session的钝化：</p><ul><li>在服务器正常关闭之前，将session对象系列化到硬盘上</li></ul></li><li><p>session的活化：</p><ul><li>在服务器启动后，将session文件转化为内存中的session对象即可。</li><li>使用Tomcat可以实现此功能，而使用idea无法实现此功能</li></ul></li></ul></li></ul><blockquote><h4 id="session什么时候被销毁？"><a href="#session什么时候被销毁？" class="headerlink" title="session什么时候被销毁？"></a>session什么时候被销毁？</h4></blockquote><ul><li>服务器关闭<ul><li>session对象调用invalidate() 。</li><li>session默认失效时间 30分钟</li></ul></li><li>选择性配置修改    <session-config>     <session-timeout>30</session-timeout></session-config></li></ul><h4 id="3）特点"><a href="#3）特点" class="headerlink" title="3）特点"></a>3）特点</h4><ul><li>session<strong>用于存储一次会话的多次请求的数据</strong>，存在服务器端<ul><li>session<strong>可以存储任意类型</strong>，任意大小的数据</li></ul></li></ul><ul><li><strong>session与Cookie的区别：</strong><ol><li>session<strong>存储数据在服务器端</strong>，Cookie在客户端</li><li>session<strong>没有数据大小限制</strong>，Cookie有</li><li>session<strong>数据安全</strong>，Cookie相对于不安全</li></ol></li></ul><h2 id="案例：验证码"><a href="#案例：验证码" class="headerlink" title="案例：验证码"></a>案例：验证码</h2><h4 id="案例需求："><a href="#案例需求：" class="headerlink" title="案例需求："></a>案例需求：</h4><ol><li>访问带有验证码的登录页面  login.jsp</li><li>用户输入用户名，密码以及验证码。<ul><li>如果用户名和密码输入有误，跳转登录页面，提示：用户名或密码错误</li><li>如果验证码输入有误，跳转登录页面，提示：验证码错误</li><li>如果全部输入正确，则跳转到主页success.jsp，显示：用户名,欢迎您</li></ul></li></ol><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h4><ul><li><img src="https://i.loli.net/2021/01/26/py3FJTmzZa1CLD8.png" alt="登录案例.png"></li></ul><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;会话技术&lt;ul&gt;
&lt;li&gt;Cookie&lt;/li&gt;
&lt;li&gt;Session&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;l
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
  </entry>
  
  <entry>
    <title>List-07_Response</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-07-Response/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-07-Response/</id>
    <published>2021-04-06T07:34:54.000Z</published>
    <updated>2021-04-06T07:37:29.103Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>HTTP协议：响应消息</li><li>Response对象</li><li>ServletContext对象</li></ul><h2 id="0-1-HTTP协议"><a href="#0-1-HTTP协议" class="headerlink" title="0.1 HTTP协议"></a>0.1 HTTP协议</h2><ul><li><strong>响应消息：服务器端发送给客户端的数据</strong></li></ul><h4 id="数据格式："><a href="#数据格式：" class="headerlink" title="数据格式："></a>数据格式：</h4><ul><li><p><strong>响应行</strong></p><ul><li><p>组成：协议/版本 响应状态码 状态码描述</p></li><li><p>响应状态码：服务器告诉客户端浏览器<strong>本次请求和响应的一个状态</strong>。<strong>状态码都是3位数字</strong> </p><ul><li><strong>分类</strong>：<ul><li>1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx多状态码</li><li>2xx：成功。代表：200</li><li>3xx：重定向。代表：302(重定向)，304(访问缓存)</li><li>4xx：<strong>客户端错误</strong>。<ul><li>代表：<ul><li><strong>404（请求路径没有对应的资源）</strong> </li><li><strong>405：请求方式没有对应的doXxx方法</strong></li></ul></li></ul></li><li>5xx：<strong>服务器端错误</strong>。代表：500(服务器内部出现异常)</li><li><strong>根据状态码，检索问题的所在之处。</strong></li><li>例如：<img src="https%EF%BC%9A%5Ci.loli.net%5C2021%5C04%5C06%5CwJZtMcDiVCN54ug.png" alt="重定向"></li></ul></li></ul></li></ul></li></ul><ul><li><p><strong>响应头：</strong></p><ol><li>格式：<code>响应头名称： 值</code></li><li>常见的响应头：<ul><li>Content-Type：服务器告诉客户端本次响应体数据格式以及编码格式</li><li>Content-disposition：服务器告诉客户端以什么格式打开响应体数据</li></ul></li><li>值：<ul><li>in-line：默认值,在当前页面内打开</li><li>attachment;filename=xxx：<strong>以附件形式打开响应体</strong>。<strong>文件下载</strong></li></ul></li></ol></li><li><p><strong>响应空行</strong></p></li><li><p><strong>响应体：传输的数据</strong></p></li></ul><ul><li><strong>响应消息示例</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Content-Type： text&#x2F;html;charset&#x3D;UTF-8</span><br><span class="line">Content-Length： 101</span><br><span class="line">Date： Wed, 06 Jun 2018 07：08：42 GMT</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;$Title$&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  hello , response</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="0-2-Response对象"><a href="#0-2-Response对象" class="headerlink" title="0.2 Response对象"></a>0.2 Response对象</h2><ul><li><p><strong>功能：设置响应消息</strong></p><ol><li><p>设置响应行</p><ul><li>格式：HTTP/1.1 200 ok</li></ul></li><li><p><strong>设置状态码：setStatus(int sc)</strong> </p></li><li><p>设置响应头：<strong>setHeader(String name, String value)</strong> </p></li><li><p>设置响应体：</p></li></ol></li><li><p><strong>示例：完成重定向</strong></p><ul><li><p>重定向：资源跳转的方式</p></li><li><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 设置状态码为302</span></span><br><span class="line">  response.setStatus(<span class="number">302</span>);</span><br><span class="line">  <span class="comment">//2.设置响应头location</span></span><br><span class="line">  response.setHeader(<span class="string">"location"</span>,<span class="string">"/day15/responseDemo2"</span>);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//简单的重定向方法</span></span><br><span class="line">response.sendRedirect(<span class="string">"/day15/responseDemo2"</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1）使用步骤："><a href="#1）使用步骤：" class="headerlink" title="1）使用步骤："></a>1）使用步骤：</h4><ol><li><p>获取输出流</p><ul><li>字符输出流：PrintWriter getWriter()</li><li>字节输出流：ServletOutputStream getOutputStream()</li></ul><ol start="2"><li>使用输出流，将数据输出到客户端浏览器</li></ol></li></ol><h4 id="2）forward和redirect-区别"><a href="#2）forward和redirect-区别" class="headerlink" title="2）forward和redirect 区别"></a>2）forward和redirect 区别</h4><ul><li><p><strong>重定向的特点： redirect</strong></p><ul><li>地址栏发生变化</li><li><strong>重定向可以访问其他站点(服务器)的资源</strong></li><li><strong>重定向是两次请求。不能使用request对象来共享数据</strong></li></ul></li><li><p><strong>转发的特点：forward</strong></p><ul><li>转发地址栏路径不变</li><li>转发只能访问当前服务器下的资源</li><li><strong>转发是一次请求，可以使用request对象来共享数据</strong></li></ul></li></ul><h4 id="3）路径写法："><a href="#3）路径写法：" class="headerlink" title="3）路径写法："></a>3）路径写法：</h4><blockquote><h4 id="相对路径："><a href="#相对路径：" class="headerlink" title="相对路径："></a>相对路径：</h4></blockquote><ul><li><p><strong>通过相对路径不可以确定唯一资源</strong></p></li><li><p>例如：<code>./index.html</code></p></li></ul><ul><li><strong>不以 /  开头，以 . 开头路径</strong></li><li>规则：找到当前资源和目标资源之间的相对位置关系<ul><li>./  ：当前目录</li><li>../  ： 后退一级目录</li></ul></li></ul><blockquote><h4 id="绝对路径："><a href="#绝对路径：" class="headerlink" title="绝对路径："></a>绝对路径：</h4></blockquote><ul><li><p><strong>通过绝对路径可以确定唯一资源</strong></p><ul><li>例如：http：//localhost/day15/responseDemo2/day15/responseDemo2</li></ul></li><li><p><strong>以  / 开头的路径</strong></p></li><li><p>规则：<strong>判断定义的路径是给谁用的</strong>？判断请求将来从哪儿发出</p><ul><li>给客户端浏览器使用：<strong>需要加虚拟目录</strong>(项目的访问路径)  /day35<ul><li>建议虚拟目录动态获取：request.getContextPath()</li><li><a> , <form> 重定向…</li></ul></li><li>给服务器使用：不需要加虚拟目录  /responseDemo1<ul><li>转发路径</li></ul></li></ul></li></ul><h4 id="4）服务器输出数据到浏览器"><a href="#4）服务器输出数据到浏览器" class="headerlink" title="4）服务器输出数据到浏览器"></a>4）服务器输出数据到浏览器</h4><blockquote><h4 id="服务器输出字符数据到浏览器"><a href="#服务器输出字符数据到浏览器" class="headerlink" title="服务器输出字符数据到浏览器"></a>服务器输出字符数据到浏览器</h4></blockquote><ul><li><p>步骤：</p><ol><li>获取字符输出流</li><li>输出数据</li></ol></li><li><p><strong>注意：乱码问题：</strong></p><ol><li><p>PrintWriter pw = response.getWriter();    获取的流的默认编码是ISO-8859-1</p></li><li><p>设置该流的默认编码</p></li><li><p>告诉浏览器响应体使用的编码</p><ul><li><pre><code class="java"><span class="comment">//简单的形式，设置编码，是在获取流之前设置</span>response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);&lt;!--￼<span class="number">3</span>--&gt;</code></pre></li></ul></li></ol></li></ul><h2 id="03-ServletContext对象："><a href="#03-ServletContext对象：" class="headerlink" title="03.ServletContext对象："></a>03.ServletContext对象：</h2><ul><li><p>概念：<strong>代表整个web应用</strong>，可以和程序的容器(服务器)来通信</p></li><li><p>ServletContext：servlet container。</p></li></ul><h4 id="获取："><a href="#获取：" class="headerlink" title="获取："></a>获取：</h4><ol><li>通过request对象获取      request.getServletContext();</li><li>通过HttpServlet获取        this.getServletContext();</li></ol><h4 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h4><ol><li><p><strong>获取MIME类型：</strong></p><ul><li><strong>MIME类型</strong>：在互联网通信过程中定义的一种文件数据类型<ul><li>格式： 大类型/小类型   <strong>text/html        image/jpeg</strong></li></ul></li><li>获取：String <strong>getMimeType</strong>(String file)  </li></ul></li><li><p><strong>域对象：共享数据</strong></p><ul><li><p><strong>setAttribute(String name,Object value)</strong></p></li><li><p><strong>getAttribute(String name)</strong></p></li><li><p><strong>removeAttribute(String name)</strong>  </p></li><li><p>ServletContext对象范围：所有用户所有请求的数据。这个东西代表整个web应用，太大了，<strong>一般不怎么会用到他。</strong></p></li></ul></li><li><p><strong>获取文件的真实(服务器)路径</strong>（重点）</p><p>方法：String <strong>getRealPath</strong>(String path)  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> b = context.getRealPath(<span class="string">"/b.txt"</span>);<span class="comment">//web目录下资源访问</span></span><br><span class="line">System.out.println(b);</span><br><span class="line">   </span><br><span class="line"><span class="built_in">String</span> c = context.getRealPath(<span class="string">"/WEB-INF/c.txt"</span>);<span class="comment">//WEB-INF目录下的资源访问</span></span><br><span class="line"> System.out.println(c);</span><br><span class="line">   </span><br><span class="line"> <span class="built_in">String</span> a = context.getRealPath(<span class="string">"/WEB-INF/classes/a.txt"</span>);<span class="comment">//src目录下的资源访问</span></span><br><span class="line"> System.out.println(a);</span><br></pre></td></tr></table></figure></li></ol><h2 id="0-4-案例："><a href="#0-4-案例：" class="headerlink" title="0.4 案例："></a>0.4 案例：</h2><blockquote><h4 id="文件下载需求："><a href="#文件下载需求：" class="headerlink" title="文件下载需求："></a>文件下载需求：</h4></blockquote><ol><li>页面显示超链接</li><li>点击超链接后弹出下载提示框</li><li>完成图片文件下载</li></ol><blockquote><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4></blockquote><ol><li>超链接指向的资源如果能够被浏览器解析，则在浏览器中展示，如果不能解析，则弹出下载提示框。不满足需求</li><li>任何资源都必须弹出下载提示框</li><li><strong>使用响应头设置资源的打开方式：</strong><ul><li><strong>content-disposition：attachment;filename=xxx</strong></li></ul></li></ol><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li><p>定义页面，编辑超链接href属性，指向Servlet，传递资源名称filename</p><ol start="2"><li>定义Servlet<ul><li>获取文件名称        </li><li>使用字节输入流加载文件进内存</li><li><strong>指定response的响应头</strong>： content-disposition：attachment;filename=xxx</li><li>将数据写出到response输出流</li></ul></li></ol></li></ol><p><strong>downloadServlet</strong></p><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><ul><li>中文文件问题<ul><li>解决思路：<ol><li>获取客户端使用的浏览器版本信息</li><li>根据不同的版本信息，设置filename的编码方式不同</li></ol></li></ul></li></ul><p><strong>DownLoadUtils</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;HTTP协议：响应消息&lt;/li&gt;
&lt;li&gt;Response对象&lt;/li&gt;
&lt;li&gt;ServletContext对
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
  </entry>
  
  <entry>
    <title>List-06_Servlet&amp;HTTP&amp;Request</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-06-Servlet&amp;HTTP&amp;Request/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-06-Servlet&amp;HTTP&amp;Request/</id>
    <published>2021-04-06T07:01:03.000Z</published>
    <updated>2021-04-06T07:02:37.228Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h3><ul><li>Servlet</li><li>HTTP协议</li><li>Request</li></ul><h2 id="0-1-Servlet："><a href="#0-1-Servlet：" class="headerlink" title="0.1 Servlet："></a>0.1 Servlet：</h2><blockquote><h4 id="Servlet的体系结构"><a href="#Servlet的体系结构" class="headerlink" title="Servlet的体系结构"></a>Servlet的体系结构</h4></blockquote><ul><li><pre><code class="cmd">Servlet -- 接口    |GenericServlet -- 抽象类    // 以后不用    |HttpServlet  -- 抽象类        //以后用这个&lt;!--￼<span class="number">0</span>--&gt;  请求方式 请求url 请求协议/版本  GET /login.html    HTTP/<span class="number">1</span>.<span class="number">1</span>  &lt;!--￼<span class="number">1</span>--&gt;</code></pre></li></ul><ul><li>响应消息数据格式    </li></ul><h2 id="0-3-Request："><a href="#0-3-Request：" class="headerlink" title="0.3 Request："></a>0.3 Request：</h2><ul><li><p>request对象和response<strong>对象的原理</strong></p><ul><li>request和response<strong>对象是由服务器创建的</strong>。我们来使用它们</li><li>request<strong>对象是来获取请求消息</strong>，response<strong>对象是来设置响应消息</strong></li><li>例如：</li><li><img src="https://i.loli.net/2021/04/06/p2xSfETGXoQMw8h.png" alt="request&amp;response对象原理"></li></ul></li><li><p><strong>Request对象继承体系结构：</strong>    </p><ul><li><pre><code class="cmd">ServletRequest        --    接口    |    继承HttpServletRequest    -- 接口    |    实现org.apache.catalina.connector.RequestFacade 类(tomcat)&lt;!--￼<span class="number">2</span>--&gt;  CREATE DATABASE day14;  USE day14;  CREATE TABLE USER(  id INT PRIMARY KEY AUTO_INCREMENT,  username VARCHAR(<span class="number">32</span>) UNIQUE <span class="keyword">NOT</span> NULL,  PASSWORD VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> NULL  );</code></pre></li></ul></li></ul><ol start="3"><li><p>创建包domain,创建类User</p></li><li><p>创建包util,编写工具类JDBCUtils</p></li><li><p>创建包dao,创建类UserDao,提供login方法</p><ul><li><strong>学会使用test检验文件的正确性</strong>（UserDao完成后，即刻开始测试）</li></ul></li><li><p>编写servlet.LoginServlet类</p><ul><li>编写FailServlet和SuccessServlet类</li></ul></li><li><p>login.html中form表单的action路径的写法</p><ul><li><strong>虚拟目录+Servlet的资源路径</strong></li></ul></li><li><p>BeanUils工具类，简化数据封装</p><ul><li><strong>用于封装JavaBean</strong></li><li><strong>JavaBean</strong>：标准的Java类</li></ul></li></ol><h4 id="4）要求："><a href="#4）要求：" class="headerlink" title="4）要求："></a>4）要求：</h4><ol><li><strong>类必须被public修饰</strong></li><li><strong>必须提供空参的构造器</strong></li><li><strong>成员变量必须使用private修饰</strong></li><li><strong>提供公共setter和getter方法</strong></li></ol><h2 id="0-4-BeanUtils工具类"><a href="#0-4-BeanUtils工具类" class="headerlink" title="0.4 BeanUtils工具类"></a>0.4 BeanUtils工具类</h2><blockquote><h4 id="功能：封装数据"><a href="#功能：封装数据" class="headerlink" title="功能：封装数据"></a>功能：封装数据</h4></blockquote><ul><li><p>概念：</p></li><li><p>成员变量：</p></li><li><p>属性：setter和getter方法截取后的产物</p><ul><li>例如：getUsername() –&gt; Username–&gt; username</li></ul></li><li><p><strong>方法</strong>：</p><ul><li>setProperty()</li><li>getProperty()</li><li><strong>populate</strong>(Object obj , Map map)：<strong>将map集合的键值对信息，封装到对应的JavaBean对象中</strong>        </li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容：&quot;&gt;&lt;a href=&quot;#今日内容：&quot; class=&quot;headerlink&quot; title=&quot;今日内容：&quot;&gt;&lt;/a&gt;今日内容：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Servlet&lt;/li&gt;
&lt;li&gt;HTTP协议&lt;/li&gt;
&lt;li&gt;Request&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
  </entry>
  
  <entry>
    <title>List-05_Tomcat&amp;Servlet</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-05-Tomcat&amp;Servlet/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-05-Tomcat&amp;Servlet/</id>
    <published>2021-04-06T06:22:21.000Z</published>
    <updated>2021-04-06T06:23:15.430Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>web相关概念回顾</li><li>web服务器软件：<strong>Tomcat</strong></li><li>Servlet入门学习</li></ul><h2 id="0-1-web相关概念回顾"><a href="#0-1-web相关概念回顾" class="headerlink" title="0.1 web相关概念回顾"></a>0.1 web相关概念回顾</h2><ol><li><p><strong>软件架构</strong></p><ol><li>C/S：客户端/服务器端</li><li>B/S：浏览器/服务器端</li></ol></li><li><p><strong>资源分类</strong></p><ol><li>静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源.静态资源可以直接被浏览器解析<ul><li>如： html,css,JavaScript</li></ul></li><li>动态资源：每个用户访问相同资源后，得到的结果可能不一样。称为动态资源。动态资源被访问后，需要先转换为静态资源，再返回给浏览器<ul><li>如：servlet/jsp,php,asp….</li></ul></li></ol></li><li><p><strong>网络通信三要素</strong></p><ol><li>IP：电子设备(计算机)在网络中的唯一标识。</li><li>端口：应用程序在计算机中的唯一标识。 0~65536</li><li>传输协议：规定了数据传输的规则</li></ol><ul><li><strong>基础协议</strong>：<ul><li>tcp：安全协议，三次握手。 速度稍慢</li><li>udp：不安全协议。 速度快</li></ul></li></ul></li><li><h3 id="web服务器软件："><a href="#web服务器软件：" class="headerlink" title="web服务器软件："></a>web服务器软件：</h3><ul><li>服务器：<strong>安装了服务器软件的计算机</strong></li><li>服务器软件：<strong>接收用户的请求，处理请求，做出响应</strong><ul><li>web服务器软件：接收用户的请求，处理请求，做出响应。<ul><li>在web服务器软件中，可以部署web项目，让用户通过浏览器来访问这些项目</li><li>web容器</li></ul></li></ul></li><li><strong>常见的java相关的web服务器软件</strong>：<ul><li>webLogic：oracle公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</li><li>webSphere：IBM公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</li><li>JBOSS：JBOSS公司的，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</li><li>Tomcat：Apache基金组织，中小型的JavaEE服务器，仅仅支持少量的JavaEE规范servlet/jsp。开源的，免费的。</li><li>JavaEE：Java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</li></ul></li></ul></li></ol><h2 id="0-2-Tomcat："><a href="#0-2-Tomcat：" class="headerlink" title="0.2 Tomcat："></a>0.2 Tomcat：</h2><ul><li>web服务器软件</li></ul><h4 id="1）快速入门"><a href="#1）快速入门" class="headerlink" title="1）快速入门"></a>1）快速入门</h4><ol><li><p>下载：<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></p></li><li><p>安装：解压压缩包即可。</p><ul><li>注意：安装目录建议不要有中文和空格</li></ul></li><li><p>卸载：删除目录就行了</p></li><li><p><strong>启动</strong>：</p><ul><li>bin/startup.bat ,双击运行该文件即可</li><li><strong>访问</strong>：浏览器输入：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> 回车访问自己<ul><li>http://别人的ip:8080 访问别人</li></ul></li></ul></li></ol><ul><li><strong>可能遇到的问题</strong>：<ul><li>黑窗口一闪而过：<ul><li>原因： 没有正确配置JAVA_HOME环境变量</li><li>解决方案：正确配置JAVA_HOME环境变量</li></ul></li><li><strong>启动报错</strong>：<ul><li>暴力：找到占用的端口号，并且找到对应的进程，杀死该进程<ul><li>netstat -ano</li></ul></li><li>温柔：修改自身的端口号<ul><li>conf/server.xml</li><li>&lt;Connector port=”8888” protocol=”HTTP/1.1”<pre><code>connectionTimeout=&quot;20000&quot;redirectPort=&quot;8445&quot; /&gt;</code></pre></li></ul></li></ul></li><li><strong>一般会将tomcat的默认端口号修改为80</strong>。80端口号是http协议的默认端口号。<ul><li>好处：在访问时，就不用输入端口号</li></ul></li></ul></li></ul><ol start="5"><li><p><strong>关闭</strong>：</p><ol><li>正常关闭：<ul><li>bin/shutdown.bat</li><li>ctrl+c</li></ul></li><li>强制关闭：<ul><li>点击启动窗口的<strong>×</strong></li></ul></li></ol></li></ol><h4 id="2）配置"><a href="#2）配置" class="headerlink" title="2）配置:"></a>2）配置:</h4><ul><li><p><strong>部署项目的方式</strong>：</p><ul><li><p><strong>1、直接将项目放到webapps目录下即可。</strong></p><ul><li><p>/hello：项目的访问路径</p></li><li><pre><code class="cmd">--&gt; 虚拟目录例如：localhost/hello&lt;!--￼<span class="number">0</span>--&gt;</code></pre></li></ul></li><li><p><strong>3、在conf\Catalina\localhost创建任意名称的xml文件</strong>。在文件中编写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context docBase&#x3D;&quot;D:\hello&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><ul><li>虚拟目录：xml文件的名称</li></ul></li></ul></li><li></li><li><h4 id="静态项目和动态项目："><a href="#静态项目和动态项目：" class="headerlink" title="静态项目和动态项目："></a>静态项目和动态项目：</h4><ul><li><p>目录结构</p><ul><li><p>Java<strong>动态项目</strong>的目录结构：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 项目的根目录</span><br><span class="line">-- WEB-INF目录：</span><br><span class="line">-- web.xml：web项目的核心配置文件</span><br><span class="line">-- classes目录：放置字节码文件的目录</span><br><span class="line">-- lib目录：放置依赖的jar包</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><pre><code>* 将Tomcat集成到IDEA中，并且创建JavaEE的项目，部署项目。</code></pre><ul><li><p><strong>tomcat目录结构</strong></p><ul><li><img src="https://i.loli.net/2021/04/06/nFoKvpS5iXZHkfm.png" alt="tomcat目录结构"></li></ul></li></ul><h2 id="0-3-Servlet：server-applet"><a href="#0-3-Servlet：server-applet" class="headerlink" title="0.3 Servlet：server applet"></a>0.3 Servlet：server applet</h2><ul><li><strong>概念：运行在服务器端的小程序</strong><ul><li>Servlet就是一个接口，定义了Java类被浏览器访问到    (tomcat 识别)的规则。</li><li>将来我们自定义一个类，实现Servlet接口，复写方法。</li><li>例如：<img src="https://i.loli.net/2021/04/06/G8vxts6UupIPH1z.png" alt="Servlet"></li></ul></li></ul><h4 id="1）快速入门："><a href="#1）快速入门：" class="headerlink" title="1）快速入门："></a>1）快速入门：</h4><ol><li><p>创建JavaEE项目</p></li><li><p>定义一个类，实现Servlet接口</p><ul><li><pre><code>public class ServletDemo1 implements Servlet<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 实现接口中的抽象方法</span><br><span class="line"></span><br><span class="line">4. 配置Servlet</span><br><span class="line"></span><br><span class="line">   在web.xml中配置：</span><br><span class="line"></span><br><span class="line">   &#96;&#96;&#96;xml</span><br><span class="line">   &lt;!--配置Servlet --&gt;</span><br><span class="line">   &lt;servlet&gt;</span><br><span class="line">   &lt;servlet-name&gt;demo1&lt;&#x2F;servlet-name&gt;</span><br><span class="line">       &lt;servlet-class&gt;cn.itcast.web.servlet.ServletDemo1&lt;&#x2F;servlet-class&gt;</span><br><span class="line">   &lt;&#x2F;servlet&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;servlet-mapping&gt;</span><br><span class="line">       &lt;servlet-name&gt;demo1&lt;&#x2F;servlet-name&gt;</span><br><span class="line">       &lt;url-pattern&gt;&#x2F;demo1&lt;&#x2F;url-pattern&gt;</span><br><span class="line">   &lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ol><h4 id="2）执行原理："><a href="#2）执行原理：" class="headerlink" title="2）执行原理："></a>2）执行原理：</h4><ol><li>当服务器接受到客户端浏览器的请求后，会解析请求URL路径，<strong>获取访问的Servlet的资源路径</strong></li><li><strong>查找web.xml文件</strong>，是否有对应的<url-pattern>标签体内容。</li><li><strong>如果有</strong>，则在找到对应的<servlet-class>全类名</li><li><strong>tomcat会将字节码文件加载进内存Class.forName()，并且创建其对象 cls.newInstance()</strong></li><li><strong>调用其方法(Service)</strong></li></ol><h4 id="3）Servlet中的生命周期方法："><a href="#3）Servlet中的生命周期方法：" class="headerlink" title="3）Servlet中的生命周期方法："></a>3）Servlet中的生命周期方法：</h4><ol><li><strong>被创建</strong>：执行init方法，只执行一次<ul><li>Servlet什么时候被创建？<ul><li><strong>默认情况下</strong>，第一次被访问时，Servlet被创建<ul><li>可以<strong>配置执行Servlet的创建时机。</strong><ul><li>在<servlet>标签下配置<ol><li><strong>第一次被访问时，创建</strong><ul><li><load-on-startup>的值为负数</li></ul></li><li><strong>在服务器启动时，创建</strong><ul><li><load-on-startup>的值为0或正整数</li></ul></li></ol></li></ul></li></ul></li><li>Servlet的 Init 方法，只执行一次，说明一个Servlet在内存中只存在一个对象，<strong>Servlet是单例的</strong></li><li>多个用户同时访问时，可能存在线程安全问题。<ul><li><strong>解决</strong>：<strong>尽量不要在Servlet中定义成员变量</strong>。即使定义了成员变量，也不要对修改值</li></ul></li></ul></li></ul></li><li><strong>提供服务</strong>：执行service方法，执行多次<ul><li>每次访问Servlet时，Service方法都会被调用一次。</li></ul></li><li><strong>被销毁</strong>：执行destroy方法，只执行一次<ul><li>Servlet被销毁时执行。服务器关闭时，Servlet被销毁</li><li>只有服务器正常关闭时，才会执行destroy方法。</li><li><strong>destroy方法在Servlet被销毁之前执行，一般用于释放资源</strong></li></ul></li></ol><h2 id="0-4-Servlet3-0："><a href="#0-4-Servlet3-0：" class="headerlink" title="0.4 Servlet3.0："></a>0.4 Servlet3.0：</h2><ul><li><h4 id="好处："><a href="#好处：" class="headerlink" title="好处："></a><strong>好处</strong>：</h4><ul><li>支持注解配置。<strong>可以不需要</strong>web.xml了。</li></ul></li></ul><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>创建JavaEE项目，选择Servlet的版本3.0以上，可以不创建web.xml</li><li>定义一个类，实现Servlet接口</li><li>复写方法</li><li><strong>在类上使用@WebServlet注解，进行配置</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"资源路径"</span>)</span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> WebServlet &#123;</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;<span class="comment">//相当于&lt;Servlet-name&gt;</span></span><br><span class="line"></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//代表urlPatterns()属性配置</span></span><br><span class="line"></span><br><span class="line">    String[] urlPatterns() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//相当于&lt;url-pattern&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">loadOnStartup</span><span class="params">()</span> <span class="keyword">default</span> -1</span>;<span class="comment">//相当于&lt;load-on-startup&gt;</span></span><br><span class="line"></span><br><span class="line">    WebInitParam[] initParams() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">asyncSupported</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">smallIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">largeIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">displayName</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0-5-IDEA与tomcat的相关配置"><a href="#0-5-IDEA与tomcat的相关配置" class="headerlink" title="0.5 IDEA与tomcat的相关配置"></a>0.5 IDEA与tomcat的相关配置</h2><ol><li><p>IDEA会为每一个tomcat部署的项目单独建立一份配置文件</p><ul><li>查看控制台的<strong>log</strong>：<strong>Using CATALINA_BASE</strong>:   “C:\Users\fqy.IntelliJIdea2018.1\system\tomcat_itcast”</li></ul></li><li><p><strong>工作空间项目和 tomcat部署的web项目</strong></p><ul><li><strong>tomcat真正访问的是“tomcat部署的web项目”，</strong></li><li>“<strong>tomcat部署的web项目”对应着”工作空间项目” 的web目录下的所有资源</strong></li><li><strong>WEB-INF目录下的资源不能被浏览器直接访问。</strong></li></ul></li><li><p><strong>断点调试：使用”小虫子”启动 dubug 启动</strong></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;web相关概念回顾&lt;/li&gt;
&lt;li&gt;web服务器软件：&lt;strong&gt;Tomcat&lt;/strong&gt;&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
  </entry>
  
  <entry>
    <title>List-10综合案例</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/List-10%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/List-10%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/</id>
    <published>2021-04-06T01:40:55.000Z</published>
    <updated>2021-04-06T01:49:12.003Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li><p>简单功能</p><ul><li>列表查询</li><li>登录</li><li>添加</li><li>删除</li><li>修改</li></ul></li><li><p>复杂功能</p><ul><li>删除选中</li><li>分页查询<ul><li>好处：<ul><li>减轻服务器内存的开销</li><li>提升用户体验</li></ul></li></ul></li><li>复杂条件查询</li></ul></li></ul><h2 id="0-1-简单功能"><a href="#0-1-简单功能" class="headerlink" title="0.1 简单功能"></a>0.1 简单功能</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ol><li>调整页面，加入验证码功能</li><li>代码实现</li></ol><h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p><img src="https://i.loli.net/2021/04/06/ouSU7zgOWshtDA8.png" alt="3.添加功能"></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><img src="https://i.loli.net/2021/04/06/ouSU7zgOWshtDA8.png" alt="4.删除功能"></p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p><img src="https://i.loli.net/2021/04/06/ouSU7zgOWshtDA8.png" alt="5.修改功能"></p><h2 id="0-2-复杂功能"><a href="#0-2-复杂功能" class="headerlink" title="0.2 复杂功能"></a>0.2 复杂功能</h2><h3 id="删除选中"><a href="#删除选中" class="headerlink" title="删除选中"></a>删除选中</h3><ul><li><img src="https://i.loli.net/2021/03/26/bMwvQxP7iluJLqC.png" alt=""></li></ul><ul><li><strong>提交被选中项的最佳方案是</strong>：数据表格外层，<strong>套上一层form表单</strong></li><li>没有成功     <strong>应该是表单没有提交成功</strong>  delServletServlet无法获取到，所选中的项目</li></ul><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><ul><li><p><strong>解决实际问题的注意事项</strong></p><ul><li>清楚输入和输出，解决输入和输出之间的转化。也就是设计算法，想好问题的解决思路。</li><li>算法的定义：根据输入，运行有限的代码语句，从而得到输出。</li></ul></li><li><p><img src="https://i.loli.net/2021/04/05/U1Yz8WmugT6wi7l.png" alt=""></p></li><li><p><img src="https://i.loli.net/2021/04/05/Y7sZFBhv2TKHC5n.png" alt=""></p><ul><li><p><strong>代码实现步骤</strong></p><ul><li>根据思路，逐步实现各个方法和功能</li><li>例如，按照构思思路，先完成PageBean，<strong>servlet</strong>，<strong>然后继续完成</strong>service，dao层的相关方法。</li></ul></li><li><p>分页显示信息，取代了全部信息直接展示。</p></li></ul></li></ul><h2 id="案例：用户信息列表展示"><a href="#案例：用户信息列表展示" class="headerlink" title="案例：用户信息列表展示"></a>案例：用户信息列表展示</h2><ul><li>需求：用户信息的增删改查操作</li></ul><h4 id="设计："><a href="#设计：" class="headerlink" title="设计："></a>设计：</h4><ol><li><p>技术选型：<strong>Servlet+JSP+MySQL+JDBCTempleat+Duird+BeanUtilS+tomcat</strong></p></li><li><p>数据库设计：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database day12; -- 创建数据库</span><br><span class="line">use day12;    -- 使用数据库</span><br><span class="line">create table user(   -- 创建表</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">name varchar(20) not null,</span><br><span class="line">gender varchar(5),</span><br><span class="line">age int,</span><br><span class="line">address varchar(32),</span><br><span class="line">qqvarchar(20),</span><br><span class="line">email varchar(50),</span><br><span class="line">    username varchar(10),</span><br><span class="line">    password varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>开发：</p><ul><li>环境搭建<ul><li>创建数据库环境</li><li>创建项目，导入需要的jar包</li><li>编码</li></ul></li></ul></li><li><p>测试</p></li><li><p>部署运维</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;简单功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列表查询&lt;/li&gt;
&lt;li&gt;登录&lt;/li&gt;
&lt;li&gt;添加&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
  </entry>
  
  <entry>
    <title>List-11_Filter&amp;Listener</title>
    <link href="http://yoursite.com/2021/04/06/JavaWeb/List-11-Filter&amp;Listener/"/>
    <id>http://yoursite.com/2021/04/06/JavaWeb/List-11-Filter&amp;Listener/</id>
    <published>2021-04-06T01:34:44.000Z</published>
    <updated>2021-04-16T12:46:18.160Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>Filter：过滤器</li><li>Listener：监听器</li></ul><h2 id="0-1-Filter：过滤器"><a href="#0-1-Filter：过滤器" class="headerlink" title="0.1 Filter：过滤器"></a>0.1 Filter：过滤器</h2><ol><li><h4 id="概念："><a href="#概念：" class="headerlink" title="概念："></a><strong>概念</strong>：</h4><ul><li>生活中的过滤器：净水器,空气净化器，土匪、</li><li>web中的过滤器：当访问服务器的资源时，过滤器可以将请求拦截下来，完成一些特殊的功能。</li><li><strong>过滤器的作用</strong>：<ul><li><strong>一般用于完成通用的操作</strong>。如：<strong>登录验证</strong>、统一编码处理、敏感字符过滤…</li></ul></li><li>例如，<ul><li><img src="https://i.loli.net/2021/04/07/G5ZSBs8TFJazA7C.png" alt="1.Filter过滤器"></li></ul></li></ul></li></ol><h4 id="2）快速入门："><a href="#2）快速入门：" class="headerlink" title="2）快速入门："></a>2）快速入门：</h4><ul><li><p>步骤：</p><ol><li><p>定义一个类，实现接口Filter</p></li><li><p>复写方法</p></li><li><p>配置拦截路径</p><ol><li>web.xml</li><li>注解(<strong>常用</strong>)</li></ol></li></ol></li><li><p>代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)<span class="comment">//访问所有资源之前，都会执行该过滤器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterDemo1</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"filterDemo1被执行了...."</span>);<span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​            </p><h4 id="3）过滤器细节："><a href="#3）过滤器细节：" class="headerlink" title="3）过滤器细节："></a>3）过滤器细节：</h4><ol><li>web.xml配置    <filter>       <filter-name>demo1</filter-name>       <filter-class>cn.itcast.web.filter.FilterDemo1</filter-class>   </filter>   <filter-mapping>       <filter-name>demo1</filter-name>           <!-- 拦截路径 -->      <url-pattern>/*</url-pattern>  </filter-mapping></li><li><strong>过滤器执行流程</strong><ol><li>执行过滤器</li><li>执行放行后的资源</li><li>回来执行过滤器放行代码下边的代码</li></ol></li><li><strong>过滤器生命周期方法</strong><ul><li>init：在服务器启动后，会创建Filter对象，然后调用init方法。只执行一次。<strong>用于加载资源</strong></li><li>doFilter：每一次请求被拦截资源时，会执行。执行多次</li><li>destroy：在服务器关闭后，Filter对象被销毁。如果服务器是正常关闭，则会执行destroy方法。只执行一次。<strong>用于释放资源</strong></li></ul></li></ol><p><strong>4.过滤器配置详解</strong></p><ul><li><p><strong>拦截路径配置</strong>：</p><ul><li><p>具体资源路径： /index.jsp   只有访问index.jsp资源时，过滤器才会被执行</p></li><li><p>拦截目录： /user/*    访问/user下的所有资源时，过滤器都会被执行</p></li><li><p>后缀名拦截： *.jsp        访问所有后缀名为jsp资源时，过滤器都会被执行</p></li><li><p>拦截所有资源：/*        访问所有资源时，过滤器都会被执行</p></li></ul></li><li><p><strong>拦截方式配置</strong>：资源被访问的方式</p><ul><li><p><strong>注解配置</strong>：</p><ul><li><p>设置dispatcherTypes属性</p><ol><li>REQUEST：默认值。<strong>浏览器直接请求资源</strong></li><li>FORWARD：<strong>转发访问资源</strong></li><li>INCLUDE：包含访问资源</li><li>ERROR：错误跳转资源</li><li>ASYNC：异步访问资源</li></ol></li></ul></li><li><p><strong>web.xml配置</strong></p><ul><li>设置<dispatcher></dispatcher>标签即可</li></ul></li></ul></li></ul><p>5、<strong>过滤器链</strong>(配置多个过滤器)</p><ul><li><strong>执行顺序</strong>：如果有两个过滤器：过滤器1和过滤器2<ol><li>过滤器1</li><li>过滤器2</li><li>资源执行</li><li>过滤器2</li><li>过滤器1 </li></ol></li></ul><ul><li><strong>过滤器先后顺序问题</strong>：<ol><li>注解配置：<strong>按照类名的字符串比较规则比较</strong>，值小的先执行<ul><li>例如： AFilter 和 BFilter，AFilter就先执行了。</li></ul></li><li>web.xml配置： <filter-mapping>谁定义在上边，谁先执行</li></ol></li></ul><h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><h4 id="1）案例1-登录验证"><a href="#1）案例1-登录验证" class="headerlink" title="1）案例1_登录验证"></a>1）案例1_登录验证</h4><ul><li>需求：<ol><li>访问day17_case案例的资源。验证其是否登录</li><li>如果登录了，则直接放行。</li><li>如果没有登录，则跳转到登录页面，提示”您尚未登录，请先登录”。</li></ol></li><li><img src="https://i.loli.net/2021/04/07/Hk61AnxV8JeDGWa.png" alt="2.案例1_登录验证"></li></ul><h4 id="2）案例2-敏感词汇过滤"><a href="#2）案例2-敏感词汇过滤" class="headerlink" title="2）案例2_敏感词汇过滤"></a>2）案例2_敏感词汇过滤</h4><ul><li><p>需求：</p><ol><li>对day17_case案例录入的数据进行敏感词汇过滤</li><li>敏感词汇参考《敏感词汇.txt》</li><li>如果是敏感词汇，替换为 *** </li></ol></li><li><p><strong>分析</strong>：</p><ol><li>对request对象进行增强。增强获取参数相关方法</li><li>放行。传递代理对象</li><li><img src="https://i.loli.net/2021/04/07/AaySZqpg81veobR.png" alt="3.过滤敏感词汇"></li></ol></li></ul><h4 id="3）增强对象的功能："><a href="#3）增强对象的功能：" class="headerlink" title="3）增强对象的功能："></a>3）增强对象的功能：</h4><ul><li><p><strong>设计模式</strong>：<strong>一些通用的解决固定问题的方式</strong></p><ol><li><p>装饰模式</p></li><li><h4 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h4><ol><li>概念：<ul><li>真实对象：被代理的对象</li><li>代理对象：</li><li>代理模式：代理对象代理真实对象，达到增强真实对象功能的目的</li><li><img src="https://i.loli.net/2021/04/07/uKYabAjZHEoWTIi.png" alt="4.代理"></li></ul></li><li>实现方式：<pre><code>1. 静态代理：有一个类文件描述代理模式2. 动态代理：在内存中形成代理类</code></pre></li><li><strong>实现步骤</strong>：<ol><li>代理对象和真实对象实现相同的接口</li><li>代理对象 = Proxy.newProxyInstance();</li><li>使用代理对象调用方法。</li><li>增强方法</li></ol></li><li><strong>增强方式</strong>：<ul><li>增强参数列表</li><li>增强返回值类型</li><li>增强方法体执行逻辑    </li></ul></li></ol></li></ol></li></ul><h2 id="0-2-Listener：监听器"><a href="#0-2-Listener：监听器" class="headerlink" title="0.2 Listener：监听器"></a>0.2 Listener：监听器</h2><ul><li><p><strong>概念</strong>：web的三大组件之一。</p><ul><li><h4 id="事件监听机制"><a href="#事件监听机制" class="headerlink" title="事件监听机制"></a>事件监听机制</h4><ul><li>事件    ：一件事情</li><li>事件源 ：事件发生的地方</li><li>监听器 ：一个对象</li><li>注册监听：将事件、事件源、监听器绑定在一起。 当事件源上发生某个事件后，执行监听器代码</li></ul></li></ul></li></ul><h3 id="ServletContextListener："><a href="#ServletContextListener：" class="headerlink" title="ServletContextListener："></a>ServletContextListener：</h3><blockquote><h4 id="监听ServletContext对象的创建和销毁"><a href="#监听ServletContext对象的创建和销毁" class="headerlink" title="监听ServletContext对象的创建和销毁"></a>监听ServletContext对象的创建和销毁</h4></blockquote><ul><li><p>方法：</p><ul><li>void <strong>contextDestroyed</strong>(ServletContextEvent sce) ：ServletContext对象被销毁之前会调用该方法</li><li>void <strong>contextInitialized</strong>(ServletContextEvent sce) ：ServletContext对象创建后会调用该方法</li></ul></li><li><p><strong>步骤</strong>：</p><ol><li><p>定义一个类，实现ServletContextListener接口</p></li><li><p>复写方法</p></li><li><p>配置</p><ol><li><p>web.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;listener&gt;</span><br><span class="line">&lt;listener-class&gt;cn.itcast.web.listener.ContextLoaderListener&lt;&#x2F;listener-class&gt;   &lt;&#x2F;listener&gt;</span><br><span class="line"></span><br><span class="line">* 指定初始化参数&lt;context-param&gt;</span><br></pre></td></tr></table></figure></li><li><p>注解：</p><ul><li>@WebListener</li></ul></li></ol></li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Filter：过滤器&lt;/li&gt;
&lt;li&gt;Listener：监听器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;0-1-
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
  </entry>
  
  <entry>
    <title>List-09_EL&amp;JSTL笔记</title>
    <link href="http://yoursite.com/2021/04/05/JavaWeb/JSP/List-09_EL&amp;JSTL%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2021/04/05/JavaWeb/JSP/List-09_EL&amp;JSTL%E7%AC%94%E8%AE%B0/</id>
    <published>2021-04-05T03:22:59.000Z</published>
    <updated>2021-04-05T03:24:02.845Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li><p><strong>JSP入门</strong></p><ul><li>指令</li><li>注释</li><li>内置对象</li></ul></li><li><p>MVC开发模式</p></li><li><p>EL表达式</p></li><li><p><strong>JSTL标签</strong></p></li><li><p>三层架构</p></li></ul><h2 id="0-1-JSP"><a href="#0-1-JSP" class="headerlink" title="0.1 JSP"></a>0.1 JSP</h2><h4 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h4><ul><li>作用：<strong>用于配置JSP页面，导入资源文件</strong></li><li>格式：<ul><li><strong>&lt;%@ 指令名称 属性名1=属性值1 属性名2=属性值2 … %&gt;</strong></li></ul></li></ul><ul><li><p><strong>分类</strong>：</p><ul><li><p><strong>page： 配置JSP页面的</strong></p><ul><li><strong>contentType</strong>：<strong>等同于response.setContentType()</strong><ul><li>设置响应体的mime类型以及字符集</li><li>设置当前JSP页面的编码（<strong>只能是高级的IDE才能生效</strong>，如果使用低级工具，则需要设置pageEncoding属性设置当前页面的字符集）</li></ul></li><li><strong>import</strong>：导包</li><li><strong>errorPage</strong>：<strong>当前页面发生异常后，会自动跳转到指定的错误页面</strong><ul><li><strong>isErrorPage</strong>：<strong>标识当前页面是否是错误页面</strong>。<strong>和 errorPage 配套使用</strong><ul><li><strong>true</strong>：是，可以使用内置对象exception；<strong>false</strong>：<strong>否。默认值。不可以使用内置对象exception</strong></li></ul></li></ul></li></ul></li><li><p><strong>include    ： 页面包含的。导入页面的资源文件</strong></p><ul><li>&lt;%@include file=”top.jsp”%&gt;</li></ul></li><li><p><strong>taglib ： 导入资源</strong></p><ul><li>&lt;%@ taglib prefix=”c” uri=”<a href="http://java.sun.com/jsp/jstl/core&quot;" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/core&quot;</a> %&gt;</li><li><strong>prefix：前缀，自定义的</strong></li></ul></li></ul></li></ul><h4 id="注释"><a href="#注释" class="headerlink" title="注释:"></a>注释:</h4><ol><li><p>html注释：</p><!-- -->:只能注释html代码片段</li><li><p><strong>JSP注释：推荐使用</strong><br><strong>&lt;%– –%&gt;：可以注释所有</strong></p></li></ol><ul><li>*<em>使用快捷键即可生成相应的注释方式。    Ctrl + Shift + / *</em></li></ul><h4 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h4><ul><li><p><strong>在JSP页面中不需要创建，直接使用的对象</strong></p></li><li><p>一共有9个：</p><ul><li>​    <strong>变量名                    真实类型                            作用</strong></li><li><strong>pageContext            PageContext                       当前页面共享数据，还可以获取其他八个内置对象</strong></li><li><strong>request                     HttpServletRequest             一次请求访问的多个资源(转发)</strong></li><li><strong>session                    HttpSession                         一次会话的多个请求间</strong></li><li><strong>application               ServletContext                     所有用户间共享数据</strong></li><li><strong>response                  HttpServletResponse          响应对象</strong></li></ul></li></ul><ul><li><strong>page                        Object                                  当前页面(Servlet)的对象  this</strong></li><li><strong>out                           JspWriter                              输出对象，数据输出到页面上</strong></li><li><strong>config                      ServletConfig                       Servlet的配置对象</strong></li><li><strong>exception                 Throwable                           异常对象</strong></li></ul><p>​    </p><h2 id="0-2-MVC：开发模式"><a href="#0-2-MVC：开发模式" class="headerlink" title="0.2 MVC：开发模式"></a>0.2 MVC：开发模式</h2><ul><li>JSP演变历史<ul><li>早期只有servlet，只能使用response输出标签数据，非常麻烦</li><li>后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作</li><li><strong>再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性</strong></li></ul></li></ul><h4 id="MVC："><a href="#MVC：" class="headerlink" title="MVC："></a>MVC：</h4><ol><li><strong>M：Model，模型。JavaBean</strong><ul><li><strong>完成具体的业务操作，如：查询数据库，封装对象</strong></li></ul></li><li><strong>V：View，视图。JSP</strong><ul><li><strong>展示数据</strong></li></ul></li><li><strong>C：Controller，控制器。Servlet</strong><ul><li><strong>获取用户的输入</strong></li><li><strong>调用模型</strong></li><li><strong>将数据交给视图进行展示</strong></li></ul></li></ol><ul><li><strong>优缺点：</strong><ul><li>优点：<ul><li>耦合性低，方便维护，可以利于分工协作</li><li>重用性高</li></ul></li><li>缺点：<ul><li>使得项目架构变得复杂，对开发人员要求高</li></ul></li></ul></li></ul><h2 id="03-EL表达式"><a href="#03-EL表达式" class="headerlink" title="03.EL表达式"></a>03.EL表达式</h2><ul><li><p>概念：Expression Language 表达式语言</p></li><li><p>作用：<strong>替换和简化</strong>jsp页面中java代码的编写</p></li><li><p><strong>语法：${表达式}</strong>,例如 ${user.id}</p></li><li><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><ul><li><strong>JSP默认支持el表达式的</strong>。如果要忽略el表达式<ul><li>忽略当前jsp页面中所有的el表达式 设置jsp中page指令中：<strong>isELIgnored=”true”</strong>    </li><li>忽略单个el表达式  ${表达式} ：</li></ul></li></ul></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><blockquote><h4 id="运算："><a href="#运算：" class="headerlink" title="运算："></a>运算：</h4></blockquote><ul><li>运算符：<ul><li>算数运算符： <strong>+ - *    /(div)    %(mod)</strong></li><li>比较运算符： &gt; &lt; &gt;= &lt;= == !=</li><li>逻辑运算符： <strong>&amp;&amp; (and)     || (or)    ! (not)</strong></li><li><strong>空运算符： empty</strong><ul><li><strong>功能</strong>：用于判断字符串、集合、数组对象是否为null或者长度是否为0<ul><li><strong>${empty list}</strong>：判断字符串、集合、数组对象是否为null或者长度为0</li><li><strong>${not empty str}</strong>：表示判断字符串、集合、数组对象是否不为null 并且 长度&gt;0</li></ul></li></ul></li></ul></li></ul><blockquote><h4 id="获取值"><a href="#获取值" class="headerlink" title="获取值"></a>获取值</h4></blockquote><ul><li>el表达式<strong>只能从域对象中获取值</strong></li></ul><p><strong>语法</strong>：</p><ul><li><p><strong>1.${域名称.键名}：从指定域中获取指定键的值</strong></p><ul><li><strong>域名称：</strong><ul><li>pageScope        –&gt; pageContext</li><li>requestScope     –&gt; request</li><li>sessionScope     –&gt; session</li><li>applicationScope –&gt; application（ServletContext）</li></ul></li></ul><p>例如：在request域中存储了name=张三，获取name对应的value值</p><p>​    获取：${requestScope.name}</p></li><li><p><strong>2. ${ 键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。</strong></p></li><li><p><strong>3.获取对象、List集合、Map集合的值</strong></p><ul><li>对象：${域名称.键名.属性名}    本质上会去调用对象的getter方法</li><li>List集合：${域名称.键名[索引]}</li><li>Map集合：<ul><li>${域名称.键名.key名称}</li><li>${域名称.键名[“key名称”]}</li></ul></li></ul></li><li><p><strong>注意：</strong></p><ul><li><p><strong>对象的属性</strong></p><ul><li><p>setter或getter方法，去掉set或get，在将剩余部分，首字母变为小写。</p><p>例如，<strong>setName –&gt; Name –&gt; name</strong>；<strong>getBirStr –&gt; BirStr –&gt; birStr</strong></p></li></ul></li></ul></li></ul><h4 id="隐式对象："><a href="#隐式对象：" class="headerlink" title="隐式对象："></a>隐式对象：</h4><ul><li><p>el表达式中有11个隐式对象</p><ul><li><p><strong>pageContext：</strong></p><ul><li><p><strong>获取JSP其他八个内置对象</strong></p><p><strong>例如</strong>，常用方法，<strong>${pageContext.request.contextPath}：动态获取虚拟目录</strong>                </p></li></ul></li></ul></li></ul><p>​    </p><h2 id="04-JSTL"><a href="#04-JSTL" class="headerlink" title="04.JSTL"></a>04.JSTL</h2><ul><li><p>概念：JavaServer Pages Tag Library  <strong>JSP标准标签库</strong></p><ul><li>是由Apache组织提供的开源的免费的jsp标签   &lt;标签&gt;</li></ul></li><li><p><strong>作用</strong>：用于<strong>简化和替换</strong>jsp页面上的java代码        </p></li></ul><h4 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h4><ol><li>导入jstl相关jar包</li><li>引入标签库：taglib指令：  &lt;%@ taglib %&gt;</li><li>使用标签</li></ol><h4 id="常用的JSTL标签"><a href="#常用的JSTL标签" class="headerlink" title="常用的JSTL标签"></a>常用的JSTL标签</h4><ul><li><p><strong>if：相当于java代码的if语句</strong></p><ul><li>属性：<ul><li>test 属性，接受boolean表达式<ul><li>如果表达式为true，则显示  if  标签体内容；如果为false，则不显示标签体内容</li></ul></li><li>一般情况下，test属性值会<strong>结合el表达式一起使用</strong></li></ul></li></ul></li><li><p><strong>注意：</strong></p><ul><li>c：<strong>if  标签没有else情况</strong>，想要else情况，则可以在定义一个c：if标签</li></ul></li></ul><ul><li><p><strong>choose：相当于java代码的switch语句</strong></p><ul><li><p>使用choose标签声明                     相当于switch声明</p></li><li><p>使用when标签做判断                     相当于case</p></li><li><p>使用otherwise标签做其他情况的声明        相当于default</p></li></ul></li></ul><ul><li><p><strong>foreach：相当于java代码的for语句</strong></p><ul><li><p><strong>完成重复的操作</strong></p><ul><li><p>类似C++中的for循环 <code>for(int i=0; i&lt;n; i++) {}</code></p></li><li><p><strong>属性：</strong></p><p>begin：开始值</p><p>end：结束值</p><p><strong>var</strong>：临时变量</p><p>step：步长</p><p>varStatus：循环状态对象</p><p>index：容器中元素的索引，从0开始</p><p>count：循环次数，从1开始</p></li></ul></li><li><p><strong>遍历容器</strong></p><ul><li><p>类似Java中的一种遍历方式 <code>for(User user : list) {}</code></p></li><li><p><strong>属性：</strong></p><p>items：容器对象</p><p><strong>var</strong>：容器中元素的临时变量</p><p>varStatus：循环状态对象</p><p>index：容器中元素的索引，从0开始</p><p>count：循环次数，从1开始</p></li></ul></li></ul></li></ul><h2 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h2><h4 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h4><p>在request域中有一个存有User对象的List集合。需要使用  jstl+el  将list集合数据展示到jsp页面的表格table中</p><h2 id="三层架构：软件设计架构"><a href="#三层架构：软件设计架构" class="headerlink" title="三层架构：软件设计架构"></a>三层架构：软件设计架构</h2><ol><li>界面层(表示层)：用户看的得界面。用户可以通过界面上的组件和服务器进行交互</li><li>业务逻辑层：处理业务逻辑的。</li><li>数据访问层：操作数据存储文件。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JSP入门&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指令&lt;/li&gt;
&lt;li&gt;注释&lt;/l
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>List-04_xml笔记</title>
    <link href="http://yoursite.com/2021/04/05/JavaWeb/List-04-xml%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2021/04/05/JavaWeb/List-04-xml%E7%AC%94%E8%AE%B0/</id>
    <published>2021-04-05T02:40:13.000Z</published>
    <updated>2021-04-05T02:40:57.658Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li><strong>XML</strong><ul><li>概念</li><li>语法</li><li>解析</li></ul></li><li>jsoup解析器</li><li>xpath路径语言</li></ul><h2 id="0-1-XML："><a href="#0-1-XML：" class="headerlink" title="0.1 XML："></a>0.1 XML：</h2><ul><li><strong>概念</strong>：Extensible Markup Language 可扩展标记语言</li></ul><ul><li><strong>可扩展</strong>：标签都是自定义的。 <user>  <student></li><li><strong>功能</strong><ul><li>存储数据<ol><li>配置文件</li><li>在网络中传输</li></ol></li></ul></li><li><strong>xml与html的区别</strong><ol><li>xml标签都是自定义的，html标签是预定义。</li><li><strong>xml的语法严格，html语法松散</strong></li><li>xml是存储数据的，html是展示数据</li></ol></li><li>w3c：万维网联盟</li></ul><h4 id="1）语法："><a href="#1）语法：" class="headerlink" title="1）语法："></a>1）语法：</h4><ul><li><strong>基本语法</strong>：<ol><li>xml文档的后缀名 .xml</li><li>xml<strong>第一行必须定义为文档声明</strong></li><li>xml文档中<strong>有且仅有一个根标签</strong></li><li>属性值必须使用引号(单双都可)引起来</li><li>标签必须正确关闭</li><li>xml标签名称区分大小写</li></ol></li></ul><ul><li><p><strong>快速入门</strong>：</p><ul><li><pre><code class="xml"><span class="meta">&lt;?xml version='1.0' ?&gt;</span>      <span class="tag">&lt;<span class="name">users</span>&gt;</span>          <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'1'</span>&gt;</span>              <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span>              <span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span>              <span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span>              <span class="tag">&lt;<span class="name">br</span>/&gt;</span>          <span class="tag">&lt;/<span class="name">user</span>&gt;</span>          <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'2'</span>&gt;</span>              <span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span>              <span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span>              <span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span>          <span class="tag">&lt;/<span class="name">user</span>&gt;</span>      <span class="tag">&lt;/<span class="name">users</span>&gt;</span><span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">#### 2）组成部分：</span><br><span class="line"></span><br><span class="line">- **文档声明**</span><br><span class="line">  - 格式：&lt;?xml 属性列表 ?&gt;</span><br><span class="line">  - 属性列表：</span><br><span class="line">    - version：版本号，必须的属性</span><br><span class="line">    - encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1</span><br><span class="line">    - standalone：是否独立</span><br><span class="line">      - 取值：yes：不依赖其他文件；no：依赖其他文件</span><br><span class="line"></span><br><span class="line">- **指令**(了解)：结合css的</span><br><span class="line">  - &lt;?xml-stylesheet type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;a.css&quot; ?&gt;</span><br><span class="line"></span><br><span class="line">- **标签**：标签名称自定义的</span><br><span class="line">  - **规则**：</span><br><span class="line">    - 名称可以包含字母、数字以及其他的字符 </span><br><span class="line">    - 名称不能以数字或者标点符号开始 </span><br><span class="line">    - 名称不能以字母 xml（或者 XML、Xml 等等）开始 </span><br><span class="line">    - 名称不能包含空格 </span><br><span class="line"></span><br><span class="line">  - 属性：id属性值唯一</span><br><span class="line">  - 文本：</span><br><span class="line">    - CDATA区：在该区域中的数据会被原样展示</span><br><span class="line">    - 格式：  &lt;![CDATA[ 数据 ]]&gt;</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;xml</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;students&gt;</span><br><span class="line">&lt;student number&#x3D;&quot;heima_0001&quot;&gt;</span><br><span class="line">&lt;name id&#x3D;&quot;itcast&quot;&gt;</span><br><span class="line">&lt;xing&gt;张&lt;&#x2F;xing&gt;</span><br><span class="line">&lt;ming&gt;三&lt;&#x2F;ming&gt;</span><br><span class="line">&lt;&#x2F;name&gt;</span><br><span class="line">&lt;age&gt;18&lt;&#x2F;age&gt;</span><br><span class="line">&lt;sex&gt;male&lt;&#x2F;sex&gt;</span><br><span class="line">&lt;&#x2F;student&gt;</span><br><span class="line">&lt;student number&#x3D;&quot;heima_0002&quot;&gt;</span><br><span class="line">&lt;name&gt;jack&lt;&#x2F;name&gt;</span><br><span class="line">&lt;age&gt;18&lt;&#x2F;age&gt;</span><br><span class="line">&lt;sex&gt;female&lt;&#x2F;sex&gt;</span><br><span class="line">&lt;&#x2F;student&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;students&gt;</span><br></pre></td></tr></table></figure></span></code></pre></li></ul></li></ul><h4 id="3）约束："><a href="#3）约束：" class="headerlink" title="3）约束："></a>3）约束：</h4><p><strong>规定xml文档的书写规则</strong></p><ul><li><p><strong>作为框架的使用者</strong>(程序员)：</p><ol><li>能够在xml中引入约束文档</li><li>能够简单的读懂约束文档</li></ol></li><li><p>分类：</p><ol><li><strong>DTD</strong>：一种简单的约束技术</li><li><strong>Schema</strong>：一种复杂的约束技术</li></ol></li></ul><blockquote><h4 id="DTD："><a href="#DTD：" class="headerlink" title="DTD："></a>DTD：</h4></blockquote><ul><li><strong>引入dtd文档到xml文档中</strong><ul><li>内部dtd：将约束规则定义在xml文档中</li><li>外部dtd：将约束的规则定义在外部的dtd文件中<ul><li>本地：<!DOCTYPE 根标签名 SYSTEM "dtd文件的位置"></li><li>网络：<!DOCTYPE 根标签名 PUBLIC "dtd文件名字" "dtd文件的位置URL"></li></ul></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">students</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"student.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="Schema"><a href="#Schema" class="headerlink" title="Schema:"></a>Schema:</h4></blockquote><ul><li><strong>引入</strong>：<ol><li>填写xml文档的根元素</li><li>引入xsi前缀.  xmlns:xsi=”<a href="http://www.w3.org/2001/XMLSchema-instance&quot;" target="_blank" rel="noopener">http://www.w3.org/2001/XMLSchema-instance&quot;</a></li><li>引入xsd文件命名空间.  xsi:schemaLocation=”<a href="http://www.itcast.cn/xml" target="_blank" rel="noopener">http://www.itcast.cn/xml</a>  student.xsd”</li><li>为每一个xsd约束声明一个前缀,作为标识  xmlns=”<a href="http://www.itcast.cn/xml&quot;" target="_blank" rel="noopener">http://www.itcast.cn/xml&quot;</a> </li></ol></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">students</span>   <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://www.itcast.cn/xml"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.itcast.cn/xml  student.xsd"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h4 id="4）解析："><a href="#4）解析：" class="headerlink" title="4）解析："></a>4）解析：</h4><p><strong>操作xml文档，将文档中的数据读取到内存中</strong></p><ul><li><p><strong>操作xml文档</strong></p><ul><li>解析(读取)：将文档中的数据读取到内存中</li><li>写入：将内存中的数据保存到xml文档中。持久化的存储</li></ul></li><li><p><strong>解析xml的方式：</strong></p><ul><li><strong>DOM</strong>：将标记语言文档一次性加载进内存，在内存中形成一颗dom树<ul><li>优点：操作方便，可以对文档进行CRUD的所有操作</li><li>缺点：占内存</li></ul></li><li><strong>SAX</strong>：逐行读取，基于事件驱动的。<ul><li>优点：不占内存。</li><li>缺点：只能读取，不能增删改</li></ul></li></ul></li></ul><blockquote><h4 id="xml常见的解析器："><a href="#xml常见的解析器：" class="headerlink" title="xml常见的解析器："></a>xml常见的解析器：</h4></blockquote><ol><li><strong>JAXP</strong>：sun公司提供的解析器，支持dom和sax两种思想</li><li><strong>DOM4J</strong>：一款非常优秀的解析器</li><li><strong>Jsoup</strong>：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。<ul><li>它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</li></ul></li><li><strong>PULL</strong>：Android操作系统内置的解析器，sax方式的。</li></ol><h2 id="0-2-Jsoup解析器"><a href="#0-2-Jsoup解析器" class="headerlink" title="0.2 Jsoup解析器"></a>0.2 Jsoup解析器</h2><ul><li><strong>概况</strong>：<ul><li><strong>jsoup</strong> 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。</li><li>它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</li></ul></li></ul><h4 id="快速入门："><a href="#快速入门：" class="headerlink" title="快速入门："></a>快速入门：</h4><ul><li><strong>步骤：</strong><ol><li>导入jar包</li><li>获取Document对象</li><li>获取对应的标签Element对象</li><li>获取数据</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.1获取student.xml的path</span></span><br><span class="line">  String path = JsoupDemo1.class.getClassLoader().getResource("student.xml").getPath();</span><br><span class="line">  <span class="comment">//2.2解析xml文档，加载文档进内存，获取dom树---&gt;Document</span></span><br><span class="line">  Document document = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">"utf-8"</span>);</span><br><span class="line">  <span class="comment">//3.获取元素对象 Element</span></span><br><span class="line">  Elements elements = document.getElementsByTag(<span class="string">"name"</span>);</span><br><span class="line"></span><br><span class="line">  System.out.println(elements.size());  </span><br><span class="line">  <span class="comment">//3.1获取第一个name的Element对象</span></span><br><span class="line">  Element element = elements.get(<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//3.2获取数据</span></span><br><span class="line">  String name = element.text();</span><br><span class="line">  System.out.println(name);</span><br></pre></td></tr></table></figure><h4 id="对象的使用："><a href="#对象的使用：" class="headerlink" title="对象的使用："></a>对象的使用：</h4><blockquote><h4 id="Jsoup："><a href="#Jsoup：" class="headerlink" title="Jsoup："></a>Jsoup：</h4></blockquote><ul><li><strong>工具类</strong>，可以解析html或xml文档，<strong>返回Document</strong></li></ul><ul><li>parse：解析html或xml文档，返回Document<ul><li><strong>parse(File in, String charsetName)</strong>：解析xml或html文件的。</li><li><strong>parse(String html)</strong>：解析xml或html字符串</li><li><strong>parse(URL url, int timeoutMillis)</strong>：通过<strong>网络路径</strong>获取指定的html或xml的文档对象</li></ul></li></ul><blockquote><h4 id="Document："><a href="#Document：" class="headerlink" title="Document："></a>Document：</h4></blockquote><p>文档对象。<strong>代表内存中的dom树</strong></p><ul><li><strong>获取Element对象</strong><ul><li>getElementById(String id)：根据id属性值获取唯一的element对象</li><li>getElementsByTag(String tagName)：根据标签名称获取元素对象集合</li><li>getElementsByAttribute(String key)：根据属性名称获取元素对象集合</li><li>getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</li></ul></li></ul><blockquote><h4 id="Elements："><a href="#Elements：" class="headerlink" title="Elements："></a>Elements：</h4></blockquote><p>元素Element对象的集合。可以当做 ArrayList<Element>来使用</p><blockquote><h4 id="Element：元素对象"><a href="#Element：元素对象" class="headerlink" title="Element：元素对象"></a>Element：元素对象</h4></blockquote><ol><li><p>获取子元素对象</p><ul><li>getElementById(String id)：根据id属性值获取唯一的element对象</li><li>getElementsByTag(String tagName)：根据标签名称获取元素对象集合</li><li>getElementsByAttribute(String key)：根据属性名称获取元素对象集合</li><li>getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</li></ul></li><li><p>获取属性值</p><ul><li>String attr(String key)：根据属性名称获取属性值</li></ul></li><li><p>获取文本内容</p><ul><li>String text():获取文本内容</li><li>String html():获取标签体的所有内容(包括字标签的字符串内容)</li></ul></li></ol><blockquote><h4 id="Node："><a href="#Node：" class="headerlink" title="Node："></a>Node：</h4></blockquote><p>节点对象</p><ul><li>是Document和Element的父类</li></ul><h4 id="快捷查询方式："><a href="#快捷查询方式：" class="headerlink" title="快捷查询方式："></a>快捷查询方式：</h4><p>selector：选择器</p><p>使用的方法：<strong>Elements select​(String cssQuery)</strong></p><p>语法：参考Selector类中定义的语法</p><h2 id="0-3-XPath"><a href="#0-3-XPath" class="headerlink" title="0.3 XPath"></a>0.3 XPath</h2><p>XPath即为XML<strong>路径语言</strong>，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言</p><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ol><li>使用Jsoup的Xpath需要额外导入jar包。</li><li>查询w3cshool参考手册，使用xpath的语法完成查询</li><li>代码：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取student.xml的path</span></span><br><span class="line"><span class="built_in">String</span> path = JsoupDemo6.class.getClassLoader().getResource(<span class="string">"student.xml"</span>).getPath();</span><br><span class="line"><span class="comment">//2.获取Document对象</span></span><br><span class="line">Document <span class="built_in">document</span> = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.根据document对象，创建JXDocument对象</span></span><br><span class="line">JXDocument jxDocument = <span class="keyword">new</span> JXDocument(<span class="built_in">document</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.结合xpath语法查询</span></span><br><span class="line"><span class="comment">//4.1查询所有student标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes = jxDocument.selN(<span class="string">"//student"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.2查询所有student标签下的name标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes2 = jxDocument.selN(<span class="string">"//student/name"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes2) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.3查询student标签下带有id属性的name标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes3 = jxDocument.selN(<span class="string">"//student/name[@id]"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes3) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"><span class="comment">//4.4查询student标签下带有id属性的name标签 并且id属性值为itcast</span></span><br><span class="line"></span><br><span class="line">List&lt;JXNode&gt; jxNodes4 = jxDocument.selN(<span class="string">"//student/name[@id='itcast']"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes4) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;概念&lt;/li&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;li&gt;解析&lt;
      
    
    </summary>
    
    
      <category term="XML" scheme="http://yoursite.com/categories/XML/"/>
    
    
  </entry>
  
  <entry>
    <title>List-03_BootStrap基础</title>
    <link href="http://yoursite.com/2021/04/05/JavaWeb/JavaScript/List-03-BootStrap%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2021/04/05/JavaWeb/JavaScript/List-03-BootStrap%E5%9F%BA%E7%A1%80/</id>
    <published>2021-04-05T02:17:59.000Z</published>
    <updated>2021-04-05T02:18:56.233Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>Bootstrap概况</li><li>Boostrap入门</li><li>Boostrap布局</li><li>Boostrap样式</li></ul><h2 id="01-Bootstrap："><a href="#01-Bootstrap：" class="headerlink" title="01.Bootstrap："></a>01.Bootstrap：</h2><ul><li><p><strong>概念</strong>： 一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。</p><p>Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。</p></li><li><p><strong>框架</strong>:一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。</p></li><li><p><strong>好处</strong>：</p><ol><li>定义了很多的css样式和js插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。</li><li><strong>响应式布局</strong>。<ul><li>同一套页面可以兼容不同分辨率的设备。</li></ul></li></ol></li></ul><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><ol><li>下载Bootstrap</li><li>在项目中将这三个文件夹复制</li><li>创建html页面，引入必要的资源文件</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;Bootstrap HelloWorld&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;!-- Bootstrap --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;link href="css/</span>bootstrap.min.css<span class="string">" rel="</span>stylesheet<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>js/jquery<span class="number">-3.2</span><span class="number">.1</span>.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>js/bootstrap.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;你好，世界！&lt;/h1&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h2 id="02-响应式布局"><a href="#02-响应式布局" class="headerlink" title="02.响应式布局"></a>02.响应式布局</h2><p><strong>同一套页面可以兼容不同分辨率的设备。</strong></p><ul><li><p><strong>实现</strong>：依赖于栅格系统：<strong>将一行平均分成12个格子，可以指定元素占几个格子</strong></p></li><li><p><strong>步骤</strong>：</p><ol><li><p><strong>定义容器</strong>。相当于之前的table</p><ul><li><strong>容器分类</strong>：<ul><li>container：两边留白</li><li>container-fluid：每一种设备都是100%宽度</li></ul></li></ul></li><li><p><strong>定义行</strong>。相当于之前的 tr   <strong>样式</strong>：row</p></li><li><p><strong>定义元素</strong>。指定该元素在不同的设备上，所占的格子数目。<strong>样式</strong>：col-设备代号-格子数目</p><ul><li>设备代号：<ul><li>xs：超小屏幕 手机 (&lt;768px)：col-xs-12</li><li>sm：小屏幕 平板 (≥768px)</li><li>md：中等屏幕 桌面显示器 (≥992px)</li><li>lg：大屏幕 大桌面显示器 (≥1200px)</li></ul></li></ul></li></ol></li></ul><ul><li><strong>注意</strong>：<ol><li>一行中如果格子<strong>数目超过12</strong>，则超出部分自动换行。</li><li>栅格类属性可以<strong>向上兼容</strong>。栅格类适用于与屏幕宽度<strong>大于或等于分界点大小</strong>的设备。</li><li>如果<strong>真实设备宽度</strong>小于了设置栅格类属性的<strong>设备代码的最小值</strong>，会一个元素沾满一整行。</li></ol></li></ul><h2 id="03-CSS样式和JS插件"><a href="#03-CSS样式和JS插件" class="headerlink" title="03.CSS样式和JS插件"></a>03.CSS样式和JS插件</h2><h3 id="全局CSS样式："><a href="#全局CSS样式：" class="headerlink" title="全局CSS样式："></a>全局CSS样式：</h3><ul><li><p><strong>按钮</strong>：<strong>class=”btn btn-default”</strong></p></li><li><p><strong>图片</strong>：</p><ul><li><p>class=”img-responsive”：图片在任意尺寸都占100%</p></li><li><p>图片形状</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-rounded"</span>&gt;：方形</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-circle"</span>&gt; ： 圆形</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-thumbnail"</span>&gt; ：相框</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>表格</strong></p></li></ul><pre><code>* table     * table-bordered       * table-hover</code></pre><ul><li><p>表单</p><ul><li>给表单项添加：class=”form-control” </li></ul></li></ul><ul><li><p>组件：</p><ul><li>导航条</li><li>分页条</li></ul></li><li><p>插件：</p><ul><li>轮播图</li></ul></li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Bootstrap概况&lt;/li&gt;
&lt;li&gt;Boostrap入门&lt;/li&gt;
&lt;li&gt;Boostrap布局&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="JS-Boostrap" scheme="http://yoursite.com/categories/JS-Boostrap/"/>
    
    
  </entry>
  
  <entry>
    <title>List-02_JavaScript高级</title>
    <link href="http://yoursite.com/2021/04/04/JavaWeb/JavaScript/List-02-JavaScript%E9%AB%98%E7%BA%A7/"/>
    <id>http://yoursite.com/2021/04/04/JavaWeb/JavaScript/List-02-JavaScript%E9%AB%98%E7%BA%A7/</id>
    <published>2021-04-04T13:56:22.000Z</published>
    <updated>2021-04-05T02:13:13.698Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h3><ul><li><p>DOM对象</p></li><li><p>BOM对象</p></li><li><p>HTML DOM对象</p></li><li><p>事件监听机制</p></li></ul><h2 id="0-1-DOM简单学习："><a href="#0-1-DOM简单学习：" class="headerlink" title="0.1 DOM简单学习："></a>0.1 DOM简单学习：</h2><p><strong>功能</strong>：控制html文档的内容</p><ul><li><p><strong>获取页面标签(元素)对象</strong>：Element</p><ul><li><pre><code>document.getElementById(&quot;id值&quot;)    通过元素的id获取元素对象<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- **操作Element对象**：</span><br><span class="line">  - **修改属性值**：</span><br><span class="line">  - 明确获取的对象是哪一个？</span><br><span class="line">  - 查看API文档，找其中有哪些属性可以设置</span><br><span class="line">- **修改标签体内容**：</span><br><span class="line">  - 属性：innerHTML</span><br><span class="line">    - 获取元素对象</span><br><span class="line">    - 使用**innerHTML**属性**修改标签体内容**</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &#x2F;&#x2F;通过id获取元素对象</span><br><span class="line">    var light &#x3D; document.getElementById(&quot;light&quot;);</span><br><span class="line">    alert(&quot;我要换图片了。。。&quot;);</span><br><span class="line">    light.src &#x3D; &quot;img&#x2F;on.gif&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;1.获取h1标签对象</span><br><span class="line">    var title &#x3D; document.getElementById(&quot;title&quot;);</span><br><span class="line">    alert(&quot;我要换内容了。。。&quot;);</span><br><span class="line">    &#x2F;&#x2F;2.修改内容</span><br><span class="line">    title.innerHTML &#x3D; &quot;不识妻美刘强东&quot;;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h2 id="0-2-事件简单学习"><a href="#0-2-事件简单学习" class="headerlink" title="0.2 事件简单学习"></a>0.2 事件简单学习</h2><p><strong>功能</strong>： 某些组件被执行了某些操作后，触发某些代码的执行。</p><ul><li>造句：  xxx被xxx,我就xxx<ul><li>我方水晶被摧毁后，我就责备对友。</li><li>敌方水晶被摧毁后，我就夸奖自己。</li></ul></li></ul><h3 id="如何绑定事件"><a href="#如何绑定事件" class="headerlink" title="如何绑定事件"></a>如何绑定事件</h3><ol><li><strong>直接在html标签上</strong>，指定事件的属性(操作)，属性值就是js代码<ul><li>事件：onclick— 单击事件</li></ul></li><li>通过js获取元素对象，指定事件属性，设置一个函数</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img id=<span class="string">"light"</span> src=<span class="string">"img/off.gif"</span>  onclick=<span class="string">"fun( );"</span>&gt;</span><br><span class="line">&lt;img id=<span class="string">"light2"</span> src=<span class="string">"img/off.gif"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">'我被点了'</span>);</span><br><span class="line">        alert(<span class="string">'我又被点了'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">'咋老点我？'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.获取light2对象</span></span><br><span class="line">    <span class="keyword">var</span> light2 = <span class="built_in">document</span>.getElementById(<span class="string">"light2"</span>);</span><br><span class="line">    <span class="comment">//2.绑定事件</span></span><br><span class="line">    light2.onclick = fun2;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure><h3 id="案例1：电灯开关"><a href="#案例1：电灯开关" class="headerlink" title="案例1：电灯开关"></a>案例1：电灯开关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取图片对象</span></span><br><span class="line">    <span class="keyword">var</span> light = <span class="built_in">document</span>.getElementById(<span class="string">"light"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">false</span>;<span class="comment">//代表灯是灭的。 off图片</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.绑定单击事件</span></span><br><span class="line">    light.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;<span class="comment">//判断如果灯是开的，则灭掉</span></span><br><span class="line">            light.src = <span class="string">"img/off.gif"</span>;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//如果灯是灭的，则打开</span></span><br><span class="line">            light.src = <span class="string">"img/on.gif"</span>;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0-3-BOM对象"><a href="#0-3-BOM对象" class="headerlink" title="0.3 BOM对象"></a>0.3 BOM对象</h2><p><strong>概念</strong>：Browser Object Model <strong>浏览器对象模型</strong></p><ul><li>将浏览器的各个组成部分封装成对象。</li></ul><p><strong>组成</strong>：</p><ul><li><strong>Window</strong>：窗口对象</li><li>Navigator：浏览器对象</li><li>Screen：显示器屏幕对象</li><li>History：历史记录对象</li><li>Location：地址栏对象</li></ul><h3 id="Window：窗口对象"><a href="#Window：窗口对象" class="headerlink" title="Window：窗口对象"></a>Window：窗口对象</h3><ol><li><p>创建</p></li><li><p><strong>方法</strong></p><ul><li><strong>与弹出框有关的方法</strong>：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">alert( )显示带有一段消息和一个确认按钮的警告框。</span><br><span class="line"></span><br><span class="line">confirm( )显示带有一段消息以及确认按钮和取消按钮的对话框。</span><br><span class="line"></span><br><span class="line">   * 如果用户点击确定按钮，则方法返回<span class="keyword">true</span></span><br><span class="line">   * 如果用户点击取消按钮，则方法返回<span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">prompt( )显示可提示用户输入的对话框。</span><br><span class="line"></span><br><span class="line">- 返回值：获取用户输入的值</span><br></pre></td></tr></table></figure></li></ol><ul><li><p><strong>与打开关闭有关的方法</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">close( )关闭浏览器窗口。</span><br><span class="line">    * 谁调用我 ，我关谁</span><br><span class="line">open( )打开一个新的浏览器窗口</span><br><span class="line">    * 返回新的Window对象</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭新窗口</span></span><br><span class="line">   <span class="keyword">var</span> closeBtn = <span class="built_in">document</span>.getElementById(<span class="string">"closeBtn"</span>);</span><br><span class="line">   closeBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 关闭新窗口</span></span><br><span class="line">        newWindow.close( );</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>与定时器有关的方式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">setTimeout( )在指定的毫秒数后调用函数或计算表达式。</span><br><span class="line">    </span><br><span class="line">参数：</span><br><span class="line">    <span class="number">1</span>. js代码或者方法对象</span><br><span class="line"><span class="number">2</span>. 毫秒值</span><br><span class="line">   返回值：唯一标识，用于取消定时器</span><br><span class="line"></span><br><span class="line">clearTimeout( )取消由 setTimeout( ) 方法设置的 timeout。</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">setInterval( )按照指定的周期（以毫秒计）来调用函数或计算表达式。</span><br><span class="line"></span><br><span class="line">clearInterval( ) 取消由 setInterval( ) 设置的 timeout。</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p><strong>属性</strong>：</p><ol><li><strong>获取其他BOM对象</strong>：<br>history<br>location<br>Navigator<br>Screen:</li><li><strong>获取DOM对象</strong><br>document</li></ol></li><li><p><strong>特点</strong></p><ul><li>Window对象不需要创建可以直接使用 window使用。 <strong>window.方法名( );</strong></li><li>window引用可以省略。  <strong>方法名( );</strong></li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取history</span></span><br><span class="line"><span class="keyword">var</span> h1 = <span class="built_in">window</span>.history;</span><br><span class="line"><span class="keyword">var</span> h2 = history;</span><br><span class="line">alert(h1);</span><br><span class="line">alert(h2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> openBtn = <span class="built_in">window</span>.document.getElementById(<span class="string">"openBtn"</span>);</span><br><span class="line"><span class="keyword">var</span> openBtn2 = <span class="built_in">document</span>.getElementById(<span class="string">"openBtn"</span>);</span><br><span class="line">alert(openBtn2);</span><br></pre></td></tr></table></figure><h4 id="案例二-轮播图"><a href="#案例二-轮播图" class="headerlink" title="案例二_轮播图"></a>案例二_轮播图</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//修改图片src属性</span></span><br><span class="line">    <span class="keyword">var</span> number = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">fun</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        number++;</span><br><span class="line">        <span class="comment">//判断number是否大于3</span></span><br><span class="line">        <span class="keyword">if</span> (number &gt; <span class="number">3</span>) &#123;</span><br><span class="line">            number = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取img对象</span></span><br><span class="line">        <span class="keyword">var</span> img = document.getElementById(<span class="string">"img"</span>);</span><br><span class="line">        img.src = <span class="string">"img/banner_"</span> + number + <span class="string">".jpg"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.定义定时器</span></span><br><span class="line">    setInterval(fun, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="Location：地址栏对象"><a href="#Location：地址栏对象" class="headerlink" title="Location：地址栏对象"></a>Location：地址栏对象</h3><ol><li><p>创建(获取)：</p><ol><li>window.location</li><li>location</li></ol></li><li><p><strong>方法</strong>：</p><ul><li><strong>reload</strong>( )    重新加载当前文档。刷新</li></ul></li><li><p>属性</p><ul><li><strong>href</strong>    设置或返回完整的 URL。</li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line"><span class="comment">//2.绑定单击事件</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">    <span class="comment">//3.刷新页面</span></span><br><span class="line">    location.reload( );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击按钮，去访问www.itcast.cn官网</span></span><br><span class="line"><span class="comment">//1.获取按钮</span></span><br><span class="line"><span class="keyword">var</span> goItcast = <span class="built_in">document</span>.getElementById(<span class="string">"goItcast"</span>);</span><br><span class="line"><span class="comment">//2.绑定单击事件</span></span><br><span class="line">goItcast.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">    <span class="comment">//3.去访问www.itcast.cn官网</span></span><br><span class="line">    location.href = <span class="string">"https://www.chanwillian.github.io"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例三-自动调整"><a href="#案例三-自动调整" class="headerlink" title="案例三_自动调整"></a>案例三_自动调整</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 2.倒计时读秒效果实现</span></span><br><span class="line">    <span class="keyword">var</span> second = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">var</span> time = document.getElementById(<span class="string">"time"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，获取span标签，修改span标签体内容，时间--</span></span><br><span class="line">    <span class="function">function <span class="title">showTime</span><span class="params">( )</span></span>&#123;</span><br><span class="line">        second -- ;</span><br><span class="line">        <span class="comment">//判断时间如果&lt;= 0 ，则跳转到首页</span></span><br><span class="line">        <span class="keyword">if</span>(second &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//跳转到首页</span></span><br><span class="line">            location.href = <span class="string">"https://www.baidu.com"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        time.innerHTML = second +<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置定时器，1秒执行一次该方法</span></span><br><span class="line">    setInterval(showTime,<span class="number">1000</span>);</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="History：历史记录对象"><a href="#History：历史记录对象" class="headerlink" title="History：历史记录对象"></a>History：历史记录对象</h3><ol><li><p>创建(获取)：</p><ol><li>window.history</li><li>history</li></ol></li><li><p><strong>方法</strong>：</p><ul><li><strong>back</strong>( )    加载 history 列表中的前一个 URL。</li><li><strong>forward</strong>( )    加载 history 列表中的下一个 URL。</li><li><strong>go(参数)</strong>    加载 history 列表中的某个具体页面。<ul><li>参数：<ul><li>正数：前进几个历史记录</li><li>负数：后退几个历史记录</li></ul></li></ul></li></ul></li><li><p>属性：</p><ul><li><strong>length</strong>    返回当前窗口历史列表中的 URL 数量。</li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.获取按钮</span></span><br><span class="line">    <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单机事件</span></span><br><span class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">//3.获取当前窗口历史记录个数</span></span><br><span class="line">        <span class="keyword">var</span> length = history.length;</span><br><span class="line">        alert(length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//1.获取按钮</span></span><br><span class="line">    <span class="keyword">var</span> forward = <span class="built_in">document</span>.getElementById(<span class="string">"forward"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单机事件</span></span><br><span class="line">    forward.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">       <span class="comment">//前进</span></span><br><span class="line">       <span class="comment">// history.forward( );</span></span><br><span class="line">        history.go(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0-4-DOM对象"><a href="#0-4-DOM对象" class="headerlink" title="0.4 DOM对象"></a>0.4 DOM对象</h2><p><strong>概念</strong>： Document Object Model 文档对象模型</p><ul><li>将标记语言文档的各个组成部分，封装为对象。</li><li>可以使用这些对象，对标记语言文档进行CRUD的动态操作</li></ul><p><strong>W3C DOM 标准被分为 3 个不同的部分：</strong></p><ul><li><p><strong>核心 DOM</strong> - 针对任何结构化文档的标准模型</p><ul><li><p>Document：文档对象</p></li><li><p>Element：元素对象</p></li><li><p>Attribute：属性对象</p></li><li><p>Text：文本对象</p></li><li><p>Comment:注释对象</p></li><li><p>Node：节点对象，其他5个的父对象</p></li></ul></li><li><p><strong>XML DOM</strong> - 针对 XML 文档的标准模型</p></li><li><p><strong>HTML DOM</strong> - 针对 HTML 文档的标准模型</p></li></ul><h3 id="核心DOM模型："><a href="#核心DOM模型：" class="headerlink" title="核心DOM模型："></a>核心DOM模型：</h3><h4 id="1）Document：文档对象"><a href="#1）Document：文档对象" class="headerlink" title="1）Document：文档对象"></a>1）Document：文档对象</h4><ul><li><strong>创建</strong>(获取)：在html dom模型中可以使用window对象来获取<ul><li>window.document</li><li>document</li></ul></li><li><strong>方法</strong>：<ul><li><strong>获取Element对象</strong>：<ul><li><strong>getElementById</strong>( )    ： 根据id属性值获取元素对象。id属性值一般唯一</li><li><strong>getElementsByTagName</strong>( )：根据元素名称获取元素对象们。返回值是一个数组</li><li><strong>getElementsByClassName</strong>( ):根据Class属性值获取元素对象们。返回值是一个数组</li><li><strong>getElementsByName</strong>( ): 根据name属性值获取元素对象们。返回值是一个数组</li></ul></li><li><strong>创建其他DOM对象</strong>：<ul><li><strong>createAttribute(name)</strong></li><li><strong>createComment( )</strong></li><li><strong>createElement( )</strong></li><li><strong>createTextNode( )</strong></li></ul></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.根据元素名称获取元素对象们。返回值是一个数组</span></span><br><span class="line"><span class="keyword">var</span> divs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span><br><span class="line">alert(divs.length);</span><br><span class="line"><span class="comment">// 3.根据Class属性值获取元素对象们。返回值是一个数组</span></span><br><span class="line"><span class="keyword">var</span> div_cls = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"cls1"</span>);</span><br><span class="line">alert(div_cls.length);</span><br><span class="line"><span class="comment">// 4.根据name属性值获取元素对象们。返回值是一个数组</span></span><br><span class="line"><span class="keyword">var</span> ele_username = <span class="built_in">document</span>.getElementsByName(<span class="string">"username"</span>);</span><br><span class="line">alert(ele_username.length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> table = <span class="built_in">document</span>.createElement(<span class="string">"table"</span>);</span><br><span class="line">alert(table);</span><br></pre></td></tr></table></figure><h4 id="2）Element：元素对象"><a href="#2）Element：元素对象" class="headerlink" title="2）Element：元素对象"></a>2）Element：元素对象</h4><ul><li>获取/创建：通过document来获取和创建</li></ul><ul><li><strong>方法</strong>：<ul><li><strong>removeAttribute</strong>( )：删除属性</li><li><strong>setAttribute</strong>( )：设置属性</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//获取btn</span></span><br><span class="line">    <span class="keyword">var</span> btn_set =<span class="built_in">document</span>.getElementById(<span class="string">"btn_set"</span>);</span><br><span class="line">    btn_set.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">//1.获取a标签</span></span><br><span class="line">        <span class="keyword">var</span> element_a = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>];</span><br><span class="line">        element_a.setAttribute(<span class="string">"href"</span>,<span class="string">"https://www.baidu.com"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取btn</span></span><br><span class="line">    <span class="keyword">var</span> btn_remove =<span class="built_in">document</span>.getElementById(<span class="string">"btn_remove"</span>);</span><br><span class="line">    btn_remove.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">//1.获取a标签</span></span><br><span class="line">        <span class="keyword">var</span> element_a = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>];</span><br><span class="line">        element_a.removeAttribute(<span class="string">"href"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3）Node：节点对象"><a href="#3）Node：节点对象" class="headerlink" title="3）Node：节点对象"></a>3）Node：节点对象</h4><p>，其他5个的父对象</p><ul><li><p><strong>特点</strong>：所有dom对象都可以被认为是一个节点</p></li><li><p><strong>方法</strong>：</p><ul><li>CRUD dom树：<ul><li><strong>appendChild</strong>( )：向节点的子节点列表的结尾添加新的子节点。</li><li><strong>removeChild</strong>( )    ：删除（并返回）当前节点的指定子节点。</li><li><strong>replaceChild</strong>( )：用新节点替换一个子节点。</li></ul></li></ul></li><li><p>属性：</p><ul><li><strong>parentNode</strong> 返回节点的父节点。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取超链接</span></span><br><span class="line">    <span class="keyword">var</span> element_a = <span class="built_in">document</span>.getElementById(<span class="string">"del"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单击事件</span></span><br><span class="line">    element_a.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">        <span class="keyword">var</span> div2 = <span class="built_in">document</span>.getElementById(<span class="string">"div2"</span>);</span><br><span class="line">        div1.removeChild(div2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.获取超链接</span></span><br><span class="line">    <span class="keyword">var</span> element_add = <span class="built_in">document</span>.getElementById(<span class="string">"add"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单击事件</span></span><br><span class="line">    element_add.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"> </span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">        <span class="comment">//给div1添加子节点</span></span><br><span class="line">        <span class="comment">//创建div节点</span></span><br><span class="line">        <span class="keyword">var</span> div3 = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        div3.setAttribute(<span class="string">"id"</span>, <span class="string">"div3"</span>);</span><br><span class="line"></span><br><span class="line">        div1.appendChild(div3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        超链接功能：</span></span><br><span class="line"><span class="comment">            1.可以被点击：样式</span></span><br><span class="line"><span class="comment">            2.点击后跳转到href指定的url</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        需求：保留1功能，去掉2功能</span></span><br><span class="line"><span class="comment">        实现：href="javascript:void(0);"</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> div2 = <span class="built_in">document</span>.getElementById(<span class="string">"div2"</span>);</span><br><span class="line">    <span class="keyword">var</span> div1 = div2.parentNode;</span><br><span class="line">    alert(div1);</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h5 id="案例四—动态表格"><a href="#案例四—动态表格" class="headerlink" title="案例四—动态表格"></a>案例四—动态表格</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        分析：</span></span><br><span class="line"><span class="comment">            1.添加：</span></span><br><span class="line"><span class="comment">                1. 给添加按钮绑定单击事件</span></span><br><span class="line"><span class="comment">                2. 获取文本框的内容</span></span><br><span class="line"><span class="comment">                3. 创建td，设置td的文本为文本框的内容。</span></span><br><span class="line"><span class="comment">                4. 创建tr</span></span><br><span class="line"><span class="comment">                5. 将td添加到tr中</span></span><br><span class="line"><span class="comment">                6. 获取table，将tr添加到table中</span></span><br><span class="line"><span class="comment">            2.删除：</span></span><br><span class="line"><span class="comment">                1.确定点击的是哪一个超链接</span></span><br><span class="line"><span class="comment">                    &lt;a href="javascript:void(0);" onclick="delTr(this);" &gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="comment">                2.怎么删除？</span></span><br><span class="line"><span class="comment">                    removeChild( ):通过父节点删除子节点</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">//使用innerHTML添加</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"btn_add"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>) </span>&#123;</span><br><span class="line">        <span class="comment">//2.获取文本框的内容</span></span><br><span class="line">        <span class="keyword">var</span> id = <span class="built_in">document</span>.getElementById(<span class="string">"id"</span>).value;</span><br><span class="line">        <span class="keyword">var</span> name = <span class="built_in">document</span>.getElementById(<span class="string">"name"</span>).value;</span><br><span class="line">        <span class="keyword">var</span> gender = <span class="built_in">document</span>.getElementById(<span class="string">"gender"</span>).value;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取table</span></span><br><span class="line">        <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"table"</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//追加一行</span></span><br><span class="line">        table.innerHTML += <span class="string">"&lt;tr&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;"</span>+id+<span class="string">"&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;"</span>+name+<span class="string">"&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;"</span>+gender+<span class="string">"&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;&lt;a href=\"javascript:void(0);\" onclick=\"delTr(this);\" &gt;删除&lt;/a&gt;&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"    &lt;/tr&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">delTr</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> table = obj.parentNode.parentNode.parentNode;</span><br><span class="line">        <span class="keyword">var</span> tr = obj.parentNode.parentNode;</span><br><span class="line"></span><br><span class="line">        table.removeChild(tr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0-5-HTML-DOM"><a href="#0-5-HTML-DOM" class="headerlink" title="0.5 HTML DOM"></a>0.5 HTML DOM</h2><ol><li><p><strong>标签体的设置和获取</strong>：innerHTML</p></li><li><p>使用html元素对象的属性</p></li><li><p>控制元素样式</p><ol><li><p>使用元素的style属性来设置<br>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改样式方式1</span></span><br><span class="line">   div1.style.border = <span class="string">"1px solid red"</span>;</span><br><span class="line">   div1.style.width = <span class="string">"200px"</span>;</span><br><span class="line">   <span class="comment">//font-size--&gt; fontSize</span></span><br><span class="line">   div1.style.fontSize = <span class="string">"20px"</span>;</span><br></pre></td></tr></table></figure></li><li><p>提前定义好类选择器的样式，通过元素的className属性来设置其class属性值。</p></li></ol></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">    <span class="keyword">var</span> innerHTML = div.innerHTML;</span><br><span class="line">    alert(innerHTML);</span><br><span class="line">    <span class="comment">// div标签中替换一个文本输入框</span></span><br><span class="line">    div.innerHTML = <span class="string">"&lt;input type='text'&gt;"</span>;</span><br><span class="line">    <span class="comment">// div标签中追加一个文本输入框</span></span><br><span class="line">    div.innerHTML += <span class="string">"&lt;input type='text'&gt;"</span>;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0-6-事件监听机制："><a href="#0-6-事件监听机制：" class="headerlink" title="0.6 事件监听机制："></a>0.6 事件监听机制：</h2><p><strong>概念</strong>：某些组件被执行了某些操作后，触发某些代码的执行。    </p><ul><li><strong>事件</strong>：某些操作。如： 单击，双击，键盘按下了，鼠标移动了</li><li><strong>事件源</strong>：组件。如： 按钮 文本输入框…</li><li><strong>监听器</strong>：代码。</li><li><strong>注册监听</strong>：将事件，事件源，监听器结合在一起。 当事件源上发生了某个事件，则触发执行某个监听器代码。</li></ul><h4 id="常见的事件："><a href="#常见的事件：" class="headerlink" title="常见的事件："></a>常见的事件：</h4><ol><li><p><strong>点击事件</strong>：</p><ol><li>onclick：单击事件</li><li>ondblclick：双击事件</li></ol></li><li><p><strong>焦点事件</strong></p><ol><li>onblur：失去焦点<ul><li>一般用于表单校验</li></ul></li><li>onfocus:元素获得焦点。</li></ol></li><li><p><strong>加载事件</strong>：</p><ol><li>onload：一张页面或一幅图像完成加载。</li></ol></li><li><p><strong>鼠标事件</strong>：</p><ol><li>onmousedown    鼠标按钮被按下。<ul><li>定义方法时，定义一个形参，接受event对象</li><li>event对象的button属性，可以判断哪个鼠标被点击了</li></ul></li><li>onmouseup    鼠标按键被松开。</li><li>onmousemove    鼠标被移动。</li><li>onmouseover    鼠标移到某元素之上。</li><li>onmouseout    鼠标从某元素移开。</li></ol></li><li><p><strong>键盘事件</strong>：</p><ol><li>onkeydown    某个键盘按键被按下。    <ol start="2"><li>onkeyup        某个键盘按键被松开。</li><li>onkeypress    某个键盘按键被按下并松开。</li></ol></li></ol></li><li><p><strong>选择和改变</strong></p><ol><li>onchange    域的内容被改变。</li><li>onselect    文本被选中。</li></ol></li><li><p><strong>表单事件</strong>：</p><ol><li>onsubmit    确认按钮被点击。<ul><li>返回false时，表单被阻止提交</li></ul></li><li>onreset    重置按钮被点击。</li></ol></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;常见事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2.加载完成事件  onload</span></span><br><span class="line"><span class="regexp">        window.onload = function( )&#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/1.失去焦点事件</span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onblur = function( )&#123;</span></span><br><span class="line"><span class="regexp">                alert("失去焦点了...");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/3.绑定鼠标移动到元素之上事件</span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onmouseover = function( )&#123;</span></span><br><span class="line"><span class="regexp">                alert("鼠标来了....");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/3.绑定鼠标点击事件</span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onmousedown = function(event)&#123;</span></span><br><span class="line"><span class="regexp">               /</span><span class="regexp">/ alert("鼠标点击了....");</span></span><br><span class="line"><span class="regexp">                alert(event.button);</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onkeydown = function(event)&#123;</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ alert("鼠标点击了....");</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ alert(event.button);</span></span><br><span class="line"><span class="regexp">                if(event.keyCode == 13)&#123;</span></span><br><span class="line"><span class="regexp">                    alert("提交表单");</span></span><br><span class="line"><span class="regexp">                &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onchange = function(event)&#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                alert("改变了...")</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            document.getElementById("city").onchange = function(event)&#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                alert("改变了...")</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            document.getElementById("form").onsubmit = function( )&#123;</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/校验用户名格式是否正确</span></span><br><span class="line"><span class="regexp">                var flag = false;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                return flag;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        function checkForm( )&#123;</span></span><br><span class="line"><span class="regexp">            return true;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!--</span></span><br><span class="line"><span class="regexp">    function fun( )&#123;</span></span><br><span class="line"><span class="regexp">       return  checkForm( );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"> --&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;form action="#" id="form" onclick="return  checkForm( );"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input name="username" id="username"&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &lt;select id="city"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;option&gt;--请选择--&lt;/</span>option&gt;</span><br><span class="line">            &lt;option&gt;北京&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">            &lt;option&gt;上海&lt;/</span>option&gt;</span><br><span class="line">            &lt;option&gt;西安&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>select&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/form&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容：&quot;&gt;&lt;a href=&quot;#今日内容：&quot; class=&quot;headerlink&quot; title=&quot;今日内容：&quot;&gt;&lt;/a&gt;今日内容：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DOM对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BOM对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTM
      
    
    </summary>
    
    
      <category term="JS" scheme="http://yoursite.com/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>List-01_JavaScript基础</title>
    <link href="http://yoursite.com/2021/04/04/JavaWeb/JavaScript/List-01-JavaScript%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2021/04/04/JavaWeb/JavaScript/List-01-JavaScript%E5%9F%BA%E7%A1%80/</id>
    <published>2021-04-04T13:49:49.000Z</published>
    <updated>2021-05-06T12:39:52.515Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li>JavaScript概况</li><li>JS数据类型</li><li>JS基本语法</li><li>JS基本对象</li></ul><h2 id="0-1-JavaScript："><a href="#0-1-JavaScript：" class="headerlink" title="0.1 JavaScript："></a>0.1 JavaScript：</h2><blockquote><h5 id="概念：-一门客户端脚本语言"><a href="#概念：-一门客户端脚本语言" class="headerlink" title="概念：    一门客户端脚本语言"></a>概念：    一门客户端脚本语言</h5></blockquote><ul><li>运行在客户端浏览器中的。每一个浏览器都有JavaScript的解析引擎</li><li>脚本语言：不需要编译，直接就可以被浏览器解析执行了</li></ul><blockquote><h5 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h5></blockquote><ul><li>可以来增<strong>强用户和html页面的交互过程</strong>，可以来控制html元素，让页面有一些动态的效果，增强用户的体验。</li></ul><blockquote><h5 id="JavaScript发展史："><a href="#JavaScript发展史：" class="headerlink" title="JavaScript发展史："></a>JavaScript发展史：</h5></blockquote><ol><li>1992年，Nombase公司，开发出第一门客户端脚本语言，专门用于表单的校验。命名为 ： C–    ，后来更名为：ScriptEase</li><li>1995年，Netscape(网景)公司，开发了一门客户端脚本语言：LiveScript。后来，请来SUN公司的专家，修改LiveScript，命名为JavaScript</li><li>1996年，微软抄袭JavaScript开发出JScript语言</li><li>1997年，ECMA(欧洲计算机制造商协会)，制定出客户端脚本语言的标准：ECMAScript，就是统一了所有客户端脚本语言的编码方式。</li></ol><ul><li><strong>JavaScript</strong> = ECMAScript + JavaScript自己特有的东西(BOM+DOM)</li></ul><h2 id="0-2-JavaScript基础"><a href="#0-2-JavaScript基础" class="headerlink" title="0.2 JavaScript基础"></a>0.2 JavaScript基础</h2><p><strong>客户端脚本语言的标准</strong></p><h3 id="基本语法："><a href="#基本语法：" class="headerlink" title="基本语法："></a>基本语法：</h3><blockquote><h4 id="与html结合方式"><a href="#与html结合方式" class="headerlink" title="与html结合方式"></a>与html结合方式</h4></blockquote><ol><li>内部JS：<ul><li>定义<script>，标签体内容就是js代码</li></ul></li><li>外部JS：<ul><li>定义<script>，通过src属性引入外部的js文件</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    内部JS--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"helloWorld"</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    外部JS--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/a.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><script>可以定义在html页面的任何地方。但是定义的位置会影响执行顺序。<script>可以定义多个。**注释**1. 单行注释：//注释内容2. 多行注释：/*注释内容*/### 数据类型：1. 原始数据类型(基本数据类型)：   1. **number**：数字。 整数/小数/     **NaN**    (not a number 一个不是数字的数字类型)   2. **string**：字符串。 字符串  "abc" "a" 'abc'   3. **boolean**: true和false   4. **null**：一个对象为空的占位符   5. **undefined**：未定义。**如果一个变量没有给初始化值，则会被默认赋值为undefined**2. 引用数据类型：**对象**<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    定义变量</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a  = <span class="number">3</span>;</span></span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    a = <span class="string">"abc"</span>;</span></span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num=<span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num2=<span class="number">1.2</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> num3=<span class="literal">NaN</span>;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//输出到页面上</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num3+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str2=<span class="string">"world"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str3=<span class="string">"I"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(str+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(str2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(str3+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag=<span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag2=<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj=<span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj2=<span class="literal">undefined</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj3;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(obj+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(obj2+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(obj3+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>### 变量变量：一小块存储数据的内存空间Java语言是强类型语言，而JavaScript是弱类型语言。* **强类型**：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。**只能存储固定类型的数据*** **弱类型**：在开辟变量存储空间时，不定义空间将来的存储数据类型，**可以存放任意类型的数据。****语法**：* **var 变量名 = 初始化值;****typeof运算符**：获取变量的类型。* 注：**null运算后得到的是object**<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义变量</span></span><br><span class="line">    <span class="keyword">var</span> a  = <span class="number">3</span>;</span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line">    a = <span class="string">"abc"</span>;</span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> num2=<span class="number">1.2</span>;</span><br><span class="line">    <span class="keyword">var</span> num3=NaN;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出到页面上</span></span><br><span class="line">    document.write(num+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(num2+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(num3+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> str=<span class="string">"hello"</span>;</span><br><span class="line">    <span class="keyword">var</span> str2=<span class="string">"world"</span>;</span><br><span class="line">    <span class="keyword">var</span> str3=<span class="string">"I"</span>;</span><br><span class="line"></span><br><span class="line">    document.write(str+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(str2+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(str3+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> flag=<span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">var</span> flag2=<span class="keyword">false</span>;</span><br><span class="line">    document.write(flag+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(flag2+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> obj=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">var</span> obj2=undefined;</span><br><span class="line">    <span class="keyword">var</span> obj3;</span><br><span class="line"></span><br><span class="line">    document.write(obj+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(obj2+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span><br><span class="line">    document.write(obj3+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">     </span><br><span class="line">document.write(num+<span class="string">"---"</span>+typeof(num)+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">      document.write(num2+<span class="string">"---"</span>+typeof(num2)+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">      document.write(num3+<span class="string">"---"</span>+typeof(num3)+<span class="string">"&lt;br&gt;"</span>);</span><br></pre></td></tr></table></figure>### 2.4    运算符**一元运算符**：只有一个运算数的运算符<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">++，-- ，+(-)：正负号</span><br></pre></td></tr></table></figure>* ++ --: 自增(自减)  * ++(--) **在前**，先自增(自减)，再运算  * ++(--) **在后**，先运算，再自增(自减)* +(-)：正负号**注意**：在JS中，如果运算数不是运算符所要求的类型，那么js引擎会**自动的将运算数进行类型转换**> #### 其他类型转number：* string转number：按照字面值转换。如果字面值不是数字，则转为NaN（不是数字的数字）* boolean转number：true转为1，false转为0<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = ++ num ;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num+<span class="string">"&lt;br&gt;"</span>);<span class="comment">// 4</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(a+<span class="string">"&lt;br&gt;"</span>);<span class="comment">// 4</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b= +<span class="string">"123hello"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="keyword">typeof</span> (b)+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(b+<span class="number">1</span>+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag= + <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag2= + <span class="literal">false</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="keyword">typeof</span> (flag) + <span class="string">"&lt;br&gt;"</span>);<span class="comment">//number</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag + <span class="string">"&lt;br&gt;"</span>);<span class="comment">// 1</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag2 + <span class="string">"&lt;br&gt;"</span>);<span class="comment">// 0</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>**算数运算符**<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * % &#x2F;</span><br></pre></td></tr></table></figure>**赋值运算符**<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x3D; +&#x3D; -+....</span><br></pre></td></tr></table></figure>**比较运算符**<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;  &gt;&#x3D;  &lt;&#x3D;  &#x3D;&#x3D;  &#x3D;&#x3D;&#x3D;(全等于)</span><br></pre></td></tr></table></figure>**比较方式**1. **类型相同**：直接比较   - 字符串：按照字典顺序比较。按位逐一比较，直到得出大小为止。2. **类型不同**：先进行类型转换，再比较   - ===：全等于。在比较之前，先判断类型，**如果类型不一样**，则直接返回false**逻辑运算符**<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; || !</span><br></pre></td></tr></table></figure>> #### 其他类型转boolean：1. **number**：0或NaN为假，其他为真2. **string**：除了空字符串("")，其他都是true3. **null&undefined**:都是false4. **对象**：所有对象都为true<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!flag);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//number</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num2 = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> num3 = <span class="literal">NaN</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!num+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!num2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!num3+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//string</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str2=<span class="string">""</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!str+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!str2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// null &amp; undefined</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj=<span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj2=;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!obj+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!obj2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// date</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!date+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">obj = <span class="string">"123"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(obj != <span class="literal">null</span> &amp;&amp; obj.length &gt; <span class="number">0</span>)&#123;<span class="comment">//防止空指针异常</span></span></span><br><span class="line">        alert(123);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//js中可以这样定义，简化书写。</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(obj)&#123;<span class="comment">//防止空指针异常</span></span></span><br><span class="line">        alert(111);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>**三元运算符**? : 表达式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; 3;</span><br><span class="line">var b &#x3D; 4;</span><br><span class="line"></span><br><span class="line">var c &#x3D; a &gt; b ? 1:0;</span><br></pre></td></tr></table></figure>**语法**：* 表达式? 值1:值2;* 判断表达式的值，如果是true则取值1，如果是false则取值2；### 2.5    流程控制语句：if...else...**switch**:- 在java中，  - switch语句可以接受的数据类型： byte    int    shor    char,    枚举(1.5) ,    String(1.7)- 在JS中,  - switch语句可以接受**任意的原始数据类型**whiledo...whilefor<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    <span class="keyword">switch</span>(a)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            alert(<span class="string">"number"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"abc"</span>:</span><br><span class="line">            alert(<span class="string">"string"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">true</span>:</span><br><span class="line">            alert(<span class="string">"true"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">null</span>:</span><br><span class="line">            alert(<span class="string">"null"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">undefined</span>:</span><br><span class="line">            alert(<span class="string">"undefined"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>### 2.6    JS特殊语法：1. **语句以    ;    结尾**，如果一行只有一条语句则 ;可以省略 (不建议)2. 变量的定义**使用var关键字**，也可以不使用   1. 用： 定义的变量是局部变量   2. 不用：定义的变量是全局变量(不建议)##  练习：99乘法表<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;<span class="number">99</span>乘法表&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        td&#123;</span></span><br><span class="line"><span class="regexp">            border: 1px solid;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">"&lt;table  align='center'&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;tr&gt;"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;=i ; j++) &#123;</span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"&lt;td&gt;"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.write(i+<span class="string">"x"</span>+j+<span class="string">"="</span>+(i*j)+<span class="string">"&amp;nbsp;&amp;nbsp;&amp;nbsp"</span>)</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"&lt;/td&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;/tr&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">"&lt;/table&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure>## 0.3    基本对象：### Function：函数(方法)对象**创建**：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="built_in">Function</span>(形式参数列表,方法体);  <span class="comment">//忘掉吧</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> 方法名称(<span class="params">形式参数列表</span>)</span>&#123;</span><br><span class="line">      方法体</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> 方法名 = <span class="function"><span class="keyword">function</span>(<span class="params">形式参数列表</span>)</span>&#123;</span><br><span class="line">        方法体</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>**属性**：    **length**:代表形参的个数#### 特点：1. 方法定义是，**形参的类型不用写,返回值类型也不写。**2. 方法是一个对象，如果**定义名称相同的方法，会覆盖**3. 在JS中，方法的**调用只与方法的名称有关**，和参数列表无关4. 在方法声明中有一个隐藏的内置对象（数组），arguments,封装所有的实际参数**调用**：方法名称(实际参数列表);<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;</span><br><span class="line">            sum += <span class="built_in">arguments</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> sum = add(<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line">    alert(sum);</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>### Array:数组对象**创建**：1. var arr = new Array(元素列表);2. var arr = new Array(默认长度);3. var arr = [元素列表];- **方法**  - **join(参数)**：将数组中的元素按照指定的分隔符拼接为字符串  - **push()**：向数组的末尾添加一个或更多元素，并返回新的长度。**属性****length**：数组的长度**特点**：- **JS中，数组元素的类型可变的。**- **JS中，数组长度可变的。**1. Boolean### Date：日期对象1. 创建：   var date = new Date();1. 方法：       **toLocaleString**()：返回当前date对象对应的时间本地字符串格式   ​    **getTime**():获取毫秒值。返回当前如期对象描述的时间到1970年1月1日零点的毫秒值差### 3.4    Math：数学对象1. 创建：   - 特点：Math对象不用创建，直接使用。  Math.方法名();2. 方法：   **random**():返回 0 ~ 1 之间的随机数。 含0不含1   **ceil**(x)：对数进行上舍入。   **floor**(x)：对数进行下舍入。   **round**(x)：把数四舍五入为最接近的整数。3. 属性：- **PI**4. Number5. String### 3.5    RegExp：正则表达式对象1. **正则表达式**：定义字符串的组成规则。   - **单个字符**:[ ]      - 如： [a] [ab] [a-zA-Z0-9_]      - ```cmd         特殊符号代表特殊含义的单个字符:         \d:单个数字字符 [0-9]         \w:单个单词字符[a-zA-Z0-9_]         <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- **量词符号**：</span><br><span class="line"></span><br><span class="line">  - &#96;&#96;&#96;cmd</span><br><span class="line">    ?：表示出现0次或1次</span><br><span class="line">    </span><br><span class="line">    *：表示出现0次或多次</span><br><span class="line">    </span><br><span class="line">    +：出现1次或多次</span><br><span class="line">    </span><br><span class="line">    &#123;m,n&#125;:表示 m&lt;&#x3D; 数量 &lt;&#x3D; n</span><br><span class="line">    </span><br><span class="line">     * m如果缺省： &#123;,n&#125;:最多n次</span><br><span class="line">    </span><br><span class="line">     * n如果缺省：&#123;m,&#125; 最少m次</span><br></pre></td></tr></table></figure>   - **开始结束符号**     - ^: 开始     - $: 结束2. **正则对象**：   1. 创建      **var reg = new RegExp("正则表达式");**      **var reg = /正则表达式/;**   2. 方法          **test(参数)：验证指定的字符串是否符合正则定义的规范**    ### 3.6    Global1. **特点**：全局对象，这个Global中封装的方法不需要对象就可以直接调用。  方法名():2. **方法**：   **encodeURI**():url编码   **decodeURI**():url解码   **encodeURIComponent**():url编码,编码的字符更多     **decodeURIComponent():**url解码   **parseInt():**将字符串转为数字   - 逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number     - isNaN():判断一个值是否是NaN     - NaN六亲不认，连自己都不认。NaN参与的 “ ==    ”比较全部返回**false**   **eval():**    分析JavaScript 字符串，并把它作为**脚本代码来执行。**   ​      3. **URL编码**     传智播客 =  %E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2* BOM* DOM​    ]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JavaScript概况&lt;/li&gt;
&lt;li&gt;JS数据类型&lt;/li&gt;
&lt;li&gt;JS基本语法&lt;/li&gt;
&lt;li&gt;JS
      
    
    </summary>
    
    
      <category term="JS" scheme="http://yoursite.com/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>Others/乒乓球学习</title>
    <link href="http://yoursite.com/2021/04/04/Others/%E4%B9%92%E4%B9%93%E7%90%83%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2021/04/04/Others/%E4%B9%92%E4%B9%93%E7%90%83%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-04-04T02:20:55.050Z</published>
    <updated>2021-04-04T03:39:31.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h2><blockquote><h4 id="打法选择"><a href="#打法选择" class="headerlink" title="打法选择"></a>打法选择</h4></blockquote><p>主要分为进攻性打法和防守型打法</p><p>进攻性打法：横版两面弧圈结合快攻，以及直板横打等等</p><p>防守型打法：削球等等</p><p><strong>打法和器材有关，</strong>现今，进攻性打法，一般选择两面反胶的比较多</p><blockquote><h4 id="握板方式"><a href="#握板方式" class="headerlink" title="握板方式"></a>握板方式</h4></blockquote><p><strong>横握球拍：</strong></p><ol><li>横握球拍原则上，要让两面都能发得上力</li><li>横握球拍时，不要握紧，用放松</li><li>拇指在胶皮与拍柄旁边，食指在球拍的侧面</li></ol><p><strong>实战中手指的应用：</strong></p><p><strong>两面均衡发力的技巧</strong></p><blockquote><h4 id="准备姿势"><a href="#准备姿势" class="headerlink" title="准备姿势"></a>准备姿势</h4></blockquote><p>进攻性准备姿势</p><p>防守型准备姿势</p><blockquote><h4 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h4></blockquote><p>还原的注意事项：</p><blockquote><h4 id="预判"><a href="#预判" class="headerlink" title="预判"></a>预判</h4></blockquote><p>落点的预判技巧：</p><h2 id="2-准备训练"><a href="#2-准备训练" class="headerlink" title="2.准备训练"></a>2.准备训练</h2><blockquote><h4 id="横版正手攻球"><a href="#横版正手攻球" class="headerlink" title="横版正手攻球"></a>横版正手攻球</h4></blockquote><p>攻球要点：</p><p>注意事项：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-准备&quot;&gt;&lt;a href=&quot;#1-准备&quot; class=&quot;headerlink&quot; title=&quot;1.准备&quot;&gt;&lt;/a&gt;1.准备&lt;/h2&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;打法选择&quot;&gt;&lt;a href=&quot;#打法选择&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>XYplorer使用教程</title>
    <link href="http://yoursite.com/2021/03/26/Others/XYplorer%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2021/03/26/Others/XYplorer%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2021-03-26T13:54:18.000Z</published>
    <updated>2021-03-26T13:57:46.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="7-设置"><a href="#7-设置" class="headerlink" title="7.设置"></a>7.设置</h2><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="外壳集成"><a href="#外壳集成" class="headerlink" title="外壳集成"></a>外壳集成</h4><p><strong>64-windows</strong></p><ul><li>显示64位右键菜单</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;7-设置&quot;&gt;&lt;a href=&quot;#7-设置&quot; class=&quot;headerlink&quot; title=&quot;7.设置&quot;&gt;&lt;/a&gt;7.设置&lt;/h2&gt;&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h
      
    
    </summary>
    
    
    
      <category term="XYplorer" scheme="http://yoursite.com/tags/XYplorer/"/>
    
  </entry>
  
  <entry>
    <title>List-03多表查询&amp;事务&amp;DCL</title>
    <link href="http://yoursite.com/2021/03/26/MySQL/List-03%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2&amp;%E4%BA%8B%E5%8A%A1&amp;DCL/"/>
    <id>http://yoursite.com/2021/03/26/MySQL/List-03%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2&amp;%E4%BA%8B%E5%8A%A1&amp;DCL/</id>
    <published>2021-03-26T08:34:58.000Z</published>
    <updated>2021-03-26T08:36:28.853Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ol><li><p>多表查询</p></li><li><p>事务</p></li><li><p>DCL</p></li></ol><h2 id="01-多表查询："><a href="#01-多表查询：" class="headerlink" title="01.多表查询："></a>01.多表查询：</h2><p><strong>查询语法</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">列名列表</span><br><span class="line">from</span><br><span class="line">表名列表</span><br><span class="line">where....</span><br></pre></td></tr></table></figure><p><strong>准备sql</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 创建部门表</span><br><span class="line">CREATE TABLE dept(</span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">NAME VARCHAR(20)</span><br><span class="line">);</span><br><span class="line">INSERT INTO dept (NAME) VALUES (&#39;开发部&#39;),(&#39;市场部&#39;),(&#39;财务部&#39;);</span><br><span class="line"></span><br><span class="line"># 创建员工表</span><br><span class="line">CREATE TABLE emp (</span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">NAME VARCHAR(10),</span><br><span class="line">gender CHAR(1), -- 性别</span><br><span class="line">salary DOUBLE, -- 工资</span><br><span class="line">join_date DATE, -- 入职日期</span><br><span class="line">dept_id INT,</span><br><span class="line">FOREIGN KEY (dept_id) REFERENCES dept(id) -- 外键，关联部门表(部门表的主键)</span><br><span class="line">);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;孙悟空&#39;,&#39;男&#39;,7200,&#39;2013-02-24&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;猪八戒&#39;,&#39;男&#39;,3600,&#39;2010-12-02&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;唐僧&#39;,&#39;男&#39;,9000,&#39;2008-08-08&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;白骨精&#39;,&#39;女&#39;,5000,&#39;2015-10-07&#39;,3);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;蜘蛛精&#39;,&#39;女&#39;,4500,&#39;2011-03-14&#39;,1);</span><br></pre></td></tr></table></figure><p><strong>笛卡尔积</strong>：</p><p>有两个集合A,B .取这两个集合的所有组成情况。</p><p><strong>要完成多表查询，需要消除无用的数据</strong></p><h3 id="多表查询的分类："><a href="#多表查询的分类：" class="headerlink" title="多表查询的分类："></a>多表查询的分类：</h3><h4 id="内连接查询："><a href="#内连接查询：" class="headerlink" title="内连接查询："></a>内连接查询：</h4><p><strong>隐式内连接</strong>：</p><p>使用where条件消除无用数据</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-- 查询所有员工信息和对应的部门信息</span><br><span class="line"></span><br><span class="line">SELECT * FROM emp,dept WHERE emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br><span class="line"></span><br><span class="line">-- 查询员工表的名称，性别。部门表的名称</span><br><span class="line">SELECT emp.name,emp.gender,dept.name FROM emp,dept WHERE emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">t1.name, -- 员工表的姓名</span><br><span class="line">t1.gender,-- 员工表的性别</span><br><span class="line">t2.name -- 部门表的名称</span><br><span class="line">FROM</span><br><span class="line">emp t1,</span><br><span class="line">dept t2</span><br><span class="line">WHERE </span><br><span class="line">t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure><p><strong>显式内连接：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法： select 字段列表 from 表名1 [inner] join 表名2 on 条件</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">SELECT * FROM emp INNER JOIN dept ON emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br><span class="line"></span><br><span class="line">SELECT * FROM emp JOIN dept ON emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><ol><li>从哪些表中查询数据</li><li>条件是什么</li><li>哪些字段</li></ol><h4 id="外链接查询："><a href="#外链接查询：" class="headerlink" title="外链接查询："></a>外链接查询：</h4><p><strong>左外连接</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：select 字段列表 from 表1 left [outer] join 表2 on 条件；</span><br><span class="line"></span><br><span class="line">查询的是左表所有数据以及其交集部分。</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">-- 查询所有员工信息，如果员工有部门，则查询部门名称，没有部门，则不显示部门名称</span><br><span class="line">SELECT t1.*,t2.&#96;name&#96; FROM emp t1 LEFT JOIN dept t2 ON t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure><p><strong>右外连接</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：select 字段列表 from 表1 right [outer] join 表2 on 条件；</span><br><span class="line"></span><br><span class="line">查询的是右表所有数据以及其交集部分。</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">SELECT * FROM dept t2 RIGHT JOIN emp t1 ON t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure><h4 id="子查询："><a href="#子查询：" class="headerlink" title="子查询："></a>子查询：</h4><p><strong>概念</strong>：<strong>查询中嵌套查询</strong>，称嵌套查询为子查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 查询工资最高的员工信息</span><br><span class="line">-- 1 查询最高的工资是多少 9000</span><br><span class="line">SELECT MAX(salary) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2 查询员工信息，并且工资等于9000的</span><br><span class="line">SELECT * FROM emp WHERE emp.&#96;salary&#96; &#x3D; 9000;</span><br><span class="line"></span><br><span class="line">-- 一条sql就完成这个操作。子查询</span><br><span class="line">SELECT * FROM emp WHERE emp.&#96;salary&#96; &#x3D; (SELECT MAX(salary) FROM emp);</span><br></pre></td></tr></table></figure><h5 id="子查询不同情况"><a href="#子查询不同情况" class="headerlink" title="子查询不同情况"></a>子查询不同情况</h5><ol><li><p><strong>子查询的结果是单行单列的</strong>：</p><p>子查询可以作为条件，使用运算符去判断。 <strong>运算符： &gt; &gt;= &lt; &lt;= =</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工工资小于平均工资的人</span><br><span class="line">SELECT * FROM emp WHERE emp.salary &lt; (SELECT AVG(salary) FROM emp);</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p><strong>子查询的结果是多行单列的</strong>：</p><p>子查询可以作为条件，使用<strong>运算符in</strong>来判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 查询&#39;财务部&#39;和&#39;市场部&#39;所有的员工信息</span><br><span class="line">SELECT id FROM dept WHERE NAME &#x3D; &#39;财务部&#39; OR NAME &#x3D; &#39;市场部&#39;;</span><br><span class="line">SELECT * FROM emp WHERE dept_id &#x3D; 3 OR dept_id &#x3D; 2;</span><br><span class="line">-- 子查询</span><br><span class="line">SELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE NAME &#x3D; &#39;财务部&#39; OR NAME &#x3D; &#39;市场部&#39;);</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p><strong>子查询的结果是多行多列的</strong>：</p><p>子查询可以<strong>作为一张虚拟表参与查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工入职日期是2011-11-11日之后的员工信息和部门信息</span><br><span class="line">-- 子查询</span><br><span class="line">SELECT * FROM dept t1 ,(SELECT * FROM emp WHERE emp.&#96;join_date&#96; &gt; &#39;2011-11-11&#39;) t2</span><br><span class="line">WHERE t1.id &#x3D; t2.dept_id;</span><br><span class="line"></span><br><span class="line">-- 普通内连接</span><br><span class="line">SELECT * FROM emp t1,dept t2 WHERE t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96; AND t1.&#96;join_date&#96; &gt;  &#39;2011-11-11&#39;;</span><br></pre></td></tr></table></figure></li></ol><h2 id="多表查询练习"><a href="#多表查询练习" class="headerlink" title="多表查询练习"></a>多表查询练习</h2><p><strong>创建多个表格</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">-- 部门表</span><br><span class="line">   CREATE TABLE dept (</span><br><span class="line">   id INT PRIMARY KEY PRIMARY KEY, -- 部门id</span><br><span class="line">   dname VARCHAR(50), -- 部门名称</span><br><span class="line">   loc VARCHAR(50) -- 部门所在地</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   -- 添加4个部门</span><br><span class="line">   INSERT INTO dept(id,dname,loc) VALUES</span><br><span class="line">   (10,&#39;教研部&#39;,&#39;北京&#39;),</span><br><span class="line">   (20,&#39;学工部&#39;,&#39;上海&#39;),</span><br><span class="line">   (30,&#39;销售部&#39;,&#39;广州&#39;),</span><br><span class="line">   (40,&#39;财务部&#39;,&#39;深圳&#39;);</span><br><span class="line"></span><br><span class="line">   -- 职务表，职务名称，职务描述</span><br><span class="line">   CREATE TABLE job (</span><br><span class="line">   id INT PRIMARY KEY,</span><br><span class="line">   jname VARCHAR(20),</span><br><span class="line">   description VARCHAR(50)</span><br><span class="line">   );</span><br><span class="line">   -- 添加4个职务</span><br><span class="line">   INSERT INTO job (id, jname, description) VALUES</span><br><span class="line">   (1, &#39;董事长&#39;, &#39;管理整个公司，接单&#39;),</span><br><span class="line">   (2, &#39;经理&#39;, &#39;管理部门员工&#39;),</span><br><span class="line">   (3, &#39;销售员&#39;, &#39;向客人推销产品&#39;),</span><br><span class="line">   (4, &#39;文员&#39;, &#39;使用办公软件&#39;);</span><br><span class="line"></span><br><span class="line">   -- 员工表</span><br><span class="line">   CREATE TABLE emp (</span><br><span class="line">   id INT PRIMARY KEY, -- 员工id</span><br><span class="line">   ename VARCHAR(50), -- 员工姓名</span><br><span class="line">   job_id INT, -- 职务id</span><br><span class="line">   mgr INT , -- 上级领导</span><br><span class="line">   joindate DATE, -- 入职日期</span><br><span class="line">   salary DECIMAL(7,2), -- 工资</span><br><span class="line">   bonus DECIMAL(7,2), -- 奖金</span><br><span class="line">   dept_id INT, -- 所在部门编号</span><br><span class="line">   CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),</span><br><span class="line">   CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   -- 添加员工</span><br><span class="line">   INSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES</span><br><span class="line">   (1001,&#39;孙悟空&#39;,4,1004,&#39;2000-12-17&#39;,&#39;8000.00&#39;,NULL,20),</span><br><span class="line">   (1002,&#39;卢俊义&#39;,3,1006,&#39;2001-02-20&#39;,&#39;16000.00&#39;,&#39;3000.00&#39;,30),</span><br><span class="line">   (1003,&#39;林冲&#39;,3,1006,&#39;2001-02-22&#39;,&#39;12500.00&#39;,&#39;5000.00&#39;,30),</span><br><span class="line">   (1004,&#39;唐僧&#39;,2,1009,&#39;2001-04-02&#39;,&#39;29750.00&#39;,NULL,20),</span><br><span class="line">   (1005,&#39;李逵&#39;,4,1006,&#39;2001-09-28&#39;,&#39;12500.00&#39;,&#39;14000.00&#39;,30),</span><br><span class="line">   (1006,&#39;宋江&#39;,2,1009,&#39;2001-05-01&#39;,&#39;28500.00&#39;,NULL,30),</span><br><span class="line">   (1007,&#39;刘备&#39;,2,1009,&#39;2001-09-01&#39;,&#39;24500.00&#39;,NULL,10),</span><br><span class="line">   (1008,&#39;猪八戒&#39;,4,1004,&#39;2007-04-19&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">   (1009,&#39;罗贯中&#39;,1,NULL,&#39;2001-11-17&#39;,&#39;50000.00&#39;,NULL,10),</span><br><span class="line">   (1010,&#39;吴用&#39;,3,1006,&#39;2001-09-08&#39;,&#39;15000.00&#39;,&#39;0.00&#39;,30),</span><br><span class="line">   (1011,&#39;沙僧&#39;,4,1004,&#39;2007-05-23&#39;,&#39;11000.00&#39;,NULL,20),</span><br><span class="line">   (1012,&#39;李逵&#39;,4,1006,&#39;2001-12-03&#39;,&#39;9500.00&#39;,NULL,30),</span><br><span class="line">   (1013,&#39;小白龙&#39;,4,1004,&#39;2001-12-03&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">   (1014,&#39;关羽&#39;,4,1007,&#39;2002-01-23&#39;,&#39;13000.00&#39;,NULL,10)</span><br><span class="line">   -- 工资等级表</span><br><span class="line">   CREATE TABLE salarygrade (</span><br><span class="line">   grade INT PRIMARY KEY,   -- 级别</span><br><span class="line">   losalary INT,  -- 最低工资</span><br><span class="line">   hisalary INT -- 最高工资</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   -- 添加5个工资等级</span><br><span class="line">   INSERT INTO salarygrade(grade,losalary,hisalary) VALUES</span><br><span class="line">   (1,7000,12000),</span><br><span class="line">   (2,12010,14000),</span><br><span class="line">   (3,14010,20000),</span><br><span class="line">   (4,20010,30000),</span><br><span class="line">   (5,30010,99990);</span><br></pre></td></tr></table></figure><p><strong>需求</strong>：</p><p>1.查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">分析：</span><br><span class="line">1.员工编号，员工姓名，工资，需要查询emp表  职务名称，职务描述 需要查询job表</span><br><span class="line">2.查询条件 emp.job_id &#x3D; job.id</span><br><span class="line"></span><br><span class="line">*&#x2F;</span><br><span class="line">SELECT </span><br><span class="line">t1.&#96;id&#96;, -- 员工编号</span><br><span class="line">t1.&#96;ename&#96;, -- 员工姓名</span><br><span class="line">t1.&#96;salary&#96;,-- 工资</span><br><span class="line">t2.&#96;jname&#96;, -- 职务名称</span><br><span class="line">t2.&#96;description&#96; -- 职务描述</span><br><span class="line">FROM </span><br><span class="line">emp t1, job t2</span><br><span class="line">WHERE </span><br><span class="line">t1.&#96;job_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure><p>2.查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">分析：</span><br><span class="line">1. 员工编号，员工姓名，工资 emp  职务名称，职务描述 job  部门名称，部门位置 dept</span><br><span class="line">2. 条件： emp.job_id &#x3D; job.id and emp.dept_id &#x3D; dept.id</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">t1.&#96;id&#96;, -- 员工编号</span><br><span class="line">t1.&#96;ename&#96;, -- 员工姓名</span><br><span class="line">t1.&#96;salary&#96;,-- 工资</span><br><span class="line">t2.&#96;jname&#96;, -- 职务名称</span><br><span class="line">t2.&#96;description&#96;, -- 职务描述</span><br><span class="line">t3.&#96;dname&#96;, -- 部门名称</span><br><span class="line">t3.&#96;loc&#96; -- 部门位置</span><br><span class="line">FROM </span><br><span class="line">emp t1, job t2,dept t3</span><br><span class="line">WHERE </span><br><span class="line">t1.&#96;job_id&#96; &#x3D; t2.&#96;id&#96; AND t1.&#96;dept_id&#96; &#x3D; t3.&#96;id&#96;;</span><br></pre></td></tr></table></figure><p> 3.查询员工姓名，工资，工资等级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">分析：</span><br><span class="line">1.员工姓名，工资 emp  工资等级 salarygrade</span><br><span class="line">2.条件 emp.salary &gt;&#x3D; salarygrade.losalary and emp.salary &lt;&#x3D; salarygrade.hisalary</span><br><span class="line">emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">t1.ename ,</span><br><span class="line">t1.&#96;salary&#96;,</span><br><span class="line">t2.*</span><br><span class="line">FROM emp t1, salarygrade t2</span><br><span class="line">WHERE t1.&#96;salary&#96; BETWEEN t2.&#96;losalary&#96; AND t2.&#96;hisalary&#96;;</span><br></pre></td></tr></table></figure><p>4.查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">   分析：</span><br><span class="line">        1. 员工姓名，工资 emp ， 职务名称，职务描述 job 部门名称，部门位置，dept  工资等级 salarygrade</span><br><span class="line">        2. 条件： emp.job_id &#x3D; job.id </span><br><span class="line">        and emp.dept_id &#x3D; dept.id </span><br><span class="line">        and emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary</span><br><span class="line">              </span><br><span class="line">*&#x2F;</span><br><span class="line">        SELECT</span><br><span class="line">        t1.&#96;ename&#96;,</span><br><span class="line">        t1.&#96;salary&#96;,</span><br><span class="line">        t2.&#96;jname&#96;,</span><br><span class="line">        t2.&#96;description&#96;,</span><br><span class="line">        t3.&#96;dname&#96;,</span><br><span class="line">        t3.&#96;loc&#96;,</span><br><span class="line">        t4.&#96;grade&#96;</span><br><span class="line">        FROM</span><br><span class="line">        emp t1,job t2,dept t3,salarygrade t4</span><br><span class="line">        WHERE</span><br><span class="line">        t1.&#96;job_id&#96; &#x3D; t2.&#96;id&#96;</span><br><span class="line">        AND t1.&#96;dept_id&#96; &#x3D; t3.&#96;id&#96;</span><br><span class="line">        AND t1.&#96;salary&#96; BETWEEN t4.&#96;losalary&#96; AND t4.&#96;hisalary&#96;;</span><br></pre></td></tr></table></figure><p>5.查询出部门编号、部门名称、部门位置、部门人数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">   分析：</span><br><span class="line">      1.部门编号、部门名称、部门位置 dept 表。 部门人数 emp表</span><br><span class="line">      </span><br><span class="line">      2.使用分组查询。 按照emp.dept_id完成分组，查询count(id)</span><br><span class="line">      </span><br><span class="line">      3.使用子查询将第2步的查询结果和dept表进行关联查询</span><br><span class="line">*&#x2F;</span><br><span class="line">  SELECT</span><br><span class="line">     t1.&#96;id&#96;,t1.&#96;dname&#96;,t1.&#96;loc&#96; , t2.total</span><br><span class="line">  FROM</span><br><span class="line">     dept t1,</span><br><span class="line">     (SELECT</span><br><span class="line">        dept_id,COUNT(id) total</span><br><span class="line">     FROM</span><br><span class="line">        emp</span><br><span class="line">     GROUP BY dept_id) t2</span><br><span class="line">  WHERE t1.&#96;id&#96; &#x3D; t2.dept_id;</span><br></pre></td></tr></table></figure><p>6.查询所有员工的姓名及其直接上级的姓名,没有领导的员工也需要查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">分析：</span><br><span class="line">1.姓名 emp， 直接上级的姓名 emp</span><br><span class="line">* emp表的id 和 mgr 是自关联</span><br><span class="line">                            </span><br><span class="line">2.条件 emp.id &#x3D; emp.mgr</span><br><span class="line">     </span><br><span class="line">3.查询左表的所有数据，和 交集数据</span><br><span class="line">* 使用左外连接查询</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    SELECT</span><br><span class="line">                    t1.ename,</span><br><span class="line">                    t1.mgr,</span><br><span class="line">                    t2.&#96;id&#96;,</span><br><span class="line">                    t2.&#96;ename&#96;</span><br><span class="line">                    FROM emp t1</span><br><span class="line">                    LEFT JOIN emp t2</span><br><span class="line">                    ON t1.&#96;mgr&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure><h2 id="02-事务"><a href="#02-事务" class="headerlink" title="02.事务"></a>02.事务</h2><p><strong>概念</strong>：</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ol><li>开启事务： start transaction;</li><li>回滚：rollback;</li><li>提交：commit;</li></ol><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE account (</span><br><span class="line">   id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">   NAME VARCHAR(10),</span><br><span class="line">   balance DOUBLE</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">INSERT INTO account (NAME, balance) VALUES (&#39;zhangsan&#39;, 1000), (&#39;lisi&#39;, 1000);</span><br><span class="line"></span><br><span class="line">SELECT * FROM account;</span><br><span class="line"></span><br><span class="line">UPDATE account SET balance &#x3D; 1000;</span><br><span class="line">-- 张三给李四转账 500 元</span><br><span class="line"></span><br><span class="line">-- 0. 开启事务</span><br><span class="line">START TRANSACTION;</span><br><span class="line">-- 1. 张三账户 -500</span><br><span class="line"></span><br><span class="line">UPDATE account SET balance &#x3D; balance - 500 WHERE NAME &#x3D; &#39;zhangsan&#39;;</span><br><span class="line">-- 2. 李四账户 +500</span><br><span class="line">-- 出错了...</span><br><span class="line">UPDATE account SET balance &#x3D; balance + 500 WHERE NAME &#x3D; &#39;lisi&#39;;</span><br><span class="line"></span><br><span class="line">-- 发现执行没有问题，提交事务</span><br><span class="line">COMMIT;</span><br><span class="line"></span><br><span class="line">-- 发现出问题了，回滚事务</span><br><span class="line">ROLLBACK;</span><br></pre></td></tr></table></figure><h3 id="事务提交的两种方式："><a href="#事务提交的两种方式：" class="headerlink" title="事务提交的两种方式："></a>事务提交的两种方式：</h3><h4 id="自动提交："><a href="#自动提交：" class="headerlink" title="自动提交："></a>自动提交：</h4><p><strong>MySQL</strong>数据库中事务默认自动提交</p><ul><li>一条DML(增删改)语句会自动提交一次事务。</li></ul><h4 id="手动提交："><a href="#手动提交：" class="headerlink" title="手动提交："></a><strong>手动提交</strong>：</h4><p><strong>Oracle</strong> 数据库默认是手动提交事务</p><p>需要先开启事务，再提交</p><ul><li>查看事务的默认提交方式：SELECT @@autocommit; – 1  代表自动提交  0 代表手动提交<ul><li>修改默认提交方式： set @@autocommit = 0;</li></ul></li></ul><h3 id="事务的四大特征："><a href="#事务的四大特征：" class="headerlink" title="事务的四大特征："></a>事务的四大特征：</h3><ol><li>原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。</li><li>持久性：当事务提交或回滚后，数据库会持久化的保存数据。</li><li>隔离性：多个事务之间。相互独立。</li><li>一致性：事务操作前后，数据总量不变</li></ol><h3 id="事务的隔离级别（了解）"><a href="#事务的隔离级别（了解）" class="headerlink" title="事务的隔离级别（了解）"></a>事务的隔离级别（了解）</h3><p><strong>概念</strong>：多个事务之间隔离的，相互独立的。</p><ul><li>但是如果多个事务<strong>操作同一批数据</strong>，则会引发一些问题，<strong>设置不同的隔离级别</strong>就可以解决这些问题。</li></ul><h4 id="存在问题："><a href="#存在问题：" class="headerlink" title="存在问题："></a><strong>存在问题</strong>：</h4><ol><li>脏读：一个事务，读取到另一个事务中没有提交的数据</li><li>不可重复读(虚读)：在同一个事务中，两次读取到的数据不一样。</li><li>幻读：一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。</li></ol><h4 id="隔离级别："><a href="#隔离级别：" class="headerlink" title="隔离级别："></a><strong>隔离级别</strong>：</h4><ol><li>read uncommitted：读未提交<ul><li>产生的问题：脏读、不可重复读、幻读</li></ul></li><li>read committed：读已提交 （Oracle）<ul><li>产生的问题：不可重复读、幻读</li></ul></li><li>repeatable read：可重复读 （MySQL默认）<ul><li>产生的问题：幻读</li></ul></li><li>serializable：串行化<ul><li>可以解决所有的问题</li></ul></li></ol><p><strong>注意</strong>：</p><p>隔离级别从小到大安全性越来越高，但是效率越来越低</p><p><strong>数据库查询隔离级别</strong>：</p><p>select @@tx_isolation;</p><p><strong>数据库设置隔离级别</strong>：</p><p>set global transaction isolation level  级别字符串;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set global transaction isolation level read uncommitted;</span><br><span class="line"></span><br><span class="line">start transaction;</span><br><span class="line">-- 转账操作</span><br><span class="line">update account set balance &#x3D; balance - 500 where id &#x3D; 1;</span><br><span class="line">update account set balance &#x3D; balance + 500 where id &#x3D; 2;</span><br></pre></td></tr></table></figure><p>​    </p><h2 id="03-DCL："><a href="#03-DCL：" class="headerlink" title="03.DCL："></a>03.DCL：</h2><p><strong>SQL</strong>分类：</p><pre><code>1. DDL：操作数据库和表2. DML：增删改表中数据3. DQL：查询表中数据4. DCL：管理用户，授权</code></pre><p><strong>DBA</strong>：数据库管理员</p><p><strong>DCL</strong>：管理用户，授权</p><h3 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h3><p>添加用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</span><br></pre></td></tr></table></figure><p>删除用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</span><br></pre></td></tr></table></figure><p>修改用户密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET PASSWORD &#x3D; PASSWORD(&#39;新密码&#39;) WHERE USER &#x3D; &#39;用户名&#39;;</span><br><span class="line">UPDATE USER SET PASSWORD &#x3D; PASSWORD(&#39;abc&#39;) WHERE USER &#x3D; &#39;lisi&#39;;</span><br><span class="line"></span><br><span class="line">SET PASSWORD FOR &#39;用户名&#39;@&#39;主机名&#39; &#x3D; PASSWORD(&#39;新密码&#39;);</span><br><span class="line">SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; &#x3D; PASSWORD(&#39;123&#39;);</span><br></pre></td></tr></table></figure><h4 id="忘记root用户的密码"><a href="#忘记root用户的密码" class="headerlink" title="忘记root用户的密码"></a>忘记root用户的密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. cmd -- &gt; net stop mysql 停止mysql服务</span><br><span class="line">* 需要管理员运行该cmd</span><br><span class="line"></span><br><span class="line">2. 使用无验证方式启动mysql服务： mysqld --skip-grant-tables</span><br><span class="line">3. 打开新的cmd窗口,直接输入mysql命令，敲回车。就可以登录成功</span><br><span class="line">4. use mysql;</span><br><span class="line">5. update user set password &#x3D; password(&#39;你的新密码&#39;) where user &#x3D; &#39;root&#39;;</span><br><span class="line">6. 关闭两个窗口</span><br><span class="line">7. 打开任务管理器，手动结束mysqld.exe 的进程</span><br><span class="line">8. 启动mysql服务</span><br><span class="line">9. 使用新密码登录。</span><br></pre></td></tr></table></figure><h3 id="查询用户："><a href="#查询用户：" class="headerlink" title="查询用户："></a>查询用户：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 1. 切换到mysql数据库</span><br><span class="line">USE myql;</span><br><span class="line">-- 2. 查询user表</span><br><span class="line">SELECT * FROM USER;</span><br><span class="line"></span><br><span class="line">* 通配符： % 表示可以在任意主机使用用户登录数据库</span><br></pre></td></tr></table></figure><h3 id="权限管理："><a href="#权限管理：" class="headerlink" title="权限管理："></a>权限管理：</h3><h4 id="查询权限："><a href="#查询权限：" class="headerlink" title="查询权限："></a>查询权限：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 查询权限</span><br><span class="line">SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">SHOW GRANTS FOR &#39;lisi&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure><h4 id="授予权限："><a href="#授予权限：" class="headerlink" title="授予权限："></a>授予权限：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 授予权限</span><br><span class="line">grant 权限列表 on 数据库名.表名 to &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">-- 给张三用户授予所有权限，在任意数据库任意表上</span><br><span class="line"></span><br><span class="line">GRANT ALL ON *.* TO &#39;zhangsan&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><h4 id="撤销权限："><a href="#撤销权限：" class="headerlink" title="撤销权限："></a>撤销权限：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql-- 撤销权限：mysql</span><br><span class="line">revoke 权限列表 on 数据库名.表名 from &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">REVOKE UPDATE ON db3.&#96;account&#96; FROM &#39;lisi&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;多表查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DCL&lt;/p&gt;
&lt;/l
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>List-02_DQL&amp;约束</title>
    <link href="http://yoursite.com/2021/03/26/MySQL/List-02_DQL&amp;%E7%BA%A6%E6%9D%9F/"/>
    <id>http://yoursite.com/2021/03/26/MySQL/List-02_DQL&amp;%E7%BA%A6%E6%9D%9F/</id>
    <published>2021-03-26T08:32:03.000Z</published>
    <updated>2021-04-05T03:56:40.556Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul><li><p>DQL:查询语句</p><ul><li>排序查询</li><li>聚合函数</li><li>分组查询</li><li>分页查询</li></ul></li><li><p>约束</p></li><li><p>多表之间的关系</p></li><li><p>范式</p></li><li><p>数据库的备份和还原</p></li></ul><h2 id="0-1-DQL-查询语句"><a href="#0-1-DQL-查询语句" class="headerlink" title="0.1 DQL:查询语句"></a>0.1 DQL:查询语句</h2><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><ul><li><p>语法：order by 子句</p><ul><li>order by 排序字段1 排序方式1 ，  排序字段2 排序方式2…</li></ul></li><li><p>排序方式：</p><ul><li>ASC：升序，默认的。</li><li>DESC：降序。</li></ul></li><li><p>注意：</p><ul><li>如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。</li></ul></li></ul><h4 id="聚合函数："><a href="#聚合函数：" class="headerlink" title="聚合函数："></a>聚合函数：</h4><ul><li>将一列数据作为一个整体，进行纵向的计算。</li></ul><ul><li><p><strong>count：计算个数</strong></p><ol><li>一般选择非空的列：主键</li><li>count(*)</li></ol></li><li><p><strong>max：计算最大值</strong></p></li><li><p><strong>min：计算最小值</strong></p></li><li><p><strong>sum：计算和</strong></p></li><li><p><strong>avg：计算平均值</strong></p></li><li><p><strong>注意：聚合函数的计算，排除null值。</strong></p><ul><li><strong>解决方案：</strong><ul><li>选择不包含非空的列进行计算</li><li>IFNULL函数</li></ul></li></ul></li></ul><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询:"></a>分组查询:</h4><ul><li>语法：group by 分组字段；</li></ul><ul><li>分组之后查询的字段：<strong>分组字段、聚合函数</strong>。分组查询通常和聚合函数，一同使用。</li></ul><ul><li><p><strong>where 和 having 的区别？</strong></p><ul><li>where <strong>在分组之前进行限定</strong>，如果不满足条件，则不参与分组。</li><li>having<strong>在分组之后进行限定</strong>，如果不满足结果，则不会被查询出来</li><li><strong>where 后不可以跟聚合函数，having可以进行聚合函数的判断。</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. -- 按照性别分组。分别查询男、女同学的平均分</span><br><span class="line"></span><br><span class="line">   SELECT sex , AVG(math) FROM student GROUP BY sex;</span><br><span class="line"></span><br><span class="line">   -- 按照性别分组。分别查询男、女同学的平均分,人数</span><br><span class="line"></span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) FROM student GROUP BY sex;</span><br><span class="line"></span><br><span class="line">   --  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组</span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex;</span><br><span class="line"></span><br><span class="line">   --  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组,分组之后。人数要大于2个人</span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex HAVING COUNT(id) &gt; 2;</span><br><span class="line"></span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) 人数 FROM student WHERE math &gt; 70 GROUP BY sex HAVING 人数 &gt; 2;</span><br></pre></td></tr></table></figure></li></ul><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><ul><li><p><strong>语法</strong>：limit 开始的索引 , 每页查询的条数；</p></li><li><p><strong>公式</strong>：<strong>开始的索引</strong> = （当前的页码 - 1） *  每页显示的条数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 每页显示3条记录 </span><br><span class="line"></span><br><span class="line">SELECT * FROM student LIMIT 0,3; -- 第1页</span><br><span class="line"></span><br><span class="line">SELECT * FROM student LIMIT 3,3; -- 第2页</span><br><span class="line"></span><br><span class="line">SELECT * FROM student LIMIT 6,3; -- 第3页</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong>limit 是一个MySQL”方言”</strong></li></ul><h2 id="0-2-约束"><a href="#0-2-约束" class="headerlink" title="0.2 约束"></a>0.2 约束</h2><ul><li>概念： 对表中的数据进行限定，保证数据的正确性、有效性和完整性。    </li></ul><h4 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h4><ol><li>主键约束：primary key</li><li>非空约束：not null</li><li>唯一约束：unique</li><li>外键约束：foreign key</li></ol><h4 id="非空约束：not-null"><a href="#非空约束：not-null" class="headerlink" title="非空约束：not null"></a>非空约束：not null</h4><p>值不能为null</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 创建表时添加约束</span><br><span class="line"></span><br><span class="line">   CREATE TABLE stu(</span><br><span class="line">   id INT,</span><br><span class="line">   NAME VARCHAR(20) NOT NULL -- name为非空</span><br><span class="line">   );</span><br><span class="line">   </span><br><span class="line">2. 创建表完后，添加非空约束</span><br><span class="line">   ALTER TABLE stu MODIFY NAME VARCHAR(20) NOT NULL;</span><br><span class="line"></span><br><span class="line">3. 删除name的非空约束</span><br><span class="line">   ALTER TABLE stu MODIFY NAME VARCHAR(20);</span><br></pre></td></tr></table></figure><p>​    </p><h4 id="唯一约束：unique"><a href="#唯一约束：unique" class="headerlink" title="唯一约束：unique"></a>唯一约束：unique</h4><p>值不能重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1. 创建表时，添加唯一约束</span><br><span class="line"></span><br><span class="line">2. CREATE TABLE stu(</span><br><span class="line">   id INT,</span><br><span class="line">   phone_number VARCHAR(20) UNIQUE -- 添加了唯一约束</span><br><span class="line"></span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   * 注意mysql中，唯一约束限定的列的值可以有多个null</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">3. 删除唯一约束</span><br><span class="line"></span><br><span class="line">   ALTER TABLE stu DROP INDEX phone_number;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 在创建表后，添加唯一约束</span><br><span class="line">   ALTER TABLE stu MODIFY phone_number VARCHAR(20) UNIQUE;</span><br></pre></td></tr></table></figure><h4 id="主键约束：primary-key"><a href="#主键约束：primary-key" class="headerlink" title="主键约束：primary key"></a>主键约束：primary key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1. 注意：</span><br><span class="line"></span><br><span class="line">   1. 含义：非空且唯一</span><br><span class="line">   2. 一张表只能有一个字段为主键</span><br><span class="line">   3. 主键就是表中记录的唯一标识</span><br><span class="line"></span><br><span class="line">2. 在创建表时，添加主键约束</span><br><span class="line"></span><br><span class="line">   create table stu(</span><br><span class="line">   id int primary key,-- 给id添加主键约束</span><br><span class="line">   name varchar(20)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">3. 删除主键</span><br><span class="line">   -- 错误 alter table stu modify id int ;</span><br><span class="line">     ALTER TABLE stu DROP PRIMARY KEY;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 创建完表后，添加主键</span><br><span class="line">   ALTER TABLE stu MODIFY id INT PRIMARY KEY;</span><br></pre></td></tr></table></figure><h4 id="自动增长："><a href="#自动增长：" class="headerlink" title="自动增长："></a>自动增长：</h4><p><strong>概念：</strong></p><p>如果某一列是数值类型的，使用 <strong>auto_increment</strong> 可以来完成值得自动增长</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. 在创建表时，添加主键约束，并且完成主键自增长</span><br><span class="line"></span><br><span class="line">  create table stu(</span><br><span class="line">  id int primary key auto_increment,-- 给id添加主键约束</span><br><span class="line">  name varchar(20)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 删除自动增长</span><br><span class="line">   ALTER TABLE stu MODIFY id INT;</span><br><span class="line"></span><br><span class="line">3. 添加自动增长</span><br><span class="line">   ALTER TABLE stu MODIFY id INT AUTO_INCREMENT;</span><br></pre></td></tr></table></figure><h4 id="外键约束：foreign-key"><a href="#外键约束：foreign-key" class="headerlink" title="外键约束：foreign key"></a>外键约束：foreign key</h4><p>让表于表产生关系，从而保证数据的正确性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1. 在创建表时，可以添加外键</span><br><span class="line"></span><br><span class="line">   * 语法：</span><br><span class="line"></span><br><span class="line">     create table 表名(</span><br><span class="line">     ....</span><br><span class="line">     外键列</span><br><span class="line">     constraint 外键名称 foreign key (外键列名称) references 主表名称(主表列名称)</span><br><span class="line">     );</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">2. 删除外键</span><br><span class="line">   ALTER TABLE 表名 DROP FOREIGN KEY 外键名称;</span><br><span class="line"></span><br><span class="line">3. 创建表之后，添加外键</span><br><span class="line"></span><br><span class="line">  ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称);</span><br></pre></td></tr></table></figure><h4 id="级联操作"><a href="#级联操作" class="headerlink" title="级联操作"></a>级联操作</h4><p>添加级联操作</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 </span><br><span class="line">FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称) ON UPDATE CASCADE ON DELETE CASCADE  ;</span><br></pre></td></tr></table></figure><p>分类：</p><ol><li>级联更新：ON UPDATE CASCADE </li><li>级联删除：ON DELETE CASCADE </li></ol><h2 id="0-3-数据库的设计"><a href="#0-3-数据库的设计" class="headerlink" title="0.3 数据库的设计"></a>0.3 数据库的设计</h2><h4 id="多表之间的关系"><a href="#多表之间的关系" class="headerlink" title="多表之间的关系"></a>多表之间的关系</h4><ul><li><h4 id="分类：-1"><a href="#分类：-1" class="headerlink" title="分类："></a>分类：</h4></li></ul><ul><li><p>一对一(了解)：</p><ul><li>如：人和身份证</li><li>分析：一个人只有一个身份证，一个身份证只能对应一个人</li></ul></li><li><p>一对多(多对一)：</p><ul><li>如：部门和员工</li><li>分析：一个部门有多个员工，一个员工只能对应一个部门</li></ul></li><li><p>多对多：</p><ul><li>如：学生和课程</li><li>分析：一个学生可以选择很多门课程，一个课程也可以被很多学生选择</li></ul></li></ul><h4 id="实现关系："><a href="#实现关系：" class="headerlink" title="实现关系："></a>实现关系：</h4><ul><li><p><strong>一对多</strong>(多对一)：</p><ul><li>如：部门和员工</li><li>实现方式：在   <strong>多的一方</strong>   建立外键，指向  <strong>一的一方</strong>    的主键。</li></ul></li><li><p><strong>多对多</strong>：</p><ul><li>如：学生和课程</li><li>实现方式：多对多关系实现需要借助<strong>第三张中间表</strong>。<ul><li><strong>中间表至少包含两个字段</strong>，这两个字段作为第三张表的外键，分别指向两张表的主键</li></ul></li></ul></li><li><p><strong>一对一</strong>(了解)：</p><ul><li>如：人和身份证</li><li>实现方式：一对一关系实现，可以在<strong>任意一方添加唯一外键</strong>指向另一方的主键。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">3. 案例</span><br><span class="line">-- 创建旅游线路分类表 tab_category</span><br><span class="line">-- cid 旅游线路分类主键，自动增长</span><br><span class="line">-- cname 旅游线路分类名称非空，唯一，字符串 100</span><br><span class="line">CREATE TABLE tab_category (</span><br><span class="line">cid INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">cname VARCHAR(100) NOT NULL UNIQUE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建旅游线路表 tab_route</span><br><span class="line">&#x2F;*</span><br><span class="line">rid 旅游线路主键，自动增长</span><br><span class="line">rname 旅游线路名称非空，唯一，字符串 100</span><br><span class="line">price 价格</span><br><span class="line">rdate 上架时间，日期类型</span><br><span class="line">cid 外键，所属分类</span><br><span class="line">*&#x2F;</span><br><span class="line">CREATE TABLE tab_route(</span><br><span class="line">rid INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">rname VARCHAR(100) NOT NULL UNIQUE,</span><br><span class="line">price DOUBLE,</span><br><span class="line">rdate DATE,</span><br><span class="line">cid INT,</span><br><span class="line">FOREIGN KEY (cid) REFERENCES tab_category(cid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;*创建用户表 tab_user</span><br><span class="line">uid 用户主键，自增长</span><br><span class="line">username 用户名长度 100，唯一，非空</span><br><span class="line">password 密码长度 30，非空</span><br><span class="line">name 真实姓名长度 100</span><br><span class="line">birthday 生日</span><br><span class="line">sex 性别，定长字符串 1</span><br><span class="line">telephone 手机号，字符串 11</span><br><span class="line">email 邮箱，字符串长度 100</span><br><span class="line">*&#x2F;</span><br><span class="line">CREATE TABLE tab_user (</span><br><span class="line">uid INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">username VARCHAR(100) UNIQUE NOT NULL,</span><br><span class="line">PASSWORD VARCHAR(30) NOT NULL,</span><br><span class="line">NAME VARCHAR(100),</span><br><span class="line">birthday DATE,</span><br><span class="line">sex CHAR(1) DEFAULT &#39;男&#39;,</span><br><span class="line">telephone VARCHAR(11),</span><br><span class="line">email VARCHAR(100)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">创建收藏表 tab_favorite</span><br><span class="line">rid 旅游线路 id，外键</span><br><span class="line">date 收藏时间</span><br><span class="line">uid 用户 id，外键</span><br><span class="line">rid 和 uid 不能重复，设置复合主键，同一个用户不能收藏同一个线路两次</span><br><span class="line">*&#x2F;</span><br><span class="line">CREATE TABLE tab_favorite (</span><br><span class="line">rid INT, -- 线路id</span><br><span class="line">DATE DATETIME,</span><br><span class="line">uid INT, -- 用户id</span><br><span class="line">-- 创建复合主键</span><br><span class="line">PRIMARY KEY(rid,uid), -- 联合主键</span><br><span class="line">FOREIGN KEY (rid) REFERENCES tab_route(rid),</span><br><span class="line">FOREIGN KEY(uid) REFERENCES tab_user(uid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>​        </p><h2 id="0-4-数据库设计的范式"><a href="#0-4-数据库设计的范式" class="headerlink" title="0.4 数据库设计的范式"></a>0.4 数据库设计的范式</h2><h4 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h4><ul><li>设计数据库时，需要遵循的一些<strong>规范</strong>。</li><li>要遵循后边的范式要求，<strong>必须先遵循前边的</strong>所有范式要求</li><li>设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库</li><li>这些不同的规范要求被称为不同的范式</li><li>各种范式呈递次规范，越高的范式数据库冗余越小。</li></ul><h4 id="六种范式："><a href="#六种范式：" class="headerlink" title="六种范式："></a>六种范式：</h4><ul><li>第一范式（1NF）、第二范式（2NF）、第三范式（3NF）</li><li>巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。</li></ul><blockquote><h4 id="分类：-2"><a href="#分类：-2" class="headerlink" title="分类："></a>分类：</h4></blockquote><p>第一范式（1NF）：<strong>每一列都是不可分割的原子数据项</strong></p><p>第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于码（在1NF<strong>基础上消除非主属性对主码的部分函数依赖</strong>）</p><p>第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF<strong>基础上消除传递依赖</strong>）</p><h4 id="几个概念："><a href="#几个概念：" class="headerlink" title="几个概念："></a>几个概念：</h4><blockquote><h4 id="函数依赖："><a href="#函数依赖：" class="headerlink" title="函数依赖："></a>函数依赖：</h4></blockquote><p>A–&gt;B,如果通过A属性(属性组)的值，可以<strong>确定唯一</strong>B属性的值。则称B依赖于A</p><p>例如：学号–&gt;姓名。  （学号，课程名称） –&gt; 分数</p><blockquote><h4 id="完全函数依赖："><a href="#完全函数依赖：" class="headerlink" title="完全函数依赖："></a>完全函数依赖：</h4></blockquote><p>A–&gt;B， 如果A是一个属性组，则B属性值得确定需要依赖于A属性组中<strong>所有的属性值</strong>。</p><p>例如：（学号，课程名称） –&gt; 分数</p><blockquote><h4 id="部分函数依赖："><a href="#部分函数依赖：" class="headerlink" title="部分函数依赖："></a>部分函数依赖：</h4></blockquote><p>A–&gt;B， 如果A是一个属性组，则B属性值得确定只需要依赖于A属性组中<strong>某一些值</strong>即可。</p><p>例如：（学号，课程名称） – &gt; 姓名</p><blockquote><h4 id="传递函数依赖："><a href="#传递函数依赖：" class="headerlink" title="传递函数依赖："></a>传递函数依赖：</h4></blockquote><p>A–&gt;B, B – &gt;C . 如果通过A属性(属性组)的值，可以确定唯一B属性的值，在通过B属性（属性组）的值可以确定唯一C属性的值，则称 C 传递函数依赖于A<br>例如：学号–&gt;系名，系名–&gt;系主任</p><blockquote><h4 id="码："><a href="#码：" class="headerlink" title="码："></a>码：</h4></blockquote><p>如果在一张表中，一个属性或属性组，<strong>被其他所有属性所完全依赖</strong>，则称这个属性(属性组)为该表的码<br>例如：该表中码为：（学号，课程名称）</p><ul><li>主属性：<strong>码属性组中</strong>的所有属性</li><li>非主属性：<strong>除过</strong>码属性组的属性</li></ul><h2 id="0-5-数据库的备份和还原"><a href="#0-5-数据库的备份和还原" class="headerlink" title="0.5 数据库的备份和还原"></a>0.5 数据库的备份和还原</h2><h4 id="命令行："><a href="#命令行：" class="headerlink" title="命令行："></a>命令行：</h4><ul><li>备份： </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u用户名 -p密码 数据库名称 &gt; 保存的路径</span><br></pre></td></tr></table></figure><ul><li><p>还原：</p><ol><li>登录数据库</li><li>创建数据库</li><li>使用数据库</li><li>执行文件。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source 文件路径</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DQL:查询语句&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;排序查询&lt;/li&gt;
&lt;li&gt;聚合函数&lt;/li&gt;
&lt;li&gt;分组查
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
  </entry>
  
</feed>
