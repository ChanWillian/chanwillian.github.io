<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Very</title>
  
  <subtitle>personal blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-03-02T06:14:24.451Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chan Willian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SublimeText使用教程</title>
    <link href="http://yoursite.com/2021/03/02/Others/SublimeText%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2021/03/02/Others/SublimeText%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2021-03-02T06:13:43.000Z</published>
    <updated>2021-03-02T06:14:24.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p><strong>1.ctrl+shift+p</strong><br><strong>2.输入install</strong><br><strong>3.选第一个东西</strong><br><strong>4.输入名称</strong><br><strong>5.点击安装，等待安装成功</strong></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p><strong>ctrl + ~</strong><br><strong>ctrl+shift+p</strong></p><p><strong>ctrl + n         创建新窗口</strong><br><strong>ctrl + tab     切换窗口</strong><br><strong>ctrl + j          与上一行合并</strong><br><strong>ctrl + d         选中单词，多次使用可以选中相同单词</strong></p><p><strong>！+ tab        生成html5框架</strong></p><h2 id="xxx-md文件"><a href="#xxx-md文件" class="headerlink" title="xxx.md文件"></a>xxx.md文件</h2><p>将光标放到任意行的末尾按下 ctrl + B<br>可以生成xxx.html文件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;插件安装&quot;&gt;&lt;a href=&quot;#插件安装&quot; class=&quot;headerlink&quot; title=&quot;插件安装&quot;&gt;&lt;/a&gt;插件安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.ctrl+shift+p&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.输入install&lt;/strong
      
    
    </summary>
    
    
    
      <category term="course" scheme="http://yoursite.com/tags/course/"/>
    
  </entry>
  
  <entry>
    <title>List-01C++基础</title>
    <link href="http://yoursite.com/2021/02/27/C++/List-01C++%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2021/02/27/C++/List-01C++%E5%9F%BA%E7%A1%80/</id>
    <published>2021-02-27T03:33:47.000Z</published>
    <updated>2021-02-27T03:35:08.178Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="C++开发笔记" scheme="http://yoursite.com/tags/C-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux/Linux快捷键</title>
    <link href="http://yoursite.com/2021/02/23/Linux/Linux%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2021/02/23/Linux/Linux%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2021-02-23T08:29:28.434Z</published>
    <updated>2021-02-23T08:39:02.407Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + T打开终端</span><br><span class="line">ctrl + <span class="built_in">shift</span> + = 放大终端窗口的字体显示</span><br><span class="line">ctrl + - 缩小终端窗口的字体显示</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h2&gt;&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C/VS疑难解决</title>
    <link href="http://yoursite.com/2021/02/23/C/VS%E7%96%91%E9%9A%BE%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2021/02/23/C/VS%E7%96%91%E9%9A%BE%E8%A7%A3%E5%86%B3/</id>
    <published>2021-02-23T07:46:02.683Z</published>
    <updated>2021-02-23T07:46:30.004Z</updated>
    
    <content type="html"><![CDATA[<p>04.解决VS的4996错误</p><ul><li><p>代码开头加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define _CRT_SECURE_NO_WARNINGS</span><br></pre></td></tr></table></figure></li><li><p>代码加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#pragma warning(disable:4996)</span><br></pre></td></tr></table></figure></li><li><p>更改本个项目属性：</p><ul><li><p>右键此项目——》属性——》c\c++——》预处理器——》预处理器定义——》加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_CRT_SECURE_NO_WARNINGS</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;04.解决VS的4996错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;代码开头加上&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C/VS快捷键</title>
    <link href="http://yoursite.com/2021/02/23/C/VS%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2021/02/23/C/VS%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2021-02-23T07:45:28.508Z</published>
    <updated>2021-02-23T07:45:43.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="02-VS常用快捷键"><a href="#02-VS常用快捷键" class="headerlink" title="02.VS常用快捷键"></a>02.VS常用快捷键</h2><table><thead><tr><th align="left"><strong>快捷键</strong></th><th align="left"><strong>含义</strong></th></tr></thead><tbody><tr><td align="left">Ctrl + K ,  Ctrl  +  F</td><td align="left">自动格式化代码 ，代码格式标准化</td></tr><tr><td align="left">Alt +  上下键</td><td align="left">向上（向下）移动某行代码：光标所在行</td></tr><tr><td align="left">Ctrl +  C</td><td align="left">复制某行：光标所在行</td></tr><tr><td align="left">Ctrl  +   V</td><td align="left">粘贴某行：复制的那行</td></tr><tr><td align="left">Ctrl   +   X</td><td align="left">剪切某行：光标所在行</td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left">Ctrl + K，Ctrl + C</td><td align="left">注释代码</td></tr><tr><td align="left">Ctrl + K，Ctrl + U</td><td align="left">取消注释代码</td></tr><tr><td align="left">F9</td><td align="left">设置断点</td></tr><tr><td align="left">F5</td><td align="left">调试运行</td></tr><tr><td align="left">Ctrl + F5</td><td align="left">不调试运行</td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + B</td><td align="left">编译，不运行</td></tr><tr><td align="left">F10</td><td align="left">next调试</td></tr><tr><td align="left">F11</td><td align="left">step调试</td></tr></tbody></table><h2 id="03-Qt常用快捷键"><a href="#03-Qt常用快捷键" class="headerlink" title="03.Qt常用快捷键"></a>03.Qt常用快捷键</h2><table><thead><tr><th><strong>快捷键</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>Ctrl + <strong>i</strong></td><td>自动格式化代码 ，代码格式标准化</td></tr><tr><td>Ctrl + <strong>/</strong></td><td>注释/取消注释</td></tr><tr><td>Alt + Enter</td><td>自动完成类函数定义</td></tr><tr><td>F4</td><td>.h 文件和对应.cpp 文件切换</td></tr><tr><td></td><td></td></tr><tr><td>F9</td><td>设置断点</td></tr><tr><td>F5</td><td>调试运行</td></tr><tr><td>Ctrl + R</td><td>编译，但不调试运行</td></tr><tr><td>Ctrl + b</td><td>编译，不运行</td></tr><tr><td></td><td></td></tr><tr><td>F10</td><td>next调试</td></tr><tr><td>F11</td><td>step调试</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;02-VS常用快捷键&quot;&gt;&lt;a href=&quot;#02-VS常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;02.VS常用快捷键&quot;&gt;&lt;/a&gt;02.VS常用快捷键&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;&lt;st
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>GitHub基本使用</title>
    <link href="http://yoursite.com/2021/01/14/Github/GitHub%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2021/01/14/Github/GitHub%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2021-01-14T08:06:43.000Z</published>
    <updated>2021-01-14T08:06:43.084Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>List-02高级数据类型</title>
    <link href="http://yoursite.com/2020/08/22/Python/List-02%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2020/08/22/Python/List-02%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-08-22T13:32:20.000Z</published>
    <updated>2020-08-22T13:34:10.273Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>列表</li><li>元组</li><li>字典</li><li>字符串</li><li>公共方法</li><li>变量高级</li></ul><h1 id="0-1-列表"><a href="#0-1-列表" class="headerlink" title="0.1    列表"></a>0.1    列表</h1><h3 id="1-1-列表的定义"><a href="#1-1-列表的定义" class="headerlink" title="1.1    列表的定义"></a>1.1    列表的定义</h3><ul><li><code>List</code>（列表） 是 <code>Python</code> 中使用 <strong>最频繁</strong> 的数据类型，在其他语言中通常叫做 <strong>数组</strong></li><li>专门用于存储 <strong>一串 信息</strong></li><li>列表用 <code>[]</code> 定义，<strong>数据</strong> 之间使用 <code>,</code> 分隔</li><li>列表的 <strong>索引</strong> 从 <code>0</code> 开始<ul><li><strong>索引</strong> 就是数据在 <strong>列表</strong> 中的位置编号，<strong>索引</strong> 又可以被称为 <strong>下标</strong></li></ul></li></ul><blockquote><p>注意：从列表中取值时，如果 <strong>超出索引范围</strong>，程序会报错</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name_list = [<span class="string">"zhangsan"</span>, <span class="string">"lisi"</span>, <span class="string">"wangwu"</span>]</span><br></pre></td></tr></table></figure><p><img src="D:%5CMyWorld%5Cdownloads%5CA01.%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B%5CA02.Python%5CB01_01%5C02python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E9%98%B6%E6%AE%B5-python%E5%9F%BA%E7%A1%80%5C%E8%AF%BE%E4%BB%B6%5Cday05%5Cmedia%5C14972568611505%5C001_%E5%88%97%E8%A1%A8%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="001_列表示意图"></p><h3 id="1-2-列表常用操作"><a href="#1-2-列表常用操作" class="headerlink" title="1.2    列表常用操作"></a>1.2    列表常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>列表</strong>，例如：<code>name_list = []</code></li><li>输入 <code>name_list.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>列表</strong> 能够使用的 <strong>方法</strong> 如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">In [1]: name_list.</span><br><span class="line"></span><br><span class="line">name_list.append   name_list.count    name_list.insert   name_list.reverse</span><br><span class="line"></span><br><span class="line">name_list.clear    name_list.extend   name_list.pop      name_list.sort</span><br><span class="line"></span><br><span class="line">name_list.copy     name_list.index    name_list.remove</span><br></pre></td></tr></table></figure><h4 id="del-关键字（科普）"><a href="#del-关键字（科普）" class="headerlink" title="del 关键字（科普）"></a>del 关键字（科普）</h4><ul><li>使用 <code>del</code> 关键字(<code>delete</code>) 同样可以删除列表中元素</li><li><code>del</code> 关键字本质上是用来 <strong>将一个变量从内存中删除的</strong></li><li>如果使用 <code>del</code> 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> name_list[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><blockquote><p>在日常开发中，要从列表删除数据，建议 <strong>使用列表提供的方法</strong></p></blockquote><h4 id="关键字、函数和方法（科普）"><a href="#关键字、函数和方法（科普）" class="headerlink" title="关键字、函数和方法（科普）"></a>关键字、函数和方法（科普）</h4><ul><li><strong>关键字</strong> 是 Python 内置的、具有特殊意义的标识符</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> keyword</span><br><span class="line">In [<span class="number">2</span>]: print(keyword.kwlist)</span><br><span class="line">In [<span class="number">3</span>]: print(len(keyword.kwlist))</span><br></pre></td></tr></table></figure><blockquote><p>关键字后面不需要使用括号</p></blockquote><ul><li><strong>函数</strong> 封装了独立功能，可以直接调用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名(参数)</span><br></pre></td></tr></table></figure><blockquote><p>函数需要死记硬背</p></blockquote><ul><li><strong>方法</strong> 和函数类似，同样是封装了独立的功能</li><li><strong>方法</strong> 需要通过 <strong>对象</strong> 来调用，表示针对这个 <strong>对象</strong> 要做的操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.方法名(参数)</span><br></pre></td></tr></table></figure><blockquote><p>在变量后面输入 <code>.</code>，然后选择针对这个变量要执行的操作，记忆起来比函数要简单很多</p></blockquote><h3 id="1-3-循环遍历"><a href="#1-3-循环遍历" class="headerlink" title="1.3 循环遍历"></a>1.3 循环遍历</h3><ul><li><p><strong>遍历</strong> 就是 <strong>从头到尾</strong> <strong>依次</strong> 从 <strong>列表</strong> 中获取数据</p><ul><li>在 <strong>循环体内部</strong> 针对 <strong>每一个元素</strong>，执行相同的操作</li></ul></li><li><p>在 <code>Python</code> 中为了提高列表的遍历效率，专门提供的 <strong>迭代 iteration 遍历</strong></p></li><li><p>使用 <code>for</code> 就能够实现迭代遍历</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的变量 in 列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> name_list:</span><br><span class="line"></span><br><span class="line">    循环内部针对列表元素进行操作</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><p><img src="D:%5CMyWorld%5Cdownloads%5CA01.%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B%5CA02.Python%5CB01_01%5C02python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E9%98%B6%E6%AE%B5-python%E5%9F%BA%E7%A1%80%5C%E8%AF%BE%E4%BB%B6%5Cday05%5Cmedia%5C14972568611505%5C002_forin%E5%BE%AA%E7%8E%AF%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="002_forin循环流程图-w420"></p><h3 id="1-4-应用场景"><a href="#1-4-应用场景" class="headerlink" title="1.4 应用场景"></a>1.4 <strong>应用场景</strong></h3><ul><li>尽管 <code>Python</code> 的 <strong>列表</strong> 中可以 <strong>存储不同类型的数据</strong></li><li>但是在开发中，更多的应用场景是<ol><li><strong>列表</strong> 存储相同类型的数据</li><li>通过 <strong>迭代遍历</strong>，在循环体内部，针对列表中的每一项元素，执行相同的操作</li></ol></li></ul><h1 id="0-2-元组"><a href="#0-2-元组" class="headerlink" title="0.2    元组"></a>0.2    元组</h1><h3 id="2-1-元组的定义"><a href="#2-1-元组的定义" class="headerlink" title="2.1 元组的定义"></a>2.1 元组的定义</h3><ul><li><code>Tuple</code>（元组）与列表类似，不同之处在于元组的 <strong>元素不能修改</strong><ul><li><strong>元组</strong> 表示多个元素组成的序列</li><li><strong>元组</strong> 在 <code>Python</code> 开发中，有特定的应用场景</li></ul></li><li>用于存储 <strong>一串 信息</strong>，<strong>数据</strong> 之间使用 <code>,</code> 分隔</li><li>元组用 <code>()</code> 定义</li><li>元组的 <strong>索引</strong> 从 <code>0</code> 开始<ul><li><strong>索引</strong> 就是数据在 <strong>元组</strong> 中的位置编号</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = (<span class="string">"zhangsan"</span>, <span class="number">18</span>, <span class="number">1.75</span>)</span><br></pre></td></tr></table></figure><h4 id="创建空元组"><a href="#创建空元组" class="headerlink" title="创建空元组"></a>创建空元组</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = ()</span><br></pre></td></tr></table></figure><p>元组中 <strong>只包含一个元素</strong> 时，需要 <strong>在元素后面添加逗号</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = (<span class="number">50</span>, )</span><br></pre></td></tr></table></figure><p><img src="D:%5CMyWorld%5Cdownloads%5CA01.%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B%5CA02.Python%5CB01_01%5C02python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E9%98%B6%E6%AE%B5-python%E5%9F%BA%E7%A1%80%5C%E8%AF%BE%E4%BB%B6%5Cday05%5Cmedia%5C14972568611505%5C003_%E5%85%83%E7%BB%84%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="003_元组示意图-w500"></p><h3 id="2-2-元组常用操作"><a href="#2-2-元组常用操作" class="headerlink" title="2.2 元组常用操作"></a>2.2 元组常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>元组</strong>，例如：<code>info = ()</code></li><li>输入 <code>info.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>元组</strong> 能够使用的函数如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.count  info.index</span><br></pre></td></tr></table></figure><blockquote><p>有关 <strong>元组</strong> 的 <strong>常用操作</strong> 可以参照上图练习</p></blockquote><h3 id="2-3-循环遍历"><a href="#2-3-循环遍历" class="headerlink" title="2.3 循环遍历"></a>2.3 循环遍历</h3><ul><li><strong>取值</strong> 就是从 <strong>元组</strong> 中获取存储在指定位置的数据</li><li><strong>遍历</strong> 就是 <strong>从头到尾</strong> <strong>依次</strong> 从 <strong>元组</strong> 中获取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的变量 in 元组</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line"></span><br><span class="line">    循环内部针对元组元素进行操作</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><blockquote><ul><li>在 <code>Python</code> 中，可以使用 <code>for</code> 循环遍历所有非数字型类型的变量：<strong>列表</strong>、<strong>元组</strong>、<strong>字典</strong> 以及 <strong>字符串</strong></li><li>提示：在实际开发中，除非 <strong>能够确认元组中的数据类型</strong>，否则针对元组的循环遍历需求并不是很多</li></ul></blockquote><h3 id="2-4-应用场景"><a href="#2-4-应用场景" class="headerlink" title="2.4 应用场景"></a>2.4 应用场景</h3><ul><li>尽管可以使用 <code>for in</code> 遍历 <strong>元组</strong></li><li>但是在开发中，更多的应用场景是：<ul><li><strong>函数的 参数 和 返回值</strong>，一个函数可以接收 <strong>任意多个参数</strong>，或者 <strong>一次返回多个数据</strong><ul><li>有关 <strong>函数的参数 和 返回值</strong>，在后续 <strong>函数高级</strong> 给大家介绍</li></ul></li><li><strong>格式字符串</strong>，格式化字符串后面的 <code>()</code> 本质上就是一个元组</li><li><strong>让列表不可以被修改</strong>，以保护数据安全</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">info = (<span class="string">"zhangsan"</span>, <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"%s 的年龄是 %d"</span> % info)</span><br></pre></td></tr></table></figure><h4 id="元组和列表之间的转换"><a href="#元组和列表之间的转换" class="headerlink" title="元组和列表之间的转换"></a>元组和列表之间的转换</h4><ul><li>使用 <code>list</code> 函数可以把元组转换成列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(元组)</span><br></pre></td></tr></table></figure><ul><li>使用 <code>tuple</code> 函数可以把列表转换成元组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tuple(列表)</span><br></pre></td></tr></table></figure><h1 id="0-3-字典"><a href="#0-3-字典" class="headerlink" title="0.3    字典"></a>0.3    字典</h1><h3 id="3-1-字典的定义"><a href="#3-1-字典的定义" class="headerlink" title="3.1 字典的定义"></a>3.1 字典的定义</h3><ul><li><code>dictionary</code>（字典） 是 <strong>除列表以外</strong> <code>Python</code> 之中 <strong>最灵活</strong> 的数据类型</li><li>字典同样可以用来 <strong>存储多个数据</strong><ul><li>通常用于存储 <strong>描述一个 <code>物体</code> 的相关信息</strong> </li></ul></li><li>和列表的区别<ul><li><strong>列表</strong> 是 <strong>有序</strong> 的对象集合</li><li><strong>字典</strong> 是 <strong>无序</strong> 的对象集合</li></ul></li><li>字典用 <code>{}</code> 定义</li><li>字典使用 <strong>键值对</strong> 存储数据，键值对之间使用 <code>,</code> 分隔<ul><li><strong>键</strong> <code>key</code> 是索引</li><li><strong>值</strong> <code>value</code> 是数据</li><li><strong>键</strong> 和 <strong>值</strong> 之间使用 <code>:</code> 分隔</li><li><strong>键必须是唯一的</strong></li><li><strong>值</strong> 可以取任何数据类型，但 <strong>键</strong> 只能使用 <strong>字符串</strong>、<strong>数字</strong>或 <strong>元组</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xiaoming = &#123;<span class="string">"name"</span>: <span class="string">"小明"</span>,</span><br><span class="line">            <span class="string">"age"</span>: <span class="number">18</span>,</span><br><span class="line">            <span class="string">"gender"</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">"height"</span>: <span class="number">1.75</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="D:%5CMyWorld%5Cdownloads%5CA01.%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B%5CA02.Python%5CB01_01%5C02python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E9%98%B6%E6%AE%B5-python%E5%9F%BA%E7%A1%80%5C%E8%AF%BE%E4%BB%B6%5Cday05%5Cmedia%5C14972568611505%5C002_%E5%AD%97%E5%85%B8%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="002_字典示意图"></p><h3 id="3-2-字典常用操作"><a href="#3-2-字典常用操作" class="headerlink" title="3.2 字典常用操作"></a>3.2 字典常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>字典</strong>，例如：<code>xiaoming = {}</code></li><li>输入 <code>xiaoming.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>字典</strong> 能够使用的函数如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: xiaoming.</span><br><span class="line"></span><br><span class="line">xiaoming.clear       xiaoming.items       xiaoming.setdefault</span><br><span class="line"></span><br><span class="line">xiaoming.copy        xiaoming.keys        xiaoming.update</span><br><span class="line"></span><br><span class="line">xiaoming.fromkeys    xiaoming.pop         xiaoming.values</span><br><span class="line"></span><br><span class="line">xiaoming.get         xiaoming.popitem</span><br></pre></td></tr></table></figure><blockquote><p>有关 <strong>字典</strong> 的 <strong>常用操作</strong> 可以参照上图练习</p></blockquote><h3 id="3-3-循环遍历"><a href="#3-3-循环遍历" class="headerlink" title="3.3 循环遍历"></a>3.3 循环遍历</h3><ul><li><strong>遍历</strong> 就是 <strong>依次</strong> 从 <strong>字典</strong> 中获取所有键值对</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的 `key 的变量` in 字典</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> xiaoming:</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"%s: %s"</span> % (k, xiaoming[k]))</span><br></pre></td></tr></table></figure><blockquote><p>提示：在实际开发中，由于字典中每一个键值对保存数据的类型是不同的，所以针对字典的循环遍历需求并不是很多</p></blockquote><h3 id="3-4-应用场景"><a href="#3-4-应用场景" class="headerlink" title="3.4 应用场景"></a>3.4 <strong>应用场景</strong></h3><ul><li>尽管可以使用 <code>for in</code> 遍历 <strong>字典</strong></li><li>但是在开发中，更多的应用场景是：<ul><li>使用 <strong>多个键值对</strong>，存储 <strong>描述一个 <code>物体</code> 的相关信息</strong> —— 描述更复杂的数据信息</li><li>将 <strong>多个字典</strong> 放在 <strong>一个列表</strong> 中，再进行遍历，在循环体内部针对每一个字典进行 <strong>相同的处理</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">card_list = [&#123;<span class="string">"name"</span>: <span class="string">"张三"</span>,</span><br><span class="line">              <span class="string">"qq"</span>: <span class="string">"12345"</span>,</span><br><span class="line">              <span class="string">"phone"</span>: <span class="string">"110"</span>&#125;,</span><br><span class="line">             &#123;<span class="string">"name"</span>: <span class="string">"李四"</span>,</span><br><span class="line">              <span class="string">"qq"</span>: <span class="string">"54321"</span>,</span><br><span class="line">              <span class="string">"phone"</span>: <span class="string">"10086"</span>&#125;</span><br><span class="line">             ]</span><br></pre></td></tr></table></figure><h1 id="0-4-字符串"><a href="#0-4-字符串" class="headerlink" title="0.4     字符串"></a>0.4     字符串</h1><h3 id="4-1-字符串的定义"><a href="#4-1-字符串的定义" class="headerlink" title="4.1 字符串的定义"></a>4.1 字符串的定义</h3><ul><li><strong>字符串</strong> 就是 <strong>一串字符</strong>，是编程语言中表示文本的数据类型</li><li>在 Python 中可以使用 <strong>一对双引号</strong> <code>&quot;</code> 或者 <strong>一对单引号</strong> <code>&#39;</code> 定义一个字符串<ul><li>虽然可以使用 <code>\&quot;</code> 或者 <code>\&#39;</code> 做字符串的转义，但是在实际开发中：<ul><li>如果字符串内部需要使用 <code>&quot;</code>，可以使用 <code>&#39;</code> 定义字符串</li><li>如果字符串内部需要使用 <code>&#39;</code>，可以使用 <code>&quot;</code> 定义字符串</li></ul></li></ul></li><li>可以使用 <strong>索引</strong> 获取一个字符串中 <strong>指定位置的字符</strong>，索引计数从 <strong>0</strong> 开始</li><li>也可以使用 <code>for</code> <strong>循环遍历</strong> 字符串中每一个字符</li></ul><blockquote><p>大多数编程语言都是用 <code>&quot;</code> 来定义字符串</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">"Hello Python"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> string:</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure><p><img src="D:%5CMyWorld%5Cdownloads%5CA01.%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B%5CA02.Python%5CB01_01%5C02python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E9%98%B6%E6%AE%B5-python%E5%9F%BA%E7%A1%80%5C%E8%AF%BE%E4%BB%B6%5Cday05%5Cmedia%5C14972568611505%5C005_%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="005_字符串示意图-w500"></p><h3 id="4-2-字符串的常用操作"><a href="#4-2-字符串的常用操作" class="headerlink" title="4.2 字符串的常用操作"></a>4.2 字符串的常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>字符串</strong>，例如：<code>hello_str = &quot;&quot;</code></li><li>输入 <code>hello_str.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>字符串</strong> 能够使用的 <strong>方法</strong> 如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">In [1]: hello_str.</span><br><span class="line"></span><br><span class="line">hello_str.capitalize    hello_str.isidentifier  hello_str.rindex</span><br><span class="line"></span><br><span class="line">hello_str.casefold      hello_str.islower       hello_str.rjust</span><br><span class="line"></span><br><span class="line">hello_str.center        hello_str.isnumeric     hello_str.rpartition</span><br><span class="line"></span><br><span class="line">hello_str.count         hello_str.isprintable   hello_str.rsplit</span><br><span class="line"></span><br><span class="line">hello_str.encode        hello_str.isspace       hello_str.rstrip</span><br><span class="line"></span><br><span class="line">hello_str.endswith      hello_str.istitle       hello_str.split</span><br><span class="line"></span><br><span class="line">hello_str.expandtabs    hello_str.isupper       hello_str.splitlines</span><br><span class="line"></span><br><span class="line">hello_str.find          hello_str.join          hello_str.startswith</span><br><span class="line"></span><br><span class="line">hello_str.format        hello_str.ljust         hello_str.strip</span><br><span class="line"></span><br><span class="line">hello_str.format_map    hello_str.lower         hello_str.swapcase</span><br><span class="line"></span><br><span class="line">hello_str.index         hello_str.lstrip        hello_str.title</span><br><span class="line"></span><br><span class="line">hello_str.isalnum       hello_str.maketrans     hello_str.translate</span><br><span class="line"></span><br><span class="line">hello_str.isalpha       hello_str.partition     hello_str.upper</span><br><span class="line"></span><br><span class="line">hello_str.isdecimal     hello_str.replace       hello_str.zfill</span><br><span class="line"></span><br><span class="line">hello_str.isdigit       hello_str.rfind</span><br></pre></td></tr></table></figure><blockquote><p>提示：正是因为 python 内置提供的方法足够多，才使得在开发时，能够针对字符串进行更加灵活的操作！应对更多的开发需求！</p></blockquote><h4 id="1-判断类型-9"><a href="#1-判断类型-9" class="headerlink" title="1) 判断类型 - 9"></a>1) 判断类型 - 9</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.isspace()</td><td>如果 string 中只包含空格，则返回 True</td></tr><tr><td>string.isalnum()</td><td>如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True</td></tr><tr><td>string.isalpha()</td><td>如果 string 至少有一个字符并且所有字符都是字母则返回 True</td></tr><tr><td>string.isdecimal()</td><td>如果 string 只包含数字则返回 True，<code>全角数字</code></td></tr><tr><td>string.isdigit()</td><td>如果 string 只包含数字则返回 True，<code>全角数字</code>、<code>⑴</code>、<code>\u00b2</code></td></tr><tr><td>string.isnumeric()</td><td>如果 string 只包含数字则返回 True，<code>全角数字</code>，<code>汉字数字</code></td></tr><tr><td>string.istitle()</td><td>如果 string 是标题化的(每个单词的首字母大写)则返回 True</td></tr><tr><td>string.islower()</td><td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True</td></tr><tr><td>string.isupper()</td><td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True</td></tr></tbody></table><h4 id="2-查找和替换-7"><a href="#2-查找和替换-7" class="headerlink" title="2) 查找和替换 - 7"></a>2) 查找和替换 - 7</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.startswith(str)</td><td>检查字符串是否是以 str 开头，是则返回 True</td></tr><tr><td>string.endswith(str)</td><td>检查字符串是否是以 str 结束，是则返回 True</td></tr><tr><td>string.find(str, start=0, end=len(string))</td><td>检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 <code>-1</code></td></tr><tr><td>string.rfind(str, start=0, end=len(string))</td><td>类似于 find()，不过是从右边开始查找</td></tr><tr><td>string.index(str, start=0, end=len(string))</td><td>跟 find() 方法类似，不过如果 str 不在 string 会报错</td></tr><tr><td>string.rindex(str, start=0, end=len(string))</td><td>类似于 index()，不过是从右边开始</td></tr><tr><td>string.replace(old_str, new_str, num=string.count(old))</td><td>把 string 中的 old_str 替换成 new_str，如果 num 指定，则替换不超过 num 次</td></tr></tbody></table><h4 id="3-大小写转换-5"><a href="#3-大小写转换-5" class="headerlink" title="3) 大小写转换 - 5"></a>3) 大小写转换 - 5</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.capitalize()</td><td>把字符串的第一个字符大写</td></tr><tr><td>string.title()</td><td>把字符串的每个单词首字母大写</td></tr><tr><td>string.lower()</td><td>转换 string 中所有大写字符为小写</td></tr><tr><td>string.upper()</td><td>转换 string 中的小写字母为大写</td></tr><tr><td>string.swapcase()</td><td>翻转 string 中的大小写</td></tr></tbody></table><h4 id="4-文本对齐-3"><a href="#4-文本对齐-3" class="headerlink" title="4) 文本对齐 - 3"></a>4) 文本对齐 - 3</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.ljust(width)</td><td>返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串</td></tr><tr><td>string.rjust(width)</td><td>返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串</td></tr><tr><td>string.center(width)</td><td>返回一个原字符串居中，并使用空格填充至长度 width 的新字符串</td></tr></tbody></table><h4 id="5-去除空白字符-3"><a href="#5-去除空白字符-3" class="headerlink" title="5) 去除空白字符 - 3"></a>5) 去除空白字符 - 3</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.lstrip()</td><td>截掉 string 左边（开始）的空白字符</td></tr><tr><td>string.rstrip()</td><td>截掉 string 右边（末尾）的空白字符</td></tr><tr><td>string.strip()</td><td>截掉 string 左右两边的空白字符</td></tr></tbody></table><h4 id="6-拆分和连接-5"><a href="#6-拆分和连接-5" class="headerlink" title="6) 拆分和连接 - 5"></a>6) 拆分和连接 - 5</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.partition(str)</td><td>把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)</td></tr><tr><td>string.rpartition(str)</td><td>类似于 partition() 方法，不过是从右边开始查找</td></tr><tr><td>string.split(str=””, num)</td><td>以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 ‘\r’, ‘\t’, ‘\n’ 和空格</td></tr><tr><td>string.splitlines()</td><td>按照行(‘\r’, ‘\n’, ‘\r\n’)分隔，返回一个包含各行作为元素的列表</td></tr><tr><td>string.join(seq)</td><td>以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串</td></tr></tbody></table><h3 id="4-3-字符串的切片"><a href="#4-3-字符串的切片" class="headerlink" title="4.3 字符串的切片"></a>4.3 字符串的切片</h3><ul><li><strong>切片</strong> 方法适用于 <strong>字符串</strong>、<strong>列表</strong>、<strong>元组</strong><ul><li><strong>切片</strong> 使用 <strong>索引值</strong> 来限定范围，从一个大的 <strong>字符串</strong> 中 <strong>切出</strong> 小的 <strong>字符串</strong></li><li><strong>列表</strong> 和 <strong>元组</strong> 都是 <strong>有序</strong> 的集合，都能够 <strong>通过索引值</strong> 获取到对应的数据</li><li><strong>字典</strong> 是一个 <strong>无序</strong> 的集合，是使用 <strong>键值对</strong> 保存数据</li></ul></li></ul><p><img src="D:%5CMyWorld%5Cdownloads%5CA01.%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B%5CA02.Python%5CB01_01%5C02python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E9%98%B6%E6%AE%B5-python%E5%9F%BA%E7%A1%80%5C%E8%AF%BE%E4%BB%B6%5Cday05%5Cmedia%5C14972568611505%5C006_%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B4%A2%E5%BC%95%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="006_字符串索引示意图"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串[开始索引:结束索引:步长]</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>指定的区间属于 <strong>左闭右开</strong> 型 <code>[开始索引,  结束索引)</code> =&gt; <code>开始索引 &gt;= 范围 &lt; 结束索引</code><ul><li>从 <code>起始</code> 位开始，到 <strong><code>结束</code>位的前一位</strong> 结束（<strong>不包含结束位本身</strong>)</li></ul></li><li>从头开始，<strong>开始索引</strong> <strong>数字可以省略，冒号不能省略</strong></li><li>到末尾结束，<strong>结束索引</strong> <strong>数字可以省略，冒号不能省略</strong></li><li>步长默认为 <code>1</code>，如果连续切片，<strong>数字和冒号都可以省略</strong></li></ol><h4 id="索引的顺序和倒序"><a href="#索引的顺序和倒序" class="headerlink" title="索引的顺序和倒序"></a>索引的顺序和倒序</h4><ul><li>在 Python 中不仅支持 <strong>顺序索引</strong>，同时还支持 <strong>倒序索引</strong></li><li>所谓倒序索引就是 <strong>从右向左</strong> 计算索引<ul><li>最右边的索引值是 <strong>-1</strong>，依次递减</li></ul></li></ul><h1 id="演练需求"><a href="#演练需求" class="headerlink" title="演练需求"></a>演练需求</h1><ul><li><ol><li>截取从 2 ~ 5 位置 的字符串</li></ol></li><li><ol start="2"><li>截取从 2 ~ <code>末尾</code> 的字符串</li></ol></li><li><ol start="3"><li>截取从 <code>开始</code> ~ 5 位置 的字符串</li></ol></li><li><ol start="4"><li>截取完整的字符串</li></ol></li><li><ol start="5"><li>从开始位置，每隔一个字符截取字符串</li></ol></li><li><ol start="6"><li>从索引 1 开始，每隔一个取一个</li></ol></li><li><ol start="7"><li>截取从 2 ~ <code>末尾 - 1</code> 的字符串</li></ol></li><li><ol start="8"><li>截取字符串末尾两个字符</li></ol></li><li><ol start="9"><li>字符串的逆序（面试题）</li></ol></li></ul><p><strong>答案</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">num_str = <span class="string">"0123456789"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 截取从 2 ~ 5 位置 的字符串</span></span><br><span class="line">print(num_str[<span class="number">2</span>:<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 截取从 2 ~ `末尾` 的字符串</span></span><br><span class="line">print(num_str[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 截取从 `开始` ~ 5 位置 的字符串</span></span><br><span class="line">print(num_str[:<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 截取完整的字符串</span></span><br><span class="line">print(num_str[:])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 从开始位置，每隔一个字符截取字符串</span></span><br><span class="line">print(num_str[::<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 从索引 1 开始，每隔一个取一个</span></span><br><span class="line">print(num_str[<span class="number">1</span>::<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 倒序切片</span></span><br><span class="line"><span class="comment"># -1 表示倒数第一个字符</span></span><br><span class="line">print(num_str[<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 截取从 2 ~ `末尾 - 1` 的字符串</span></span><br><span class="line">print(num_str[<span class="number">2</span>:<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 截取字符串末尾两个字符</span></span><br><span class="line">print(num_str[<span class="number">-2</span>:])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9. 字符串的逆序（面试题）</span></span><br><span class="line">print(num_str[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><h1 id="0-5-公共方法"><a href="#0-5-公共方法" class="headerlink" title="0.5    公共方法"></a>0.5    公共方法</h1><h3 id="5-1-Python-内置函数"><a href="#5-1-Python-内置函数" class="headerlink" title="5.1 Python 内置函数"></a>5.1 Python 内置函数</h3><p>Python 包含了以下内置函数：</p><table><thead><tr><th>函数</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>len(item)</td><td>计算容器中元素个数</td><td></td></tr><tr><td>del(item)</td><td>删除变量</td><td>del 有两种方式</td></tr><tr><td>max(item)</td><td>返回容器中元素最大值</td><td>如果是字典，只针对 key 比较</td></tr><tr><td>min(item)</td><td>返回容器中元素最小值</td><td>如果是字典，只针对 key 比较</td></tr><tr><td>cmp(item1, item2)</td><td>比较两个值，-1 小于/0 相等/1 大于</td><td>Python 3.x 取消了 cmp 函数</td></tr></tbody></table><p><strong>注意</strong></p><ul><li><strong>字符串</strong> 比较符合以下规则： “0” &lt; “A” &lt; “a”</li></ul><h3 id="5-2-切片"><a href="#5-2-切片" class="headerlink" title="5.2 切片"></a>5.2 切片</h3><table><thead><tr><th align="center">描述</th><th>Python 表达式</th><th>结果</th><th>支持的数据类型</th></tr></thead><tbody><tr><td align="center">切片</td><td>“0123456789”[::-2]</td><td>“97531”</td><td>字符串、列表、元组</td></tr></tbody></table><ul><li><strong>切片</strong> 使用 <strong>索引值</strong> 来限定范围，从一个大的 <strong>字符串</strong> 中 <strong>切出</strong> 小的 <strong>字符串</strong></li><li><strong>列表</strong> 和 <strong>元组</strong> 都是 <strong>有序</strong> 的集合，都能够 <strong>通过索引值</strong> 获取到对应的数据</li><li><strong>字典</strong> 是一个 <strong>无序</strong> 的集合，是使用 <strong>键值对</strong> 保存数据</li></ul><h3 id="5-3-运算符"><a href="#5-3-运算符" class="headerlink" title="5.3 运算符"></a>5.3 运算符</h3><table><thead><tr><th align="center">运算符</th><th>Python 表达式</th><th>结果</th><th>描述</th><th>支持的数据类型</th></tr></thead><tbody><tr><td align="center">+</td><td>[1, 2] + [3, 4]</td><td>[1, 2, 3, 4]</td><td>合并</td><td>字符串、列表、元组</td></tr><tr><td align="center">*</td><td>[“Hi!”] * 4</td><td>[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td>重复</td><td>字符串、列表、元组</td></tr><tr><td align="center">in</td><td>3 in (1, 2, 3)</td><td>True</td><td>元素是否存在</td><td>字符串、列表、元组、字典</td></tr><tr><td align="center">not in</td><td>4 not in (1, 2, 3)</td><td>True</td><td>元素是否不存在</td><td>字符串、列表、元组、字典</td></tr><tr><td align="center">&gt; &gt;= == &lt; &lt;=</td><td>(1, 2, 3) &lt; (2, 2, 3)</td><td>True</td><td>元素比较</td><td>字符串、列表、元组</td></tr></tbody></table><p><strong>注意</strong></p><ul><li><code>in</code> 在对 <strong>字典</strong> 操作时，判断的是 <strong>字典的键</strong></li><li><code>in</code> 和 <code>not in</code> 被称为 <strong>成员运算符</strong></li></ul><h4 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h4><p>成员运算符用于 <strong>测试</strong> 序列中是否包含指定的 <strong>成员</strong></p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>in</td><td>如果在指定的序列中找到值返回 True，否则返回 False</td><td><code>3 in (1, 2, 3)</code> 返回 <code>True</code></td></tr><tr><td>not in</td><td>如果在指定的序列中没有找到值返回 True，否则返回 False</td><td><code>3 not in (1, 2, 3)</code> 返回 <code>False</code></td></tr></tbody></table><p>注意：在对 <strong>字典</strong> 操作时，判断的是 <strong>字典的键</strong></p><h3 id="5-4-完整的-for-循环语法"><a href="#5-4-完整的-for-循环语法" class="headerlink" title="5.4 完整的 for 循环语法"></a>5.4 完整的 for 循环语法</h3><ul><li>在 <code>Python</code> 中完整的 <code>for 循环</code> 的语法如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 集合:</span><br><span class="line">    </span><br><span class="line">    循环体代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    没有通过 <span class="keyword">break</span> 退出循环，循环结束后，会执行的代码</span><br></pre></td></tr></table></figure><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li>在 <strong>迭代遍历</strong> 嵌套的数据类型时，例如 <strong>一个列表包含了多个字典</strong></li><li>需求：要判断 某一个字典中 是否存在 指定的 值 <ul><li>如果 <strong>存在</strong>，提示并且退出循环</li><li>如果 <strong>不存在</strong>，在 <strong>循环整体结束</strong> 后，希望 <strong>得到一个统一的提示</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">students = [</span><br><span class="line">    &#123;<span class="string">"name"</span>: <span class="string">"阿土"</span>,</span><br><span class="line">     <span class="string">"age"</span>: <span class="number">20</span>,</span><br><span class="line">     <span class="string">"gender"</span>: <span class="literal">True</span>,</span><br><span class="line">     <span class="string">"height"</span>: <span class="number">1.7</span>,</span><br><span class="line">     <span class="string">"weight"</span>: <span class="number">75.0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>: <span class="string">"小美"</span>,</span><br><span class="line">     <span class="string">"age"</span>: <span class="number">19</span>,</span><br><span class="line">     <span class="string">"gender"</span>: <span class="literal">False</span>,</span><br><span class="line">     <span class="string">"height"</span>: <span class="number">1.6</span>,</span><br><span class="line">     <span class="string">"weight"</span>: <span class="number">45.0</span>&#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">find_name = <span class="string">"阿土"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> stu_dict <span class="keyword">in</span> students:</span><br><span class="line"></span><br><span class="line">    print(stu_dict)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断当前遍历的字典中姓名是否为find_name</span></span><br><span class="line">    <span class="keyword">if</span> stu_dict[<span class="string">"name"</span>] == find_name:</span><br><span class="line">        print(<span class="string">"找到了"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果已经找到，直接退出循环，就不需要再对后续的数据进行比较</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"没有找到"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"循环结束"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;列表&lt;/li&gt;
&lt;li&gt;元组&lt;/li&gt;
&lt;li&gt;字典&lt;/li&gt;
&lt;li&gt;字符串&lt;/li&gt;
&lt;li&gt;公共方法&lt;/li&gt;
&lt;li&gt;变
      
    
    </summary>
    
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PicGo-Github-图床</title>
    <link href="http://yoursite.com/2020/08/21/Others/TyPora-PicGo/"/>
    <id>http://yoursite.com/2020/08/21/Others/TyPora-PicGo/</id>
    <published>2020-08-21T14:16:31.000Z</published>
    <updated>2021-01-14T09:08:03.373Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PicGo-Github-图床"><a href="#PicGo-Github-图床" class="headerlink" title="PicGo    Github    图床"></a>PicGo    Github    图床</h3><ol><li>学习网络上的教程，完成个人图床的搭建。初次使用，可正常使用。</li><li>短暂使用后，图床失效，花费大量时间，没有解决问题。</li></ol><p>设想：</p><ul><li>PicGo 相关配置，出现错误。<ul><li>多次配置，仍旧没有成功</li></ul></li><li>重装PicGo软件<ul><li>仍旧失败</li></ul></li><li>尝试使用其他图床<ul><li>七牛云图床，成功，但是临时域名到期，无法继续使用</li><li>smms图床，失败</li><li></li></ul></li></ul><p>暂时无法使用，picgo相应图床，使用成熟平台，存放文字。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PicGo-Github-图床&quot;&gt;&lt;a href=&quot;#PicGo-Github-图床&quot; class=&quot;headerlink&quot; title=&quot;PicGo    Github    图床&quot;&gt;&lt;/a&gt;PicGo    Github    图床&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
    
    
      <category term="course" scheme="http://yoursite.com/tags/course/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基本使用</title>
    <link href="http://yoursite.com/2020/08/15/MySQL/MySQL%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/08/15/MySQL/MySQL%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-15T01:20:46.000Z</published>
    <updated>2020-08-15T10:58:01.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-1-MySQL异常处理"><a href="#1-1-MySQL异常处理" class="headerlink" title="1.1    MySQL异常处理"></a>1.1    MySQL异常处理</h1><h2 id="1-1-1-请键入-NET-HELPMSG-2185"><a href="#1-1-1-请键入-NET-HELPMSG-2185" class="headerlink" title="1.1.1    请键入 NET HELPMSG 2185"></a>1.1.1    请键入 NET HELPMSG 2185</h2><h3 id="异常原因"><a href="#异常原因" class="headerlink" title="异常原因"></a>异常原因</h3><p>电脑系统中，并没有注册mysql服务。</p><p><strong>进入</strong></p><p>D:\MySQL\mysql-8.0.20-winx64\bin</p><p>此路径，然后打开命令行</p><p>输入：</p><p>mysqld –install，</p><p>提示：Service successfully installed，代表注册服务成功。</p><h2 id="1-1-2-修改密码"><a href="#1-1-2-修改密码" class="headerlink" title="1.1.2    修改密码"></a>1.1.2    修改密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysqladmin -u root -p password 新密码</span><br><span class="line"></span><br><span class="line">mysqladmin -u root -p旧密码 password 新密码</span><br></pre></td></tr></table></figure><h2 id="1-1-3-系统找不到指定文件"><a href="#1-1-3-系统找不到指定文件" class="headerlink" title="1.1.3    系统找不到指定文件"></a>1.1.3    系统找不到指定文件</h2><p>切换到bin目录后，</p><p>先删除前面安装的mysql服务（删除服务不一定要到bin目录），</p><p>再重新在bin目录下安装mysql服务，然后启动：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">cd</span> ../..</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">cd</span> <span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span>&gt;<span class="title">mysqld</span> --<span class="title">remove</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">successfully</span> <span class="title">removed</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span>&gt;<span class="title">mysqld</span> --<span class="title">install</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">successfully</span> <span class="title">installed</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span>&gt;<span class="title">net</span> <span class="title">start</span> <span class="title">mysql</span></span></span><br><span class="line"><span class="function"><span class="title">MySQL</span> 服务正在启动 .</span></span><br><span class="line"><span class="function"><span class="title">MySQL</span> 服务已经启动成功。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-1-MySQL异常处理&quot;&gt;&lt;a href=&quot;#1-1-MySQL异常处理&quot; class=&quot;headerlink&quot; title=&quot;1.1    MySQL异常处理&quot;&gt;&lt;/a&gt;1.1    MySQL异常处理&lt;/h1&gt;&lt;h2 id=&quot;1-1-1-请键入-NET-H
      
    
    </summary>
    
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>JAVA/IDEA快捷键</title>
    <link href="http://yoursite.com/2020/08/14/JAVA/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2020/08/14/JAVA/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2020-08-14T12:02:36.230Z</published>
    <updated>2020-08-14T12:30:07.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-1-Ctrl-快捷键"><a href="#1-1-Ctrl-快捷键" class="headerlink" title="1.1    Ctrl 快捷键"></a>1.1    Ctrl 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + F        &#x2F;&#x2F;在当前文件进行文本查找 （必备）</span><br><span class="line">Ctrl + R        &#x2F;&#x2F;在当前文件进行文本替换 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Z        &#x2F;&#x2F;撤销 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Y        &#x2F;&#x2F;删除光标所在行 或 删除选中的行 （必备）</span><br><span class="line">Ctrl + X        &#x2F;&#x2F;剪切光标所在行 或 剪切选择内容</span><br><span class="line">Ctrl + C        &#x2F;&#x2F;复制光标所在行 或 复制选择内容</span><br><span class="line">Ctrl + D        &#x2F;&#x2F;复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + W        &#x2F;&#x2F;递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围（必备）</span><br><span class="line"></span><br><span class="line">Ctrl + E        &#x2F;&#x2F;显示最近打开的文件记录列表 （必备）</span><br><span class="line">Ctrl + N        &#x2F;&#x2F;根据输入的 名&#x2F;类名 查找类文件 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + G        &#x2F;&#x2F;在当前文件跳转到指定行处</span><br><span class="line"></span><br><span class="line">Ctrl + J        &#x2F;&#x2F;插入自定义动态代码模板 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + P        &#x2F;&#x2F;方法参数提示显示 （必备）</span><br><span class="line">Ctrl + Q        &#x2F;&#x2F;光标所在的变量 &#x2F; 类名 &#x2F; 方法名等上面（也可以在提示补充的时候按），显示文档内容</span><br><span class="line">        </span><br><span class="line">Ctrl + U        &#x2F;&#x2F;前往当前光标所在的方法的父类的方法 &#x2F; 接口定义 （必备）</span><br><span class="line">Ctrl + B        &#x2F;&#x2F;进入光标所在的方法&#x2F;变量的接口或是定义处，等效于 Ctrl + 左键单击 （必备）</span><br><span class="line">        </span><br><span class="line">Ctrl + K        &#x2F;&#x2F;版本控制提交项目，需要此项目有加入到版本控制才可用</span><br><span class="line">Ctrl + T        &#x2F;&#x2F;版本控制更新项目，需要此项目有加入到版本控制才可用</span><br><span class="line">        </span><br><span class="line">Ctrl + H        &#x2F;&#x2F;显示当前类的层次结构</span><br><span class="line">Ctrl + O        &#x2F;&#x2F;选择可重写的方法</span><br><span class="line">Ctrl + I        &#x2F;&#x2F;选择可继承的方法</span><br><span class="line">        </span><br><span class="line">Ctrl + +        &#x2F;&#x2F;展开代码</span><br><span class="line">Ctrl + -        &#x2F;&#x2F;折叠代码</span><br><span class="line">        </span><br><span class="line">Ctrl + &#x2F;        &#x2F;&#x2F;注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 （必备）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + [            &#x2F;&#x2F;移动光标到当前所在代码的花括号开始位置</span><br><span class="line">Ctrl + ]            &#x2F;&#x2F;移动光标到当前所在代码的花括号结束位置</span><br><span class="line">        </span><br><span class="line">Ctrl + F1           &#x2F;&#x2F;在光标所在的错误代码处显示错误信息 （必备）</span><br><span class="line">Ctrl + F3           &#x2F;&#x2F;调转到所选中的词的下一个引用位置 （必备）</span><br><span class="line">        </span><br><span class="line">Ctrl + F4           &#x2F;&#x2F;关闭当前编辑文件</span><br><span class="line">Ctrl + F8           &#x2F;&#x2F;在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</span><br><span class="line">        </span><br><span class="line">Ctrl + F9           &#x2F;&#x2F;执行 Make Project 操作</span><br><span class="line">        </span><br><span class="line">Ctrl + F11          &#x2F;&#x2F;选中文件 &#x2F; 文件夹，使用助记符设定 &#x2F; 取消书签 （必备）</span><br><span class="line">Ctrl + F12          &#x2F;&#x2F;弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</span><br><span class="line">        </span><br><span class="line">Ctrl + Tab          &#x2F;&#x2F;编辑窗口切换，如果在切换的过程又加按上 delete，则是关闭对应选中的窗口</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + End          &#x2F;&#x2F;跳到文件尾</span><br><span class="line">Ctrl + Home         &#x2F;&#x2F;跳到文件头</span><br><span class="line">        </span><br><span class="line">Ctrl + Space        &#x2F;&#x2F;基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl +逗号 （必备）</span><br><span class="line">        </span><br><span class="line">Ctrl + Delete       &#x2F;&#x2F;删除光标后面的单词或是中文句 （必备）</span><br><span class="line">Ctrl +BackSpace     &#x2F;&#x2F;删除光标前面的单词或是中文句 （必备）</span><br><span class="line">        </span><br><span class="line">Ctrl +1,2,3…9       &#x2F;&#x2F;定位到对应数值的书签位置 （必备）</span><br><span class="line">        </span><br><span class="line">Ctrl + 左键单击     &#x2F;&#x2F;在打开的文件标题上，弹出该文件路径 （必备）</span><br><span class="line">Ctrl + 光标定位按    &#x2F;&#x2F;Ctrl 不要松开，会显示光标所在的类信息摘要</span><br><span class="line">        </span><br><span class="line">Ctrl + 左方向键     &#x2F;&#x2F;光标跳转到当前单词 &#x2F; 中文句的左侧开头位置 （必备）</span><br><span class="line">Ctrl + 右方向键     &#x2F;&#x2F;光标跳转到当前单词 &#x2F; 中文句的右侧开头位置 （必备）</span><br><span class="line">        </span><br><span class="line">Ctrl + 前方向键     &#x2F;&#x2F;等效于鼠标滚轮向前效果 （必备）</span><br><span class="line">Ctrl + 后方向键     &#x2F;&#x2F;等效于鼠标滚轮向后效果 （必备）</span><br></pre></td></tr></table></figure><h1 id="1-2-Alt快捷键"><a href="#1-2-Alt快捷键" class="headerlink" title="1.2  Alt快捷键"></a>1.2  Alt快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Alt + &#96;             显示版本控制常用操作菜单弹出层 （必备）</span><br><span class="line">Alt + Q             弹出一个提示，显示当前类的声明 &#x2F; 上下文信息</span><br><span class="line"></span><br><span class="line">Alt + F1            显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择 （必备）</span><br><span class="line">Alt + F2            对于前面页面，显示各类浏览器打开目标选择弹出层</span><br><span class="line"></span><br><span class="line">Alt + F3            选中文本，逐个往下查找相同文本，并高亮显示</span><br><span class="line">Alt + F7            查找光标所在的方法 &#x2F; 变量 &#x2F; 类被调用的地方</span><br><span class="line"></span><br><span class="line">Alt + F8            在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</span><br><span class="line">Alt + Home          定位 &#x2F; 显示到当前文件的 Navigation Bar</span><br><span class="line"></span><br><span class="line">Alt + Enter         IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 （必备）</span><br><span class="line">Alt + Insert        代码自动生成，如生成对象的 set &#x2F; get 方法，构造函数，toString() 等 （必备）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Alt + 左方向键              切换当前已打开的窗口中的子视图，比如 Debug 窗口中有 Output、Debugger 等子视图，用此快捷键就可以在子视图中切换 （必备）</span><br><span class="line">Alt + 右方向键              按切换当前已打开的窗口中的子视图，比如 Debug 窗口中有 Output、Debugger 等子视图，用此快捷键就可以在子视图中切换 （必备）</span><br><span class="line"></span><br><span class="line">Alt + 前方向键              当前光标跳转到当前文件的前一个方法名位置 （必备）</span><br><span class="line">Alt + 后方向键              当前光标跳转到当前文件的后一个方法名位置 （必备）</span><br><span class="line"></span><br><span class="line">Alt +1,2,3…9                显示对应数值的选项卡，其中 1 是 Project 用得最多 （必备）</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="1-3-Shift-快捷键"><a href="#1-3-Shift-快捷键" class="headerlink" title="1.3  Shift 快捷键"></a>1.3  Shift 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Shift + F1              如果有外部文档可以连接外部文档</span><br><span class="line">Shift + F2              跳转到上一个高亮错误 或 警告位置</span><br><span class="line">Shift + F3              在查找模式下，查找匹配上一个</span><br><span class="line">Shift + F4              对当前打开的文件，使用新 Windows 窗口打开，旧窗口保留</span><br><span class="line">Shift + F6              对文件 &#x2F; 文件夹 重命名</span><br><span class="line">Shift + F7              在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</span><br><span class="line">Shift + F8              在 Debug 模式下，跳出，表现出来的效果跟 F9 一样</span><br><span class="line">Shift + F9              等效于点击工具栏的 Debug 按钮</span><br><span class="line">Shift + F10             等效于点击工具栏的 Run 按钮</span><br><span class="line">Shift + F11             弹出书签显示层 （必备）</span><br><span class="line">Shift + Tab             取消缩进 （必备）</span><br><span class="line">Shift + ESC             隐藏当前 或 最后一个激活的工具窗口</span><br><span class="line">Shift + End             选中光标到当前行尾位置</span><br><span class="line">Shift + Home            选中光标到当前行头位置</span><br><span class="line">Shift + Enter           开始新一行。光标所在行下空出一行，光标定位到新行位置 （必备）</span><br><span class="line">Shift + 左键单击            在打开的文件名上按此快捷键，可以关闭当前打开文件 （必备）</span><br><span class="line">Shift + 滚轮前后滚动      当前文件的横向滚动轴滚动 （必备）</span><br></pre></td></tr></table></figure><h1 id="1-4-Ctrl-Alt-快捷键"><a href="#1-4-Ctrl-Alt-快捷键" class="headerlink" title="1.4  Ctrl + Alt 快捷键"></a>1.4  Ctrl + Alt 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + L              格式化代码，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + O              优化导入的类，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + I              光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</span><br><span class="line">Ctrl + Alt + T              对选中的代码弹出环绕选项弹出层 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + J              弹出模板选择窗口，将选定的代码加入动态模板中</span><br><span class="line">Ctrl + Alt + H              调用层次</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + B              在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</span><br><span class="line">Ctrl + Alt + V              快速引进变量</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + Y              同步、刷新</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + S              打开 IntelliJ IDEA 系统设置 （必备）</span><br><span class="line">Ctrl + Alt + F7             显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + F11                切换全屏模式</span><br><span class="line">Ctrl + Alt + Enter              光标所在行上空出一行，光标定位到新行 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + Home               弹出跟当前文件有关联的文件弹出层</span><br><span class="line">Ctrl + Alt + Space              类名自动完成</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + 左方向键           退回到上一个操作的地方 （必备）</span><br><span class="line">Ctrl + Alt + 右方向键           前进到上一个操作的地方 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Alt + 前方向键           在查找模式下，跳到上个查找的文件</span><br><span class="line">Ctrl + Alt + 后方向键           在查找模式下，跳到下个查找的文件</span><br></pre></td></tr></table></figure><h1 id="1-5-Ctrl-Shift-快捷键"><a href="#1-5-Ctrl-Shift-快捷键" class="headerlink" title="1.5  Ctrl + Shift 快捷键"></a>1.5  Ctrl + Shift 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + F 根据输入内容查找整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + Shift + R 根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + J 自动将下一行合并到当前行末尾 （必备）</span><br><span class="line">Ctrl + Shift + Z 取消撤销 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + W 递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 （必备）</span><br><span class="line">Ctrl + Shift + N 通过文件名定位 &#x2F; 打开文件 &#x2F; 目录，打开目录需要在输入的内容后面多加一个正斜杠 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + U 对选中的代码进行大 &#x2F; 小写轮流转换 （必备）</span><br><span class="line">Ctrl + Shift + T 对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择 （必备）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + C 复制当前文件磁盘路径到剪贴板 （必备）</span><br><span class="line">Ctrl + Shift + V 弹出缓存的最近拷贝的内容管理器弹出层</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + E 显示最近修改的文件列表的弹出层</span><br><span class="line">Ctrl + Shift + H 显示方法层次结构</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + B 跳转到类型声明处 （必备）</span><br><span class="line">Ctrl + Shift + I 快速查看光标所在的方法 或 类的定义</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + A 查找动作 &#x2F; 设置</span><br><span class="line">Ctrl + Shift + &#x2F; 代码块注释 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + [ 选中从光标所在位置到它的顶部中括号位置 （必备）</span><br><span class="line">Ctrl + Shift + ] 选中从光标所在位置到它的底部中括号位置 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + + 展开所有代码 （必备）</span><br><span class="line">Ctrl + Shift + - 折叠所有代码 （必备）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + F7 高亮显示所有该选中文本，按 Esc 高亮消失 （必备）</span><br><span class="line">Ctrl + Shift + F8 在 Debug 模式下，指定断点进入条件</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + F9 编译选中的文件 &#x2F; 包 &#x2F; Module</span><br><span class="line">Ctrl + Shift + F12 编辑器最大化 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + Space 智能代码提示</span><br><span class="line">Ctrl + Shift + Enter 自动结束代码，行末自动添加分号 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift +Backspace 退回到上次修改的地方 （必备）</span><br><span class="line">Ctrl + Shift +1,2,3…9 快速添加指定数值的书签 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + 左键单击 把光标放在某个类变量上，按此快捷键可以直接定位到该类中 （必备）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + 左方向键 在代码文件上，光标跳转到当前单词 &#x2F; 中文句的左侧开头位置，同时选中该单词 &#x2F; 中文句（必备）</span><br><span class="line">Ctrl + Shift + 右方向键 在代码文件上，光标跳转到当前单词 &#x2F; 中文句的右侧开头位置，同时选中该单词 &#x2F; 中文句（必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + 前方向键 光标放在方法名上，将方法移动到上一个方法前面，调整方法排序 （必备）</span><br><span class="line">Ctrl + Shift + 后方向键 光标放在方法名上，将方法移动到下一个方法前面，调整方法排序 （必备）</span><br></pre></td></tr></table></figure><h1 id="1-6-Alt-Shift-快捷键"><a href="#1-6-Alt-Shift-快捷键" class="headerlink" title="1.6  Alt + Shift 快捷键"></a>1.6  Alt + Shift 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Alt + Shift + N 选择 &#x2F; 添加 task （必备）</span><br><span class="line"></span><br><span class="line">Alt + Shift + F 显示添加到收藏夹弹出层 &#x2F; 添加到收藏夹</span><br><span class="line">Alt + Shift + C 查看最近操作项目的变化情况列表</span><br><span class="line"></span><br><span class="line">Alt + Shift + I 查看项目当前文件</span><br><span class="line">Alt + Shift + F7在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入</span><br><span class="line"></span><br><span class="line">Alt + Shift + F9 弹出 Debug 的可选择菜单</span><br><span class="line">Alt + Shift + F10 弹出 Run 的可选择菜单</span><br><span class="line"></span><br><span class="line">Alt + Shift + 左键双击 选择被双击的单词 &#x2F; 中文句，按住不放，可以同时选择其他单词 &#x2F; 中文句 （必备）</span><br><span class="line"></span><br><span class="line">Alt + Shift + 前方向键 移动光标所在行向上移动 （必备）</span><br><span class="line">Alt + Shift + 后方向键 移动光标所在行向下移动 （必备）</span><br></pre></td></tr></table></figure><h1 id="1-7-Ctrl-Shift-Alt-快捷键"><a href="#1-7-Ctrl-Shift-Alt-快捷键" class="headerlink" title="1.7  Ctrl + Shift + Alt 快捷键"></a>1.7  Ctrl + Shift + Alt 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + Alt + V     无格式黏贴 （必备）</span><br><span class="line">Ctrl + Shift + Alt + N     前往指定的变量 &#x2F; 方法</span><br><span class="line"></span><br><span class="line">Ctrl + Shift + Alt + S     打开当前项目设置 （必备）</span><br><span class="line">Ctrl + Shift + Alt + C     复制参考信息</span><br></pre></td></tr></table></figure><h1 id="1-8-其他快捷键"><a href="#1-8-其他快捷键" class="headerlink" title="1.8  其他快捷键"></a>1.8  其他快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">F2 跳转到下一个高亮错误 或 警告位置 （必备）</span><br><span class="line">F3 在查找模式下，定位到下一个匹配处</span><br><span class="line">F4 编辑源 （必备）</span><br><span class="line"></span><br><span class="line">F7 在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</span><br><span class="line">F8 在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</span><br><span class="line"></span><br><span class="line">F9 在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</span><br><span class="line"></span><br><span class="line">F11 添加书签 （必备）</span><br><span class="line">F12 回到前一个工具窗口 （必备）</span><br><span class="line"></span><br><span class="line">Tab缩进 （必备）</span><br><span class="line">ESC 从工具窗口进入代码文件窗口 （必备）</span><br><span class="line"></span><br><span class="line">连按两次Shift 弹出 Search Everywhere 弹出层</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-1-Ctrl-快捷键&quot;&gt;&lt;a href=&quot;#1-1-Ctrl-快捷键&quot; class=&quot;headerlink&quot; title=&quot;1.1    Ctrl 快捷键&quot;&gt;&lt;/a&gt;1.1    Ctrl 快捷键&lt;/h1&gt;&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C-List-3</title>
    <link href="http://yoursite.com/2020/03/28/C/List-03_C%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2020/03/28/C/List-03_C%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</id>
    <published>2020-03-28T00:39:29.000Z</published>
    <updated>2021-02-23T07:56:53.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-字符串处理函数"><a href="#01-字符串处理函数" class="headerlink" title="01.字符串处理函数"></a>01.字符串处理函数</h2><h4 id="gets-和-puts-函数"><a href="#gets-和-puts-函数" class="headerlink" title="gets() 和  puts()函数"></a>gets() 和  puts()函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入str: "</span>);</span><br><span class="line">gets(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"str = %s\n"</span>, str);</span><br><span class="line"><span class="built_in">puts</span>(str);<span class="comment">//在输出完成后自动输出一个'\n'。</span></span><br></pre></td></tr></table></figure><ul><li><strong>gets(str)与scanf(“%s”,str)的区别</strong>：<ul><li>gets(str)允许输入的字符串含有空格</li><li>scanf(“%s”,str)不允许含有空格</li></ul></li></ul><p>解决区别：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>,str);</span><br></pre></td></tr></table></figure><ul><li>注意：由于scanf()和gets()无法知道字符串s大小，必须遇到<strong>换行符或读到文件结尾</strong>为止才接收输入，因此容易导致字符<strong>数组越界</strong>(缓冲区溢出)的情况。</li></ul><h4 id="fgets-和fputs-函数"><a href="#fgets-和fputs-函数" class="headerlink" title="fgets()和fputs()函数"></a>fgets()和fputs()函数</h4><ul><li>用于文本编辑</li></ul><p><strong>fgets函数</strong></p><ul><li>性质：</li></ul><p><img src="https://ws1.sinaimg.cn/large/0065EZzEly1gdmkbk3ubqj30lc0fzjsm.jpg" alt="01fgets.png"></p><p><strong>fputs()函数，同样具有这个性质。</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line"><span class="comment">//参数：字符串指针，指针大小，输入流</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>fputs函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">fgets(ch, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(ch, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="comment">//参数：字符串指针，输出流</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="printf-和scanf-函数"><a href="#printf-和scanf-函数" class="headerlink" title="printf()和scanf()函数"></a>printf()和scanf()函数</h4><p><strong>scanf()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line">    <span class="keyword">char</span> arr[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//接收换行结束，可以接受空格</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>, arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, arr);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line"><span class="comment">//在scanf 获取数据时，建议不要添加任何字符   空格除外</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line"><span class="comment">//sacnf("a=%d",a);   在输入数据时，比较麻烦  需要这样 a=2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line">    <span class="comment">//限制字符的宽度</span></span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%2d%3d%4d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d %d"</span>,a,b,c);</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span></span><br><span class="line">    <span class="comment">//屏蔽某种数据类型</span></span><br><span class="line"><span class="keyword">char</span> arr[<span class="number">99</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%*d%s"</span>, arr);<span class="comment">//输入1122abc</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, arr);<span class="comment">//输出abc</span></span><br></pre></td></tr></table></figure><p><strong>printf()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%4d\n"</span>, <span class="number">123</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%4d\n"</span>, <span class="number">123</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%04d\n"</span>, <span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, <span class="number">12.9</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%4s\n"</span>, <span class="string">"ab"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.4s"</span>, <span class="string">"abcdef"</span>);</span><br></pre></td></tr></table></figure><h4 id="1-4strlen-函数和-strcpy-函数"><a href="#1-4strlen-函数和-strcpy-函数" class="headerlink" title="1.4strlen()函数和 strcpy()函数"></a>1.4strlen()函数和 strcpy()函数</h4><p><strong>strlen()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[] = <span class="string">"Hello World"</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"useful %d\n"</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, <span class="keyword">sizeof</span>(str));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">"abcdefg"</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"n = %d\n"</span>, n);</span><br></pre></td></tr></table></figure><p><strong>strcpy()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> arr[] = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">120</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(str, arr);</span><br><span class="line"><span class="comment">//参数： 目标字符数组源字符数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strncpy</span>()</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> arr[] = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">strncpy</span>(str, arr, <span class="number">5</span>);</span><br><span class="line"><span class="comment">//参数： 目标字符数组源字符数组字符长度</span></span><br><span class="line"><span class="comment">//notice：复制的字符，不包括“\0”  或者  0</span></span><br><span class="line"><span class="comment">//所以，需要</span></span><br><span class="line">str[<span class="number">5</span>] = <span class="number">0</span>;</span><br><span class="line">或者</span><br><span class="line">str[<span class="number">5</span>] = <span class="string">"\0"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="strcat-函数和strmp-函数"><a href="#strcat-函数和strmp-函数" class="headerlink" title="strcat()函数和strmp()函数"></a>strcat()函数和strmp()函数</h4><p><strong>strcat()函数</strong></p><ul><li>将 arr2 字符串连接到 arr1 的尾部，<strong>“\0”也会追加过去</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> arr1[<span class="number">20</span>] = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> arr2[] = <span class="string">"world"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">strcat</span>(arr1, <span class="string">" "</span>);</span><br><span class="line"><span class="built_in">strcat</span>(arr1, arr2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr2);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//strncat()函数</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">char</span> arr3[<span class="number">20</span>] = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> arr4[] = <span class="string">"world"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">strcat</span>(arr3, <span class="string">" "</span>);</span><br><span class="line"><span class="built_in">strncat</span>(arr4, arr2, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr3);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>strcmp()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> arr1[<span class="number">20</span>] = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> arr2[] = <span class="string">"hello"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> value = <span class="built_in">strcmp</span>(arr1, arr2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,value);</span><br><span class="line"></span><br><span class="line"><span class="comment">//strncmp()函数</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">char</span> arr3[] = <span class="string">"yes"</span>;</span><br><span class="line"><span class="keyword">char</span> arr4[] = <span class="string">"yellow"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sample"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"different"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-6sprintf-函数和sscanf-函数"><a href="#1-6sprintf-函数和sscanf-函数" class="headerlink" title="1.6sprintf()函数和sscanf()函数"></a>1.6sprintf()函数和sscanf()函数</h4><p><strong>sprintf()函数</strong></p><p><strong>sscanf()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> arr1[] = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> arr2[] = <span class="string">"521"</span>;</span><br><span class="line"><span class="keyword">char</span> dest[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">sprintf</span>(dest, <span class="string">"%s %s"</span>, arr1, arr2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, dest);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">char</span> dest2[] = <span class="string">"1+2="</span>;</span><br><span class="line"><span class="keyword">char</span> dest3[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">sscanf</span>(dest2, <span class="string">"%d+%d="</span>, &amp;b,&amp;a);</span><br><span class="line"><span class="built_in">sprintf</span>(dest3, <span class="string">"%d+%d=%d"</span>, b, a, a + b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, dest3);</span><br><span class="line"><span class="comment">//printf("%d+%d=%d", b, a, b + a);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="strchr-函数和strstr-函数"><a href="#strchr-函数和strstr-函数" class="headerlink" title="strchr()函数和strstr()函数"></a>strchr()函数和strstr()函数</h4><p><strong>strchr()函数</strong></p><p><strong>strstr()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> arr1[] = <span class="string">"hello wrold"</span>;</span><br><span class="line"><span class="keyword">char</span> *p = <span class="built_in">strchr</span>(arr1, <span class="string">'l'</span>);</span><br><span class="line">    <span class="keyword">if</span> (p1 != <span class="literal">NULL</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"I Finded it "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> arr2[] = <span class="string">"helloworld"</span>;</span><br><span class="line"><span class="keyword">char</span>* p1 = <span class="built_in">strstr</span>(arr2, <span class="string">"lo"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, p1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-8strtok-函数"><a href="#1-8strtok-函数" class="headerlink" title="1.8strtok()函数"></a>1.8strtok()函数</h4><p><strong>strtok()函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> arr[] = <span class="string">"averych@qq.com"</span>;</span><br><span class="line"><span class="keyword">char</span>* p = strtok(arr, <span class="string">"@"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, p);</span><br><span class="line"><span class="comment">//切割后原来的字符串会被破坏</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[] = <span class="string">"www.baidu.com"</span>;</span><br><span class="line">    <span class="comment">//格式：先分割一次，接下来按照此规则，持续分割</span></span><br><span class="line"><span class="keyword">char</span>* p1 = strtok(a, <span class="string">"."</span>);</span><br><span class="line"><span class="keyword">while</span> (p1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, p1);</span><br><span class="line">p1 = strtok(<span class="literal">NULL</span>, <span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="atoi-函数"><a href="#atoi-函数" class="headerlink" title="atoi()函数"></a>atoi()函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//字符串中，数字前面不可以有非数字字符，例如hello 123456</span></span><br><span class="line"><span class="keyword">char</span> arr[] = <span class="string">"3.141592653"</span>;</span><br><span class="line"><span class="keyword">int</span> a = atoi(arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"><span class="comment">//atof似乎不起作用</span></span><br><span class="line"><span class="keyword">double</span> b = atof(arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lf"</span>, b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="02-函数"><a href="#02-函数" class="headerlink" title="02.函数"></a>02.函数</h2><p><strong>定义</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-字符串处理函数&quot;&gt;&lt;a href=&quot;#01-字符串处理函数&quot; class=&quot;headerlink&quot; title=&quot;01.字符串处理函数&quot;&gt;&lt;/a&gt;01.字符串处理函数&lt;/h2&gt;&lt;h4 id=&quot;gets-和-puts-函数&quot;&gt;&lt;a href=&quot;#gets-和-
      
    
    </summary>
    
    
      <category term="分类" scheme="http://yoursite.com/categories/%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>C-List-Two</title>
    <link href="http://yoursite.com/2020/02/27/C/List-02_C%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/02/27/C/List-02_C%E5%9F%BA%E7%A1%80/</id>
    <published>2020-02-27T14:07:30.000Z</published>
    <updated>2021-02-23T07:53:27.706Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用运算符分类"><a href="#常用运算符分类" class="headerlink" title="常用运算符分类"></a>常用运算符分类</h3><table><thead><tr><th><strong>运算符类型</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr><tr><td>位运算符</td><td>用于处理数据的位运算</td></tr><tr><td>sizeof运算符</td><td>用于求字节数长度</td></tr></tbody></table><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>转换的方法有两种：</p><ul><li>自动转换(隐式转换)：遵循一定的规则,由编译系统自动完成。</li><li>强制类型转换：把表达式的运算结果强制转换成所需的数据类型。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line">b = (<span class="keyword">int</span>)a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lf\n%d\n"</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line">s = (<span class="keyword">double</span>)<span class="number">1</span> / <span class="number">2</span> * a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%f\n"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%f\n"</span>,(<span class="keyword">double</span>) a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="01-选择结构"><a href="#01-选择结构" class="headerlink" title="01.选择结构"></a>01.选择结构</h2><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a &gt; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>if…else语句</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a &gt; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>if…else if…else语句</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%u"</span>, &amp;a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"个位\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"十位\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"百位\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"></span><br><span class="line">c = (a &gt; b ? a + b : a - b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c2 = %d\n"</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">c = getchar();</span><br><span class="line"><span class="keyword">switch</span> (c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"spring\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"summer\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"autumn\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"winter\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="02-循环结构"><a href="#02-循环结构" class="headerlink" title="02.循环结构"></a>02.循环结构</h2><h4 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"it's time to play game\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">while</span> (a &lt;<span class="number">666</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">666</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"you are die\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="do…while语句"><a href="#do…while语句" class="headerlink" title="do…while语句"></a>do…while语句</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">b = a;</span><br><span class="line">a++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d=%d+1\n"</span>, a,b);</span><br><span class="line">&#125; <span class="keyword">while</span> (a &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">sum += i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sum = %d\n"</span>, sum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>);</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"num = %d\n"</span>, num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="03-跳转语句"><a href="#03-跳转语句" class="headerlink" title="03.跳转语句"></a>03.跳转语句</h2><h4 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h4><p>在switch条件语句和循环语句中都可以使用break语句：</p><ul><li>当它出现在switch条件语句中时，作用是终止某个case并跳出switch结构。</li><li>当它出现在循环语句中，作用是跳出当前内循环语句，执行后面的代码。</li><li>当它出现在<strong>嵌套循环语句</strong>中，跳出<strong>最近的内循环</strong>语句，执行后面的代码。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i = %d\n"</span>, i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出while循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; m &lt; <span class="number">10</span>; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (; n &lt; <span class="number">10</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出for (n = 0; n &lt; 10; n++)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出for (m = 0; m &lt; 10; m++)</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"hello world"</span>);<span class="comment">//不会输出</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h4><p>在循环语句中，如果希望立即终止本次循环，并执行下一次循环，此时就需要使用continue语句。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;           </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>)   </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;      </span><br><span class="line">&#125;</span><br><span class="line">sum += i;          </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sum = %d\n"</span>, sum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="goto语句-无条件跳转，尽量少用"><a href="#goto语句-无条件跳转，尽量少用" class="headerlink" title="goto语句(无条件跳转，尽量少用)"></a>goto语句(无条件跳转，尽量少用)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">goto</span> End;<span class="comment">//无条件跳转到End的标识</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"silly boy\n"</span>);</span><br><span class="line"></span><br><span class="line">End:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sunshine boy\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="04-数组"><a href="#04-数组" class="headerlink" title="04.数组"></a>04.数组</h2><ul><li>数组就是在内存中连续的相同类型的变量空间。</li><li>同一个数组所有的成员都是相同的数据类型</li><li>同一个数组所有的成员在内存中的地址是连续的。</li></ul><ol><li>按数组元素类型的不同，数组可分为：数值数组、字符数组、指针数组、结构数组等类别。</li></ol><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><ul><li>定义数组时 <strong>[ ]</strong> 内最好是常量，使用数组时 <strong>[ ]</strong> 内即可是常量，也可以是变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">a[i] = i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>全局数组若不初始化，编译器将其初始化为零。</li><li>局部数组若不初始化，内容为<strong>随机值。</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;;<span class="comment">//初始化前三个成员，后面所有元素都设置为0</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//所有的成员都设置为0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;<span class="comment">//定义了一个数组，有5个成员</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">2</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">a[i] = i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数组名是一个地址的常量，代表数组中首元素的地址。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a = %p\n"</span>, a[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%p\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&amp;a[0] = %p\n"</span>, &amp;a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>一维数组的最值</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">-2</span>, <span class="number">3</span>,<span class="number">-4</span>, <span class="number">5</span>, <span class="number">-6</span>, <span class="number">7</span>, <span class="number">-8</span>, <span class="number">-9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">max</span> = a[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i &lt; <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; <span class="built_in">max</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">max</span> = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"the max of the array:%d\n"</span>, <span class="built_in">max</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>一维数组的逆序</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">-2</span>, <span class="number">3</span>,<span class="number">-4</span>, <span class="number">5</span>, <span class="number">-6</span>, <span class="number">7</span>, <span class="number">-8</span>, <span class="number">-9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">tmp = a[i];</span><br><span class="line">a[i] = a[j];</span><br><span class="line">a[j] = tmp;</span><br><span class="line">j--;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]); i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="冒泡法排序"><a href="#冒泡法排序" class="headerlink" title="冒泡法排序"></a>冒泡法排序</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">-2</span>, <span class="number">3</span>,<span class="number">-4</span>, <span class="number">5</span>, <span class="number">-6</span>, <span class="number">7</span>, <span class="number">-8</span>, <span class="number">-9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) &#123;</span><br><span class="line">tmp = a[j];</span><br><span class="line">a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><ul><li>内存中只有一维数组</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)&#123;</span><br><span class="line">a[i][j] = num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d, "</span>, a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] =&#123;&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;,&#123; <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, &#125;,&#123; <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> , <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span> &#125;;</span><br></pre></td></tr></table></figure><ul><li>数组名是一个地址的常量，代表数组中首元素的地址。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> , <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%p\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%p\n"</span>, a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//int a[3][4][5] ;//定义了一个三维数组，有3个二维数组int[4][5]</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>][<span class="number">5</span>] = &#123;&#123; &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;, &#123; <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125; &#125;,</span><br><span class="line">&#123; &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125; &#125;,</span><br><span class="line">&#123; &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125; &#125; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//添加访问元素代码</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d, "</span>, a[i][j][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="05-字符数组和字符串"><a href="#05-字符数组和字符串" class="headerlink" title="05.字符数组和字符串"></a>05.字符数组和字符串</h2><ul><li>C语言中没有字符串这种数据类型，可以通过<strong>char的数组</strong>来替代；</li><li>字符串<strong>一定是</strong>一个char的数组，但char的数组<strong>未必是</strong>字符串；</li><li><strong>数字0(和字符‘\0’等价)</strong>结尾的char数组就是一个字符串，但如果char数组没有以数字0结尾，那么就不是一个字符串，只是普通字符数组，所以字符串是一种特殊的char的数组。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c1[] = &#123; <span class="string">'c'</span>, <span class="string">' '</span>, <span class="string">'p'</span>, <span class="string">'r'</span>, <span class="string">'o'</span>, <span class="string">'g'</span> &#125;; <span class="comment">//普通字符数组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c1 = %s\n"</span>, c1); <span class="comment">//乱码，因为没有’\0’结束符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以‘\0’(‘\0’就是数字0)结尾的字符数组是字符串</span></span><br><span class="line"><span class="keyword">char</span> c2[] = &#123; <span class="string">'c'</span>, <span class="string">' '</span>, <span class="string">'p'</span>, <span class="string">'r'</span>, <span class="string">'o'</span>, <span class="string">'g'</span>, <span class="string">'\0'</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c2 = %s\n"</span>, c2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串处理以‘\0’(数字0)作为结束符，后面的'h', 'l', 'l', 'e', 'o'不会输出</span></span><br><span class="line"><span class="keyword">char</span> c3[] = &#123; <span class="string">'c'</span>, <span class="string">' '</span>, <span class="string">'p'</span>, <span class="string">'r'</span>, <span class="string">'o'</span>, <span class="string">'g'</span>, <span class="string">'\0'</span>, <span class="string">'h'</span>, <span class="string">'l'</span>, <span class="string">'l'</span>, <span class="string">'e'</span>, <span class="string">'o'</span>, <span class="string">'\0'</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c3 = %s\n"</span>, c3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不指定长度, 错误，乱码</span></span><br><span class="line"><span class="keyword">char</span> buf[] = &#123; <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"buf = %s\n"</span>, buf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定长度，后面没有赋值的元素，自动补0</span></span><br><span class="line"><span class="keyword">char</span> buf2[<span class="number">100</span>] = &#123; <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"buf2 = %s\n"</span>, buf2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//所有元素赋值为0</span></span><br><span class="line"><span class="keyword">char</span> buf3[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//char buf4[2] = &#123; '1', '2', '3' &#125;;//数组越界</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用字符串初始化，编译器自动在后面补\0，常用</span></span><br><span class="line"><span class="keyword">char</span> buf8[] = <span class="string">"agjdslgjlsdjg"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//'\0'后面最好不要连着数字，有可能几个数字连起来刚好是一个转义字符</span></span><br><span class="line"><span class="comment">//'\ddd'八进制字义字符，'\xdd'十六进制转移字符</span></span><br><span class="line"><span class="comment">// \012相当于\n</span></span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">"\012abc"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"str == %s\n"</span>, str);</span><br></pre></td></tr></table></figure><h4 id="字符串的输入输出"><a href="#字符串的输入输出" class="headerlink" title="字符串的输入输出"></a>字符串的输入输出</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input string1 : \n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);<span class="comment">//输入的内容中不能含有空格</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"output:\n%s"</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str1[] = <span class="string">"abcdef"</span>;</span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"123456"</span>;</span><br><span class="line"><span class="keyword">char</span> dst[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (str1[i] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dst[i] = str1[i];</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (str2[j] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dst[i + j] = str2[j];</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">dst[i + j] = <span class="number">0</span>; <span class="comment">//字符串结束符</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"dst = %s\n"</span>, dst);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="05-函数的调用：产生随机数"><a href="#05-函数的调用：产生随机数" class="headerlink" title="05.函数的调用：产生随机数"></a>05.函数的调用：产生随机数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">time_t</span> time(<span class="keyword">time_t</span> *t);</span><br><span class="line">功能：获取当前系统时间</span><br><span class="line">参数：常设置为<span class="literal">NULL</span></span><br><span class="line">返回值：当前系统时间, <span class="keyword">time_t</span> 相当于<span class="keyword">long</span>类型，单位为毫秒</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">srand</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> seed)</span></span>;</span><br><span class="line">功能：用来设置rand()产生随机数时的随机种子</span><br><span class="line">参数：如果每次seed相等，rand()产生随机数相等</span><br><span class="line">返回值：无</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rand</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">功能：返回一个随机数值</span><br><span class="line">参数：无</span><br><span class="line">返回值：随机数</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">time_t</span> tm = time(<span class="literal">NULL</span>);<span class="comment">//得到系统时间</span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)tm);<span class="comment">//随机种子只需要设置一次即可</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"r=%d\n"</span>, rand());</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));<span class="comment">//随机种子只需要设置一次即可</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"r = %d\n"</span>, rand());</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;常用运算符分类&quot;&gt;&lt;a href=&quot;#常用运算符分类&quot; class=&quot;headerlink&quot; title=&quot;常用运算符分类&quot;&gt;&lt;/a&gt;常用运算符分类&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符类型&lt;/strong&gt;&lt;/th&gt;

      
    
    </summary>
    
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>C-List-One</title>
    <link href="http://yoursite.com/2020/02/16/C/List-01_C%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/02/16/C/List-01_C%E5%9F%BA%E7%A1%80/</id>
    <published>2020-02-16T10:54:52.000Z</published>
    <updated>2021-02-23T07:47:05.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-C语言"><a href="#01-C语言" class="headerlink" title="01.C语言"></a>01.C语言</h2><p>system<strong>函数的使用</strong></p><p>功能：在已经运行的程序中执行另外一个外部程序</p><p><strong>printf函数</strong></p><p>输出字符串</p><p><strong>return语句</strong></p><p>return代表函数执行完毕，返回return代表函数的终止</p><p><strong>返回值：</strong></p><p>成功：不同系统返回值不一样</p><p>失败：通常是 - 1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> value = system(<span class="string">"calc"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"it is ok"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="程序编译过程"><a href="#程序编译过程" class="headerlink" title="程序编译过程"></a>程序编译过程</h3><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc5gfeqsthj31dw0nu0td.jpg"  /><h3 id="程序执行过程"><a href="#程序执行过程" class="headerlink" title="程序执行过程"></a>程序执行过程</h3><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc5gm5ncgwj31dw0nu0th.jpg" alt="程序执行过程.png"  /><p><strong>CPU内部结构与寄存器</strong></p><ul><li>寄存器是CPU内部最基本的存储单元</li><li>CPU对外是通过<strong>总线</strong>(地址、控制、数据)来和外部设备交互的</li></ul><h3 id="查看汇编语言"><a href="#查看汇编语言" class="headerlink" title="查看汇编语言"></a>查看汇编语言</h3><ol><li>鼠标移到最左侧，添加断点</li><li>开始测试</li><li>调试——》窗口——》反汇编</li></ol><h2 id="02-数据类型"><a href="#02-数据类型" class="headerlink" title="02.数据类型"></a>02.数据类型</h2><p><strong>变量</strong></p><ul><li><p>在程序运行过程中，其值可以改变</p></li><li><p>变量在使用前必须<strong>先定义</strong>，定义变量前必须有<strong>相应的</strong>数据类型</p></li></ul><p><strong>常量</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 10  <span class="comment">//放到，main函数前面</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>  LENGTH = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>1、通过#define 定义的常量 是根据值来匹配数据类型的</p><p>2、const 修饰的常量是不安全 可以通过指针来修改</p><h3 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h3><p><strong>十进制转二进制</strong></p><p>十进制转化二进制的方法：</p><p>​    用十进制数除以2，分别取余数和商数，商数为0的时候，将余数倒着数就是转化后的结果。</p><p>十进制的小数转换成二进制：</p><p>​    小数部分和2相乘，取整数，不足1取0，每次相乘都是小数部分，顺序看取整后的数就是转化后的结果。</p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8ha4m5c0j309j0c6mxe.jpg" alt="clip_image002.jpg" style="zoom: 67%;" /><p><strong>八进制</strong></p><p><strong>二进制转八进制：从最后一位往前数，三个一组</strong></p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8hl6walij309b068dfw.jpg" alt="1.jpg" style="zoom:80%;" /><p><strong>十六进制</strong></p><p><strong>二进制转十六进制：从最后一位往前数，四个一组</strong></p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8hoyjycij30i405g74f.jpg" alt="02.jpg" style="zoom: 80%;" /><h4 id="不同进制数的表示方法"><a href="#不同进制数的表示方法" class="headerlink" title="不同进制数的表示方法"></a>不同进制数的表示方法</h4><table><thead><tr><th>十进制</th><th>以正常数字1-9开头，如123</th></tr></thead><tbody><tr><td>八进制</td><td>以数字0开头，如0123</td></tr><tr><td>十六进制</td><td>以0x开头，如0x123</td></tr><tr><td>二进制</td><td>C语言不能直接书写二进制数</td></tr></tbody></table><h4 id="输出不同进制数"><a href="#输出不同进制数" class="headerlink" title="输出不同进制数"></a>输出不同进制数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0123</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0xABC</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);<span class="comment">//%d 表示十进制数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%o\n"</span>, b);<span class="comment">//%o 表示八进制数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%x\n"</span>, c);<span class="comment">//%x 表示十六进制数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="03-计算机内存数值存储方式"><a href="#03-计算机内存数值存储方式" class="headerlink" title="03.计算机内存数值存储方式"></a>03.计算机内存数值存储方式</h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>特点：</p><ul><li><p>最高位做为符号位，0表示正,为1表示负</p></li><li><p>其它数值部分就是数值本身绝对值的二进制数</p></li><li><p>负数的原码是在其绝对值的基础上，最高位变为1</p></li></ul><table><thead><tr><th><strong>十进制数</strong></th><th><strong>原码</strong></th></tr></thead><tbody><tr><td>+15</td><td>0000 1111</td></tr><tr><td>-15</td><td>1000 1111</td></tr><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1000 0000</td></tr></tbody></table><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><ul><li><p>对于正数，反码与原码相同</p></li><li><p>对于负数，<strong>符号位不变</strong>，其它部分取反(1变0,0变1)</p></li></ul><table><thead><tr><th><strong>十进制数</strong></th><th><strong>反码</strong></th></tr></thead><tbody><tr><td>+15</td><td>0000 1111</td></tr><tr><td>-15</td><td>1111 0000</td></tr><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1111 1111</td></tr></tbody></table><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p><strong>在计算机系统中，数值一律用补码来存储。</strong></p><p><strong>补码特点：</strong></p><ul><li>对于正数，原码、反码、补码相同</li><li>对于负数，其补码为它的反码加1</li><li>负数原码符号位不动，其他位求反，最后整个数加1，得到补码</li></ul><table><thead><tr><th><strong>十进制数</strong></th><th><strong>补码</strong></th></tr></thead><tbody><tr><td>+15</td><td>0000 1111</td></tr><tr><td>-15</td><td>1111 0001</td></tr><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>0000 0000</td></tr></tbody></table><p><strong>在计算机系统中，数值一律用补码来存储</strong>，主要原因是：</p><ul><li><p><strong>统一了零的编码</strong></p></li><li><p><strong>将符号位和其它位统一处理</strong></p></li><li><p><strong>将减法运算转变为加法运算</strong></p></li><li><p><strong>两个用补码表示的数相加时，如果最高位(符号位)有进位，则进位被舍弃</strong></p></li></ul><p>示例1：用8位二进制数分别表示+0和-0</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>原码</strong></th></tr></thead><tbody><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1000 0000</td></tr></tbody></table><table><thead><tr><th><strong>十进制数</strong></th><th><strong>反码</strong></th></tr></thead><tbody><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1111 1111</td></tr></tbody></table><p> 不管以原码方式存储，还是以反码方式存储，0也有两种表示形式。为什么同样一个0有两种不同的表示方法呢？</p><p> 但是如果以补码方式存储，补码统一了零的编码：</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>补码</strong></th></tr></thead><tbody><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>10000 0000由于只用8位描述，最高位1丢弃，变为0000 0000</td></tr></tbody></table><h2 id="04-关键字"><a href="#04-关键字" class="headerlink" title="04.关键字"></a>04.关键字</h2><h3 id="sizeof"><a href="#sizeof" class="headerlink" title="sizeof"></a>sizeof</h3><ul><li>sizeof不是函数，所以不需要包含任何头文件，它的功能是计算一个数据类型的大小，单位为字节</li><li>sizeof的返回值为size_t</li><li>size_t类型在32位操作系统下是unsigned int，是一个无符号的整数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b = <span class="keyword">sizeof</span>(a);<span class="comment">//sizeof得到指定值占用内存的大小，单位：字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b = %d\n"</span>, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">size_t</span> c = <span class="keyword">sizeof</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c = %u\n"</span>, c);<span class="comment">//用无符号数的方式输出c的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整形-：int"><a href="#整形-：int" class="headerlink" title="整形 ：int"></a>整形 ：int</h3><p><strong>整型变量的输出</strong></p><table><thead><tr><th><strong>打印格式</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>%d</td><td>输出一个<strong>有符号</strong>的10进制int类型</td></tr><tr><td>%o(字母o)</td><td>输出8进制的int类型</td></tr><tr><td>%<strong>x</strong></td><td>输出16进制的int类型，字母以小写输出</td></tr><tr><td>%<strong>X</strong></td><td>输出16进制的int类型，字母以大写写输出</td></tr><tr><td>%u</td><td>输出一个10进制的<strong>无符号</strong>数</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0567</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0xabc</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"8进制：b = %o\n"</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"10进制：b = %d\n"</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"16进制：c = %x\n"</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"16进制：c = %X\n"</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"10进制：c = %d\n"</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> d = <span class="number">0xffffffff</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"有符号方式打印：d = %d\n"</span>, d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"无符号方式打印：d = %u\n"</span>, d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>整型变量的输出</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input a please:\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不要加“\n”</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);<span class="comment">//输入a的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>short、int、long、long long</strong></p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th></tr></thead><tbody><tr><td>short(短整型)</td><td>2字节</td></tr><tr><td>int(整型)</td><td>4字节</td></tr><tr><td>long(长整形)</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td></tr><tr><td>long long(长长整形)</td><td>8字节</td></tr></tbody></table><table><thead><tr><th><strong>整型常量</strong></th><th><strong>所需类型</strong></th></tr></thead><tbody><tr><td>10</td><td>代表int类型</td></tr><tr><td>10l, 10L</td><td>代表long类型</td></tr><tr><td>10ll, 10LL</td><td>代表long long类型</td></tr><tr><td>10u, 10U</td><td>代表unsigned int类型</td></tr><tr><td>10ul, 10UL</td><td>代表unsigned long类型</td></tr><tr><td>10ull, 10ULL</td><td>代表unsigned long long类型</td></tr></tbody></table><table><thead><tr><th><strong>打印格式</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>%hd</td><td>输出short类型</td></tr><tr><td>%d</td><td>输出int类型</td></tr><tr><td>%l</td><td>输出long类型</td></tr><tr><td>%ll</td><td>输出long long类型</td></tr><tr><td>%hu</td><td>输出unsigned short类型</td></tr><tr><td>%u</td><td>输出unsigned int类型</td></tr><tr><td>%lu</td><td>输出unsigned long类型</td></tr><tr><td>%llu</td><td>输出unsigned long long类型</td></tr></tbody></table><h4 id="有符号数和无符号数的区别"><a href="#有符号数和无符号数的区别" class="headerlink" title="有符号数和无符号数的区别"></a>有符号数和无符号数的区别</h4><ul><li>无符号数最高位不是符号位，而就是数的一部分，无符号数不可能是负数。</li></ul><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>取值范围</strong></th></tr></thead><tbody><tr><td>short</td><td>2字节</td><td>-32768 到 32767 (-215  ~ 215-1)</td></tr><tr><td>int</td><td>4字节</td><td>-2147483648 到  2147483647 (-231 ~ 231-1)</td></tr><tr><td>long</td><td>4字节</td><td>-2147483648 到  2147483647 (-231 ~ 231-1)</td></tr><tr><td>unsigned short</td><td>2字节</td><td>0 到 65535 (0 ~ 216-1)</td></tr><tr><td>unsigned int</td><td>4字节</td><td>0 到 4294967295 (0  ~ 232-1)</td></tr><tr><td>unsigned long</td><td>4字节</td><td>0 到 4294967295 (0  ~ 232-1)</td></tr></tbody></table><h3 id="字符型：char"><a href="#字符型：char" class="headerlink" title="字符型：char"></a>字符型：char</h3><ul><li>char的本质就是一个<strong>1字节大小</strong>的整型。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n"</span>, <span class="string">'a'</span><span class="number">-32</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="string">'a'</span><span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b = <span class="string">' '</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4转义字符"><a href="#4-4转义字符" class="headerlink" title="4.4转义字符"></a>4.4转义字符</h3><table><thead><tr><th><strong>转义字符</strong></th><th><strong>含义</strong></th><th><strong>ASCII码值（十进制）</strong></th></tr></thead><tbody><tr><td><strong>\a</strong></td><td>警报</td><td>007</td></tr><tr><td><strong>\b</strong></td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td><strong>\f</strong></td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td><strong>\n</strong></td><td>换行(LF) ，将当前位置移到下一行开头</td><td>010</td></tr><tr><td><strong>\r</strong></td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td></td><td></td><td></td></tr><tr><td><strong>\t</strong></td><td>水平制表(HT)  （跳到下一个TAB位置）</td><td>009</td></tr><tr><td><strong>\v</strong></td><td>垂直制表(VT)</td><td>011</td></tr><tr><td></td><td></td><td></td></tr><tr><td>\</td><td>代表一个反斜线字符”&quot;</td><td>092</td></tr><tr><td>&#39;</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>&quot;</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>数字0</td><td>000</td></tr><tr><td>\ddd</td><td>8进制转义字符，d范围0~7</td><td>3位8进制</td></tr><tr><td>\xhh</td><td>16进制转义字符，h范围0<del>9，a</del>f，A~F</td><td>3位16进制</td></tr></tbody></table><h3 id="实型-浮点型-：float、double"><a href="#实型-浮点型-：float、double" class="headerlink" title="实型(浮点型)：float、double"></a>实型(浮点型)：float、double</h3><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15～16位有效数字</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = <span class="number">3.14f</span>; </span><br><span class="line"><span class="keyword">double</span> b = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%f\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>, a);<span class="comment">//.3f 代表保留小数点后面 3位数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lf\n"</span>, b);</span><br><span class="line"><span class="comment">//科学法赋值 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> c = <span class="number">3.14e-2</span>f;<span class="comment">//e代表10，e3代表1000</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%f\n"</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6类型限定符"><a href="#4-6类型限定符" class="headerlink" title="4.6类型限定符"></a>4.6类型限定符</h3><table><thead><tr><th><strong>限定符</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>extern</td><td>声明一个变量，extern声明的变量没有建立存储空间。  extern int a;</td></tr><tr><td>const</td><td>定义一个常量，常量的值不能修改。  const int a = 10;</td></tr><tr><td>volatile</td><td>防止编译器优化代码</td></tr><tr><td>register</td><td>定义寄存器变量，提高效率。register是建议型的指令，而不是命令型的指令，如果CPU有空闲寄存器，那么register就生效，如果没有空闲寄存器，那么register无效。</td></tr></tbody></table><h2 id="05-字符串格式化输出和输入"><a href="#05-字符串格式化输出和输入" class="headerlink" title="05.字符串格式化输出和输入"></a>05.字符串格式化输出和输入</h2><p><strong>字符串常量</strong></p><ul><li>字符串常量与字符常量的不同：</li></ul><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8rdba035j30ah02fglh.jpg" alt="111.jpg" style="zoom:80%;" /><h3 id="printf函数和putchar函数"><a href="#printf函数和putchar函数" class="headerlink" title="printf函数和putchar函数"></a>printf函数和putchar函数</h3><table><thead><tr><th><strong>打印格式</strong></th><th><strong>对应数据类型</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>%d</td><td>int</td><td>接受整数值并将它表示为有符号的十进制整数</td></tr><tr><td>%hd</td><td>short int</td><td>短整数</td></tr><tr><td>%hu</td><td>unsigned short</td><td>无符号短整数</td></tr><tr><td>%o</td><td>unsigned int</td><td>无符号8进制整数</td></tr><tr><td>%u</td><td>unsigned int</td><td>无符号10进制整数</td></tr><tr><td>%x,%X</td><td>unsigned int</td><td>无符号16进制整数，x对应的是abcdef，X对应的是ABCDEF</td></tr><tr><td>%f</td><td>float</td><td>单精度浮点数</td></tr><tr><td>%lf</td><td>double</td><td>双精度浮点数</td></tr><tr><td>%e,%E</td><td>double</td><td>科学计数法表示的数，此处”e”的大小写代表在输出时用的”e”的大小写</td></tr><tr><td>%c</td><td>char</td><td>字符型。可以把输入的数字按照ASCII码相应转换为对应的字符</td></tr><tr><td>%s</td><td>char *</td><td>字符串。</td></tr><tr><td><strong>%p</strong></td><td>void *</td><td><strong>以16进制形式输出指针</strong></td></tr><tr><td>%%</td><td>%</td><td>输出一个百分号</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%p\n"</span>, &amp;a);<span class="comment">//输出变量a在内存中的地址编号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b = <span class="string">'a'</span>;</span><br><span class="line"><span class="built_in">putchar</span>(b);<span class="comment">//putchar只有一个参数，就是要输出的char</span></span><br><span class="line">    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%%d\n"</span>);<span class="comment">//%%代表一个%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"'%6d'\n"</span>, a);<span class="comment">// '    10'</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"'%-6d'\n"</span>, a);<span class="comment">//'10    '</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"'%06d'\n"</span>, a);<span class="comment">//'000010'</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="scanf和getchar函数"><a href="#scanf和getchar函数" class="headerlink" title="scanf和getchar函数"></a>scanf和getchar函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> ch1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input ch1 please: \n"</span>);</span><br><span class="line">ch1 = getchar();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n"</span>, ch1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b);<span class="comment">//notice: 这里是 b的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-C语言&quot;&gt;&lt;a href=&quot;#01-C语言&quot; class=&quot;headerlink&quot; title=&quot;01.C语言&quot;&gt;&lt;/a&gt;01.C语言&lt;/h2&gt;&lt;p&gt;system&lt;strong&gt;函数的使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;功能：在已经运行的程序中执行另外一个
      
    
    </summary>
    
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>List-02_Linux基本使用（2）</title>
    <link href="http://yoursite.com/2020/02/15/Linux/List-02_Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%EF%BC%882%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/15/Linux/List-02_Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%EF%BC%882%EF%BC%89/</id>
    <published>2020-02-15T02:10:58.000Z</published>
    <updated>2021-03-02T06:05:56.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-用户权限相关命令"><a href="#01-用户权限相关命令" class="headerlink" title="01.用户权限相关命令"></a>01.用户权限相关命令</h2><h3 id="1-1组管理"><a href="#1-1组管理" class="headerlink" title="1.1组管理"></a>1.1组管理</h3><blockquote><p>提示：<strong>创建组</strong> / <strong>删除组</strong> 的终端命令都需要通过 <code>sudo</code> 执行</p></blockquote><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">groupadd 组名</td><td align="left">添加组</td></tr><tr><td align="left">02</td><td align="left">groupdel 组名</td><td align="left">删除组</td></tr><tr><td align="left">03</td><td align="left">cat /etc/group</td><td align="left">确认组信息</td></tr><tr><td align="left">04</td><td align="left">chgrp -R 组名 文件/目录名</td><td align="left">递归修改文件/目录的所属组</td></tr></tbody></table><blockquote><p>提示：</p><ul><li>组信息保存在 <code>/etc/group</code> 文件中</li><li><code>/etc</code> 目录是专门用来保存 <strong>系统配置信息</strong> 的目录</li></ul></blockquote><p>在实际应用中，可以预先针对 <strong>组</strong> 设置好权限，然后 <strong>将不同的用户添加到对应的组中</strong>，从而<strong>不用依次为每一个用户设置权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su root </span><br><span class="line"></span><br><span class="line">groupadd chanwillian</span><br><span class="line">groupdel chanwillian </span><br><span class="line"></span><br><span class="line">chgrp 组名 文件或目录名</span><br></pre></td></tr></table></figure><h3 id="1-2chmod-简单使用（重要）"><a href="#1-2chmod-简单使用（重要）" class="headerlink" title="1.2chmod 简单使用（重要）"></a>1.2<code>chmod</code> 简单使用（重要）</h3><ul><li><code>chmod</code> 可以修改 <strong>用户／组</strong> 对 <strong>文件／目录</strong> 的权限</li><li>命令格式如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +/-rwx 文件名|目录名</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>[   u/g/o/a ]</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>u</td><td>user 表示该文件的<strong>所有者</strong></td></tr><tr><td>g</td><td>group 表示与该文件的所有者属于同一组(  group )者，即<strong>用户组</strong></td></tr><tr><td>o</td><td>other 表示其他以外的人</td></tr><tr><td>a</td><td>all 表示这三者皆是</td></tr></tbody></table><table><thead><tr><th><strong>[ + - = ]</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><strong>+</strong></td><td>增加权限</td></tr><tr><td><strong>-</strong></td><td>撤销权限</td></tr><tr><td><strong>=</strong></td><td>设定权限</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod u-r a.txt</span><br><span class="line">chmod u-r oneday</span><br><span class="line">chmod gu&#x3D;rwx oneday多个类型，一同修改 </span><br><span class="line">chmod g&#x3D;rwx oneday twoday多个对象，一同修改</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C%E7%9A%87%E7%9A%84%E6%89%8B%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200515230054128.png" alt="image-20200515230054128"></p><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>r</td><td>读取权限，数字代号为 “4”</td></tr><tr><td>w</td><td>写入权限，数字代号为 “2”</td></tr><tr><td>x</td><td>执行权限，数字代号为 “1”</td></tr><tr><td>-</td><td>不具任何权限，数字代号为 “0”</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">764</span> onedaydrwxrw-r-x</span><br><span class="line">chomd <span class="number">654</span> onedaydrw-r-xr--</span><br></pre></td></tr></table></figure><ul><li><strong>注意：如果想递归修改某个目录下的所有文件的权限，需要加上参数“ -R ”。</strong></li></ul><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 test&#x2F; -R</span><br></pre></td></tr></table></figure><p>递归 test 目录下所有文件加 777 权限。</p><h3 id="1-3用户管理"><a href="#1-3用户管理" class="headerlink" title="1.3用户管理"></a>1.3用户管理</h3><h4 id="创建用户／设置密码／删除用户"><a href="#创建用户／设置密码／删除用户" class="headerlink" title="创建用户／设置密码／删除用户"></a>创建用户／设置密码／删除用户</h4><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">useradd -m -g 组 新建用户名</td><td align="left">添加新用户</td><td align="left"><strong>-m</strong> 自动建立用户家目录      <strong>-g</strong> 指定用户所在的组，否则会建立一个和同名的组</td></tr><tr><td align="left">02</td><td align="left">passwd 用户名</td><td align="left">设置用户密码</td><td align="left">如果是普通用户，直接用 passwd 可以修改自己的账户密码</td></tr><tr><td align="left">03</td><td align="left">userdel -r 用户名</td><td align="left">删除用户</td><td align="left">-r 选项会自动删除用户家目录</td></tr><tr><td align="left">04</td><td align="left">cat /etc/passwd | grep 用户名</td><td align="left">确认用户信息</td><td align="left">新建用户后，用户信息会保存在 /etc/passwd 文件中</td></tr></tbody></table><blockquote><p>提示：</p><ul><li>创建用户时，如果忘记添加 <code>-m</code> 选项指定新用户的家目录 —— 最简单的方法就是<strong>删除用户，重新创建</strong></li><li>创建用户时，默认会创建一个和<strong>用户名</strong>同名的<strong>组名</strong></li><li>用户信息保存在 <code>/etc/passwd</code> 文件中</li></ul></blockquote><h4 id="查看用户信息"><a href="#查看用户信息" class="headerlink" title="查看用户信息"></a>查看用户信息</h4><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">id [用户名]</td><td align="left">查看用户 UID 和 GID 信息</td></tr><tr><td align="left">02</td><td align="left">who</td><td align="left">查看当前所有登录的用户列表</td></tr><tr><td align="left">03</td><td align="left">whoami</td><td align="left">查看当前登录用户的账户名</td></tr></tbody></table><p><strong>passwd 文件</strong></p><p><code>/etc/passwd</code> 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是</p><ol><li>用户名</li><li>密码（x，表示加密的密码）</li><li>UID（用户标识）</li><li>GID（组标识）</li><li>用户全名或本地帐号</li><li>家目录</li><li>登录使用的 Shell，就是登录之后，使用的终端命令，<code>ubuntu</code> 默认是 <code>dash</code></li></ol><p><img src="C:%5CUsers%5C%E7%9A%87%E7%9A%84%E6%89%8B%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200516213219010.png" alt="image-20200516213219010"></p><p><strong>usermod</strong></p><ul><li><code>usermod</code> 可以用来设置 <strong>用户</strong> 的 <strong>主组</strong> ／ <strong>附加组</strong> 和 <strong>登录 Shell</strong>，命令格式如下：</li><li><strong>主组</strong>：通常在新建用户时指定，在 <code>etc/passwd</code> 的第 4 列 <strong>GID 对应的组</strong></li><li><strong>附加组</strong>：在 <code>etc/group</code> 中最后一列表示该组的用户列表，用于指定 <strong>用户的附加权限</strong></li></ul><blockquote><p>提示：设置了用户的附加组之后，需要重新登录才能生效！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改用户的主组（passwd 中的 GID）</span></span><br><span class="line">usermod -g 组 用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改用户的附加组</span></span><br><span class="line">usermod -G 组 用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改用户登录 Shell</span></span><br><span class="line">usermod -s /bin/bash 用户名</span><br></pre></td></tr></table></figure><blockquote><p>注意：默认使用 <code>useradd</code> 添加的用户是没有权限使用 <code>sudo</code> 以 <code>root</code> 身份执行命令的，可以使用以下命令，将用户添加到 <code>sudo</code> 附加组中</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -G sudo 用户名</span><br></pre></td></tr></table></figure><p><strong>which（重要）</strong></p><blockquote><p>提示</p><ul><li><code>/etc/passwd</code> 是用于保存用户信息的文件</li><li><code>/usr/bin/passwd</code> 是用于修改用户密码的程序</li></ul></blockquote><ul><li><code>which</code> 命令可以查看执行命令所在位置，例如：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># /bin/ls</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> useradd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># /usr/sbin/useradd</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/ls       //ls -l 的一个用法</span><br><span class="line">ls -l /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h4><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">su - 用户名</td><td align="left">切换用户，并且切换目录</td><td align="left">- 可以切换到用户家目录，否则保持位置不变</td></tr><tr><td align="left">02</td><td align="left">exit</td><td align="left">退出当前登录账户</td><td align="left"></td></tr></tbody></table><ul><li><code>su</code> 不接用户名，可以切换到 <code>root</code>，但是不推荐使用，因为不安全</li></ul><h3 id="1-4修改文件权限"><a href="#1-4修改文件权限" class="headerlink" title="1.4修改文件权限"></a>1.4修改文件权限</h3><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">chown</td><td align="left">修改拥有者</td></tr><tr><td align="left">02</td><td align="left">chgrp</td><td align="left">修改组</td></tr><tr><td align="left">03</td><td align="left">chmod</td><td align="left">修改权限</td></tr></tbody></table><ul><li>命令格式如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改文件|目录的拥有者</span></span><br><span class="line">chown 用户名 文件名|目录名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归修改文件|目录的组</span></span><br><span class="line">chgrp -R 组名 文件名|目录名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归修改文件权限</span></span><br><span class="line">chmod -R 755 文件名|目录名</span><br></pre></td></tr></table></figure><ul><li><p><code>chmod</code> 在设置权限时，可以简单地使用三个数字分别对应 <strong>拥有者</strong> ／ <strong>组</strong> 和 <strong>其他</strong> 用户的权限</p></li><li><p>常见数字组合有：</p><ul><li><code>777</code> ===&gt; <code>u=rwx,g=rwx,o=rwx</code></li><li><code>755</code> ===&gt; <code>u=rwx,g=rx,o=rx</code></li><li><code>644</code> ===&gt; <code>u=rw,g=r,o=r</code></li></ul></li></ul><h4 id="last：查询用户登陆情况"><a href="#last：查询用户登陆情况" class="headerlink" title="last：查询用户登陆情况"></a>last：查询用户登陆情况</h4><h2 id="02-系统管理"><a href="#02-系统管理" class="headerlink" title="02.系统管理"></a>02.系统管理</h2><h3 id="时间和日期"><a href="#时间和日期" class="headerlink" title="时间和日期"></a>时间和日期</h3><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">date</td><td align="left">查看系统时间</td></tr><tr><td align="left">02</td><td align="left">cal</td><td align="left"><code>calendar</code> 查看日历，<code>-y</code> 选项可以查看一年的日历</td></tr></tbody></table><h3 id="磁盘信息"><a href="#磁盘信息" class="headerlink" title="磁盘信息"></a>磁盘信息</h3><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">df -h</td><td align="left"><code>disk free</code> 显示磁盘剩余空间</td></tr><tr><td align="left">02</td><td align="left">du -h [目录名]</td><td align="left"><code>disk usage</code> 显示目录下的文件大小</td></tr></tbody></table><ul><li>选项说明</li></ul><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-h</td><td align="left">以人性化的方式显示文件大小</td></tr></tbody></table><h3 id="进程信息"><a href="#进程信息" class="headerlink" title="进程信息"></a>进程信息</h3><ul><li>所谓 <strong>进程</strong>，通俗地说就是 <strong>当前正在执行的一个程序</strong></li></ul><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">ps aux</td><td align="left"><code>process status</code> 查看进程的详细状况</td></tr><tr><td align="left">02</td><td align="left">top</td><td align="left">动态显示运行中的进程并且排序</td></tr><tr><td align="left">03</td><td align="left">kill [-9] 进程代号</td><td align="left">终止指定代号的进程，<code>-9</code> 表示强行终止</td></tr></tbody></table><blockquote><p><code>ps</code> 默认只会显示当前用户通过终端启动的应用程序</p></blockquote><ul><li><code>ps</code> 选项说明功能</li></ul><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">a</td><td align="left">显示终端上的所有进程，包括其他用户的进程</td></tr><tr><td align="left">u</td><td align="left">显示进程的详细状态</td></tr><tr><td align="left">x</td><td align="left">显示没有控制终端的进程</td></tr></tbody></table><blockquote><p>提示：使用 <code>kill</code> 命令时，最好只终止由当前用户开启的进程，而不要终止 <code>root</code> 身份开启的进程，否则可能导致系统崩溃</p><ul><li>要退出 <code>top</code> 可以直接输入 <code>q</code></li></ul></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">init <span class="number">0</span> 关机</span><br><span class="line">init <span class="number">6</span>重启</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ping</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">105</span>测试远程主机连通性</span><br><span class="line">route查看网络路由设置</span><br><span class="line">netstat查看联网的软件有哪些，监控网络状态</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="ifconfig：查看或配置网卡信息"><a href="#ifconfig：查看或配置网卡信息" class="headerlink" title="ifconfig：查看或配置网卡信息"></a>ifconfig：查看或配置网卡信息</h3><p>如果，我们只是敲：ifconfig，它会显示所有网卡的信息：</p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbxgaofirvj30mb065gmc.jpg" alt="2016-05-31_000812"  /><table><thead><tr><th><strong>显示字段</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>eth0</td><td>网络接口名称</td></tr><tr><td>Link encap</td><td>链路封装协议</td></tr><tr><td>Hwaddr</td><td>网络接口的MAC地址</td></tr><tr><td>Inet addr</td><td>IP地址</td></tr><tr><td>Bcast</td><td>广播地址</td></tr><tr><td>Mask</td><td>子网掩码</td></tr><tr><td>UP</td><td>网络接口状态标识，UP已经启用，DOWN已经停用</td></tr><tr><td>BROADCAST</td><td>广播标识，标识网络接口是否支持广播</td></tr><tr><td>RUNNING</td><td>传输标识，标识网络接口是否已经开始传输分组数据</td></tr><tr><td>MULTICAST</td><td>多播标识，标识网络接口是否支持多播</td></tr><tr><td>MTU，Metric</td><td>MTU:最大传输单位，单位：字节。Metric:度量值，用于RIP建立网络路由用</td></tr><tr><td>RX bytes</td><td>接收数据字节统计</td></tr><tr><td>TX bytes</td><td>发送数据字节统计</td></tr></tbody></table><p>我们可以通过ifconfig配置网络参数：</p><p>只有root才能用ifconfig配置参数，其他用户只能查看网络配置</p><p><strong>ifconfig  网络接口名称  [地址协议类型]  [address]  [参数]</strong></p><p>地址协议类型如：inet(IPv4),inet6(IPv6)等</p><p>如:ifconfig eth0 inet 192.168.10.254 netmask 255.255.255.0 up</p><p> 常用参数：</p><table><thead><tr><th><strong>参数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>-a</td><td>显示所有网络接口状态</td></tr><tr><td>inet [IP地址]</td><td>设置IP地址</td></tr><tr><td>netmask [子网掩码]</td><td>设置子网掩码</td></tr><tr><td>up</td><td>启用网络接口</td></tr><tr><td>down</td><td>关闭网络接口</td></tr></tbody></table><p> ifconfig配置的网络参数在内存中，计算机重新启动之后就失效了，如果需要持久有效就需要修改网络接口的配置文件：</p><p>l redhat修改/etc/sysconfig/network-scripts/ifcfg-eth0文件</p><p>l redhat修改/etc/sysconfig/network-scripts/ifcfg-eth0文件</p><p>IPADDR=IP地址</p><p>GATEWAY=默认网关</p><p>l ubuntu修改/etc/NetworkManager/system-connections/Wired connection 1文件</p><p>[ipv4]</p><p>method=manual</p><p>addresses1=IP地址;24;默认网关;</p><p> <img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbxgcfwstxj30l00crgni.jpg" alt="20150318121400861"></p><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><h2 id="03-其他命令"><a href="#03-其他命令" class="headerlink" title="03.其他命令"></a>03.其他命令</h2><h4 id="find：查找文件"><a href="#find：查找文件" class="headerlink" title="find：查找文件"></a>find：查找文件</h4><p>常用用法：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> ./ -name a.txt查找当前目录下所有名为a.txt的文件</span><br><span class="line"><span class="built_in">find</span> ./ -name 'a*'查找当前目录下所有以a开头的文件</span><br><span class="line"><span class="built_in">find</span> ./ -name '*.txt'查找当前目录下所有后缀为.txt的文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">find</span> -name a.txt</span><br><span class="line"><span class="built_in">find</span> a.txt</span><br><span class="line"><span class="built_in">find</span> -size -<span class="number">2</span>M</span><br><span class="line"></span><br><span class="line"><span class="built_in">find</span> ./oneday -size -<span class="number">2</span>M查找在/oneday目录下大于<span class="number">2</span>M的文件</span><br><span class="line"><span class="built_in">find</span> ./oneday -size <span class="number">2</span>M等于<span class="number">2</span>M</span><br><span class="line"><span class="built_in">find</span> ./one day -size +<span class="number">2</span>M大于<span class="number">2</span>M</span><br></pre></td></tr></table></figure><h4 id="file：获取文件类型"><a href="#file：获取文件类型" class="headerlink" title="file：获取文件类型"></a>file：获取文件类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file a.txt</span><br></pre></td></tr></table></figure><h2 id="04-打包压缩"><a href="#04-打包压缩" class="headerlink" title="04.打包压缩"></a>04.打包压缩</h2><ul><li><strong>打包压缩</strong> 是日常工作中备份文件的一种方式</li><li>在不同操作系统中，常用的打包压缩方式是不同的<ul><li><code>Windows</code> 常用 <code>rar</code></li><li><code>Mac</code> 常用 <code>zip</code></li><li><code>Linux</code> 常用 <code>tar.gz</code></li></ul></li></ul><h3 id="1-1-打包-／-解包"><a href="#1-1-打包-／-解包" class="headerlink" title="1.1 打包 ／ 解包"></a>1.1 打包 ／ 解包</h3><ul><li><code>tar</code> 是 Linux 中最常用的 <strong>备份</strong>工具，此命令可以 <strong>把一系列文件</strong> 打包到 <strong>一个大文件中</strong>，也可以把一个 <strong>打包的大文件恢复成一系列文件</strong></li><li><code>tar</code> 的命令格式如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打包文件</span></span><br><span class="line">tar -cvf 打包文件.tar 被打包的文件／路径...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包文件</span></span><br><span class="line">tar -xvf 打包文件.tar</span><br></pre></td></tr></table></figure><ul><li><code>tar</code> 选项说明</li></ul><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">c</td><td align="left">生成档案文件，创建打包文件</td></tr><tr><td align="left">x</td><td align="left">解开档案文件</td></tr><tr><td align="left">v</td><td align="left">列出归档解档的详细过程，显示进度</td></tr><tr><td align="left">f</td><td align="left">指定档案文件名称，f 后面一定是 .tar 文件，所以必须放选项最后</td></tr></tbody></table><blockquote><p>注意：<code>f</code> 选项必须放在最后，其他选项顺序可以随意</p></blockquote><h3 id="1-2-压缩／解压缩"><a href="#1-2-压缩／解压缩" class="headerlink" title="1.2 压缩／解压缩"></a>1.2 压缩／解压缩</h3><h4 id="1-gzip"><a href="#1-gzip" class="headerlink" title="1) gzip"></a>1) <code>gzip</code></h4><ul><li>tar 与 gzip 命令结合可以使用实现文件打包和压缩<ul><li><code>tar</code> 只负责打包文件，但不压缩</li><li>用 <code>gzip</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.gz</code></li></ul></li></ul><blockquote><p>在 <code>Linux</code> 中，最常见的压缩文件格式就是 <code>xxx.tar.gz</code></p></blockquote><ul><li>在 <code>tar</code> 命令中有一个选项 <strong>-z</strong> 可以调用 <code>gzip</code>，从而可以方便的实现压缩和解压缩的功能</li><li>命令格式如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 压缩文件</span></span><br><span class="line">tar -zcvf 打包文件.tar.gz 被压缩的文件／路径...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩文件</span></span><br><span class="line">tar -zxvf 打包文件.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩到指定路径</span></span><br><span class="line">tar -zxvf 打包文件.tar.gz -C 目标路径</span><br><span class="line"></span><br><span class="line">tar -czvf test.tar.gz a.txt b.txt c.txt</span><br><span class="line">tar -xzvf test.tar.gz -C ../twoday 解压</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-C</td><td align="left">解压缩到指定目录，注意：要解压缩的目录必须存在</td></tr></tbody></table><h4 id="2-bzip2-two"><a href="#2-bzip2-two" class="headerlink" title="2) bzip2(two)"></a>2) <code>bzip2(two)</code></h4><ul><li><code>tar</code> 与 <code>bzip2</code> 命令结合可以使用实现文件 <strong>打包和压缩</strong>（用法和 <code>gzip</code> 一样）<ul><li><code>tar</code> 只负责打包文件，但不压缩，</li><li>用 <code>bzip2</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.bz2</code></li></ul></li><li>在 <code>tar</code> 命令中有一个选项 <strong>-j</strong> 可以调用 <code>bzip2</code>，从而可以方便的实现压缩和解压缩的功能</li><li>命令格式如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 压缩文件</span></span><br><span class="line">tar -jcvf 打包文件.tar.bz2 被压缩的文件／路径...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩文件</span></span><br><span class="line">tar -jxvf 打包文件.tar.bz2</span><br></pre></td></tr></table></figure><h3 id="1-3-软链接"><a href="#1-3-软链接" class="headerlink" title="1.3 软链接"></a>1.3 软链接</h3><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">ln -s 被链接的源文件 链接文件</td><td align="left">建立文件的软链接，用通俗的方式讲<strong>类似于</strong> Windows 下的<strong>快捷方式</strong></td></tr></tbody></table><ul><li><p>注意：</p></li><li><ol><li>没有 <strong>-s</strong>  选项建立的是一个  硬链接文件</li></ol><ul><li>两个文件占用相同大小的硬盘空间，<strong>工作中几乎不会建立文件的硬链接</strong></li></ul></li><li><ol start="2"><li><strong>源文件要使用绝对路径</strong>，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</li></ol></li></ul><ul><li>软链接：软链接不占用磁盘空间，源文件删除则软链接失效。</li><li>硬链接：硬链接只能链接普通文件，不能链接目录。</li><li>两种链接共同点：相链接的两个文件，修改其中一个文件，另一个会随其发生变化</li></ul><p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv314wfwzj30hx07774z.jpg" alt="img"></p><h4 id="硬链接简介（知道）"><a href="#硬链接简介（知道）" class="headerlink" title="硬链接简介（知道）"></a>硬链接简介（知道）</h4><p><strong>文件软硬链接的示意图</strong></p><p><img src="C:%5CUsers%5C%E7%9A%87%E7%9A%84%E6%89%8B%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200516233149956.png" alt="image-20200516233149956"></p><h2 id="05-VIM编辑器"><a href="#05-VIM编辑器" class="headerlink" title="05.VIM编辑器"></a>05.VIM编辑器</h2><h4 id="打开文件或者创造文件"><a href="#打开文件或者创造文件" class="headerlink" title="打开文件或者创造文件"></a>打开文件或者创造文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi f.txt</span><br><span class="line">vi a.txt</span><br></pre></td></tr></table></figure><h4 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift + Z + Z</span><br></pre></td></tr></table></figure><p><strong>输入    i    进入，进入插入模式</strong></p><p><strong>按下    Esc    ，退出插入模式</strong></p><h4 id="打开文件并且快速定位到特定行"><a href="#打开文件并且快速定位到特定行" class="headerlink" title="打开文件并且快速定位到特定行"></a>打开文件并且快速定位到特定行</h4><p>•在日常工作中，有可能会遇到打开一个文件，并定位到指定行的情况<br>•例如：在开发时，知道某一行代码有错误，可以快速定位到出错代码的位置<br>•这个时候，可以使用以下命令打开文件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi 文件名 +行号</span><br></pre></td></tr></table></figure><blockquote><p>提示:  如果只带上,而不指定行号,会直接定位到<strong>文件末尾</strong></p></blockquote><h3 id="vi的set指令"><a href="#vi的set指令" class="headerlink" title="vi的set指令"></a>vi的set指令</h3><table><thead><tr><th><strong>按键</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>:set ic</td><td>搜寻时忽略大小写</td></tr><tr><td>:set noic</td><td>搜寻时不忽略大小写</td></tr><tr><td><strong>:set nu</strong></td><td>显示行号                        <strong>常用</strong></td></tr><tr><td>:set nonu</td><td>不显示行号</td></tr></tbody></table><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lcd切换本地路径</span><br><span class="line">put上传</span><br><span class="line">get下载</span><br></pre></td></tr></table></figure><h3 id="创造网页"><a href="#创造网页" class="headerlink" title="创造网页"></a>创造网页</h3><ul><li><p>进入解压后的目录，终端敲make编译代码</p></li><li><p>root用户启动或关闭web服务</p></li><li><pre><code>./myhttp start                开启网页            ./myhttp stop                关闭网页<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>vi test.cgcc -o test.cgi test.c<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 06.ADB常用命令介绍</span><br><span class="line"></span><br><span class="line">| **命令**                            | **含义**                                                     |</span><br><span class="line">| :---------------------------------- | :----------------------------------------------------------- |</span><br><span class="line">| adb devices                         | 查看设备                                                     |</span><br><span class="line">| adb get-serialno                    | 获取设备的ID和序列号                                         |</span><br><span class="line">| adb shell                           | 进入设备或者模拟器的shell，进入之后就可以执行shell命令了，比如cd、pwd、ls等。 |</span><br><span class="line">| adb push &lt;本地路径&gt; &lt;远程路径&gt;      | 从电脑上发送文件到设备(手机)                                 |</span><br><span class="line">| adb push a.txt &#x2F;sdcard&#x2F;a.txt        | 把当前文件夹下面的文件a.txt文件发送到手机的&#x2F;sdcard&#x2F;下面      |</span><br><span class="line">| adb pull &lt;远程路径&gt; &lt;本地路径&gt;      | 从设备(手机)上下载文件到电脑                                 |</span><br><span class="line">| adb pull &#x2F;sdcard&#x2F;DCIM&#x2F;1.jpg .&#x2F;1.jpg | 把手机的&#x2F;sdcard&#x2F;DCIM&#x2F;的1.jpg文件发给电脑                     |</span><br><span class="line">| adb install 文件名                  | 安装软件，adb install test.apk                               |</span><br><span class="line">| adb remove 包名                     | 卸载软件                                                     |</span><br><span class="line"></span><br><span class="line">### 1.1使用ADB命令卸载手机软件</span><br><span class="line"></span><br><span class="line">1.</span><br></pre></td></tr></table></figure> adb devices     检测手机连接状态 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2.</span><br></pre></td></tr></table></figure> adb shell  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3.</span><br></pre></td></tr></table></figure> pm list packages            查看包名 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4.</span><br></pre></td></tr></table></figure> pm uninstall --user 0 包名        卸载软件 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 07.软件安装</span><br><span class="line"></span><br><span class="line">### 通过 apt 安装／卸载软件</span><br><span class="line"></span><br><span class="line">- apt 是 &#96;Advanced Packaging Tool&#96;，是 Linux 下的一款安装包管理工具</span><br><span class="line">- 可以在终端中方便的 **安装**／**卸载**／**更新软件包**</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line"># 1. 安装软件</span><br><span class="line">$ sudo apt install 软件包</span><br><span class="line"></span><br><span class="line"># 2. 卸载软件</span><br><span class="line">$ sudo apt remove 软件名</span><br><span class="line"></span><br><span class="line"># 3. 更新已安装的包</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure></code></pre></li></ul><h3 id="安装演练"><a href="#安装演练" class="headerlink" title="安装演练"></a>安装演练</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个小火车提示</span></span><br><span class="line">$ sudo apt install sl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个比较漂亮的查看当前进程排名的软件</span></span><br><span class="line">$ sudo apt install htop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-用户权限相关命令&quot;&gt;&lt;a href=&quot;#01-用户权限相关命令&quot; class=&quot;headerlink&quot; title=&quot;01.用户权限相关命令&quot;&gt;&lt;/a&gt;01.用户权限相关命令&lt;/h2&gt;&lt;h3 id=&quot;1-1组管理&quot;&gt;&lt;a href=&quot;#1-1组管理&quot; cla
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>List-01_选择器，CSS外观</title>
    <link href="http://yoursite.com/2020/01/31/CSS/List-01_%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%8CCSS%E5%A4%96%E8%A7%82/"/>
    <id>http://yoursite.com/2020/01/31/CSS/List-01_%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%8CCSS%E5%A4%96%E8%A7%82/</id>
    <published>2020-01-31T14:36:43.000Z</published>
    <updated>2020-08-24T13:35:33.044Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CSS样式规格"><a href="#CSS样式规格" class="headerlink" title="CSS样式规格"></a>CSS样式规格</h3><p><strong>概念</strong>： Cascading Style Sheets 层叠样式表</p><ul><li>层叠：多个样式可以作用在同一个html的元素上，同时生效</li></ul><p><strong>好处</strong>：</p><ol><li>功能强大</li><li>将内容展示和样式控制分离<ul><li>降低耦合度。解耦</li><li>让分工协作更容易</li><li>提高开发效率</li></ul></li></ol><p><strong>CSS 规则</strong>由两个主要的部分构成：选择器，以及一条或多条声明:</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/632877C9-2462-41D6-BD0E-F7317E4C42AC.jpg" alt="选择器"></p><ol><li>选择器通常是您需要改变样式的 HTML 元素。</li><li>每条声明由一个属性和一个值组成。</li><li>属性是您希望设置的样式属性。每个属性有一个值。属性和值被冒号分开。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>//放到 head标签之间</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>//style</span><br><span class="line">        h1 &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0-1-字体样式属性"><a href="#0-1-字体样式属性" class="headerlink" title="0.1    字体样式属性"></a>0.1    字体样式属性</h2><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>font-size</td><td>字体大小，px为单位</td></tr><tr><td>font-family</td><td>字体，例如 宋体</td></tr><tr><td>font-weight</td><td>字体粗细</td></tr><tr><td>font-style</td><td>字体是否倾斜</td></tr></tbody></table><p>常用技巧：</p><ol><li><p>网页中普遍使用14px+</p></li><li><p>使用偶数的数字字号</p></li><li><p>各种字体之间用  逗号隔开</p></li><li><p>字体名称中     若包含特殊符号或为中文名称时，则需要这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;Microsoft YaHei&quot;</span><br><span class="line">&quot;宋体&quot;</span><br></pre></td></tr></table></figure></li><li><p>选择多种字体时，名称为中文，一般放到后面</p></li><li><p>字体选择 键入时，尽量 使用  unicode ，一般字体 只选择 宋体和Microsoft YaHei</p></li></ol><h3 id="font-weight"><a href="#font-weight" class="headerlink" title="font-weight"></a>font-weight</h3><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">nomal</td><td align="left">默认值</td></tr><tr><td align="left">bold</td><td align="left">定义粗体字符。</td></tr></tbody></table><h3 id="font-style"><a href="#font-style" class="headerlink" title="font-style"></a>font-style</h3><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">normal</td><td align="left">默认值。</td></tr><tr><td align="left">italic</td><td align="left">斜体</td></tr></tbody></table><ul><li>一般文字很少使用 斜体</li></ul><h3 id="font综合设置字体样式"><a href="#font综合设置字体样式" class="headerlink" title="font综合设置字体样式"></a>font综合设置字体样式</h3><p>格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;font: font-style font-weight font-size font-family&#125;</span><br><span class="line">//顺序不能发生变化</span><br><span class="line">//font-size font-family 这两个属性 是必填项</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h1 &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">            font-family: "宋体"；</span><br><span class="line">            font-weight: normal;</span><br><span class="line">        &#125;</span><br><span class="line">        em &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-style</span>: <span class="selector-tag">normal</span>;     <span class="comment">/* 让斜体恢复正常 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        strong &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span>: <span class="selector-tag">normal</span>;     <span class="comment">/* 让加粗的文字恢复正常 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        ins &#123;</span><br><span class="line">            font: italic bold 16px "Microsoft YaHei";</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>天下无敌<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>中华小当家<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>我有时接受不了别人的意见<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ins</span>&gt;</span>天下之大唯我独尊<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="调试工具Chrome的使用"><a href="#调试工具Chrome的使用" class="headerlink" title="调试工具Chrome的使用"></a>调试工具Chrome的使用</h3><p>鼠标右键，检查，  页面左边部分为HTML，右边 部分为CSS</p><h2 id="0-2-选择器"><a href="#0-2-选择器" class="headerlink" title="0.2    选择器"></a>0.2    选择器</h2><h3 id="2-1-类选择器"><a href="#2-1-类选择器" class="headerlink" title="2.1    类选择器"></a>2.1    类选择器</h3><p><strong>注意</strong>：类选择器选择器优先级高于元素选择器</p><p>例题一</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .yellow &#123;//命名：长词组 单词之间 用横线连接</span><br><span class="line">            color: yellow;//命名 不能使用下划线，中文和纯数字</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.orange</span> &#123; </span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"yellow"</span>&gt;</span>king<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"orange"</span>&gt;</span>queen<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blue"</span>&gt;</span>minister<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例题二</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span &#123;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line">            color: blue;   </span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.orange</span> &#123;</span></span><br><span class="line">            color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"blue"</span>&gt;</span>G<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>o<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"orange"</span>&gt;</span>o<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"blue"</span>&gt;</span>g<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>l<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>e<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-多类名选择器"><a href="#2-2-多类名选择器" class="headerlink" title="2.2    多类名选择器"></a>2.2    多类名选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>多类名选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.font</span> &#123;</span></span><br><span class="line">        font-size: 20px;</span><br><span class="line">      &#125;  </span><br><span class="line"><span class="css">      <span class="selector-class">.font2</span> &#123;</span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.pink</span> &#123;</span></span><br><span class="line">        color: pink;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"font pink"</span>&gt;</span>亚瑟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"font2 pink"</span>&gt;</span>孙尚香<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>铠<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-ID选择器"><a href="#2-3-ID选择器" class="headerlink" title="2.3    ID选择器"></a>2.3    ID选择器</h3><p><strong>注意</strong>：id选择器优先级高于元素选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ID选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#brother</span> &#123;</span></span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#family</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#friend</span> &#123;</span></span><br><span class="line">            color: yellow</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#people</span> &#123;</span></span><br><span class="line">            color: black;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"brother"</span>&gt;</span>兄弟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"red"</span>&gt;</span>家人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"friend"</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"people"</span>&gt;</span>陌生人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>ID 只能使用一次，类 可使用 无数次</li></ul><h3 id="2-4-通配符选择器"><a href="#2-4-通配符选择器" class="headerlink" title="2.4    通配符选择器"></a>2.4    通配符选择器</h3><ul><li>很少使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    * &#123;</span><br><span class="line">        color: purple;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-伪类选择器"><a href="#2-5-伪类选择器" class="headerlink" title="2.5    伪类选择器"></a>2.5    伪类选择器</h3><h4 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;                <span class="comment">/* 未访问的链接 */</span></span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: gray;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">     <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;           <span class="comment">/*  已访问的链接 */</span></span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: red;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125; </span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;            <span class="comment">/*  鼠标放到链接上 */</span></span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: blue;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125; </span><br><span class="line">    a:active &#123;            /* 点击链接 不松开鼠标 *///这四个东西，顺序不能改变</span><br><span class="line">        font-size: 18px;//记忆口诀：lv包包，ha好</span><br><span class="line">        color: yellow;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>常用的格式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        a &#123;</span><br><span class="line">            font-weight: 700;</span><br><span class="line">            font-size: 18px;</span><br><span class="line">            color: purple;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.example</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">             color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>who am i<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"example"</span>&gt;</span>king<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        li:first-child &#123;第一个</span><br><span class="line">            color: pink;    </span><br><span class="line">        &#125;</span><br><span class="line">        li:last-child &#123;最后一个</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        li:nth-child(4) &#123;第4个</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例题二</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    li:nth-child(n) &#123;       所有元素</span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2n)</span> &#123;      <span class="comment">/*  0,2,4,6,8  */</span></span></span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3n)</span> &#123;       <span class="comment">/*  0,3,6,9,12  */</span></span></span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">    li:nth-child(even) &#123;    偶数元素</span><br><span class="line">        color: blue;    </span><br><span class="line">    &#125;</span><br><span class="line">    li:nth-child(odd) &#123;     奇数元素</span><br><span class="line">        color: purple;</span><br><span class="line">    &#125;</span><br><span class="line">    li:nth-last-child(even) &#123;    偶数元素,从最后一个开始计数</span><br><span class="line">        color: blue;    </span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="目标伪类选择器"><a href="#目标伪类选择器" class="headerlink" title="目标伪类选择器"></a>目标伪类选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-pseudo">:target</span> &#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span>//联系  锚点定位</span><br></pre></td></tr></table></figure><h2 id="0-3-CSS外观属性"><a href="#0-3-CSS外观属性" class="headerlink" title="0.3    CSS外观属性"></a>0.3    CSS外观属性</h2><h3 id="3-1-CSS颜色格式"><a href="#3-1-CSS颜色格式" class="headerlink" title="3.1    CSS颜色格式"></a>3.1    CSS颜色格式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ff0000</span>;         <span class="comment">/* 颜色最常用的为 16进制 */</span>  </span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f00</span>;          <span class="comment">/*   两两相同，可以简写   非是如此，不可简写 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(even)</span> &#123;</span></span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#rgb</span> &#123;                         <span class="comment">/*  RGB格式 */</span></span></span><br><span class="line">            color: rgb(135, 206, 235);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>王者<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>钻石<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"rgb"</span>&gt;</span>铂金<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="line-height：行间距"><a href="#line-height：行间距" class="headerlink" title="line-height：行间距"></a>line-height：行间距</h3><ul><li>单位：em，px 和 % ，em表示一个字的宽度</li><li>一般情况下，行距  比字号大 7，8个px即可</li></ul><h3 id="text-align：水平对齐方式"><a href="#text-align：水平对齐方式" class="headerlink" title="text-align：水平对齐方式"></a>text-align：水平对齐方式</h3><ul><li>left，right 和 center</li></ul><h3 id="text-indent：首行缩进"><a href="#text-indent：首行缩进" class="headerlink" title="text-indent：首行缩进"></a>text-indent：首行缩进</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    p &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">line-height</span>: 24<span class="selector-tag">px</span>;     <span class="comment">/*  行间距 */</span></span></span><br><span class="line">        text-indent: 2em;</span><br><span class="line">    &#125;</span><br><span class="line">    h2 &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="letter-spacing-字间距"><a href="#letter-spacing-字间距" class="headerlink" title="letter-spacing :  字间距"></a>letter-spacing :  字间距</h3><h3 id="word-spacing：单词间距"><a href="#word-spacing：单词间距" class="headerlink" title="word-spacing：单词间距"></a>word-spacing：单词间距</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">letter-spacing</span>: 4<span class="selector-tag">px</span>;        <span class="comment">/*字间距*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">word-spacing</span>: 5<span class="selector-tag">px</span>;        <span class="comment">/*  单词间距 针对于英文，对于中文无效 */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="颜色半透明"><a href="#颜色半透明" class="headerlink" title="颜色半透明"></a>颜色半透明</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: rgba(255,0,0,0.5);最后一个值的范围 0&lt;a&lt;1</span><br></pre></td></tr></table></figure><h3 id="text-shadow-文字阴影"><a href="#text-shadow-文字阴影" class="headerlink" title="text-shadow:文字阴影"></a>text-shadow:文字阴影</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-shadow:水平位置，垂直位置，模糊距离，阴影颜色&#x2F;&#x2F;前两个必填</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>间距<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ofo</span>;</span></span><br><span class="line">            font-size: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 5<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.5</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我喜欢你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="盒子模型：控制布局"><a href="#盒子模型：控制布局" class="headerlink" title="盒子模型：控制布局"></a>盒子模型：控制布局</h3><p><strong>margin</strong>：外边距</p><p><strong>padding</strong>：内边距</p><p>默认情况下内边距会影响整个盒子的大小</p><p><strong>box-sizing: border-box;</strong>  设置盒子的属性，让width和height就是最终盒子的大小</p><p><strong>float</strong>：浮动</p><ul><li>left</li><li>right</li></ul><h3 id="sumline快捷键"><a href="#sumline快捷键" class="headerlink" title="sumline快捷键"></a>sumline快捷键</h3><table><thead><tr><th>键位</th><th align="center">功能</th></tr></thead><tbody><tr><td>标签名 + Tab</td><td align="center">快速生成标签</td></tr><tr><td>标签名:  +  属性名 + Tab</td><td align="center">快速生成带有某一属性的标签</td></tr><tr><td>标签名*数量   +  Tab</td><td align="center">生成相应数量标签</td></tr><tr><td>标签名  +     <strong>&gt;</strong>    +  子标签名   + Tab</td><td align="center">生成带有子标签的标签</td></tr><tr><td><strong>.</strong>  +  类名   + Tab</td><td align="center">生成这样的东西<div class="red"></div></td></tr></tbody></table><h2 id="0-4-引入CSS样式表"><a href="#0-4-引入CSS样式表" class="headerlink" title="0.4    引入CSS样式表"></a>0.4    引入CSS样式表</h2><h3 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h3><ul><li>进行小的样式修改，直接在标签内进行修改</li><li>不常用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"color: skyblue; font-size: 18px;"</span>&gt;</span>萌萌哒<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>间距<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>//style 标签放到这里</span><br><span class="line">        div &#123;</span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>萌萌哒<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><ul><li>css文件和html文件相分离</li><li>结构  样式相分离</li><li>再使用 link 标签，将css文件引入 html文件中去</li><li><strong>最常用</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>外部样式表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"test.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0-5-标签显示模式"><a href="#0-5-标签显示模式" class="headerlink" title="0.5    标签显示模式"></a>0.5    标签显示模式</h2><h3 id="5-1-块级元素"><a href="#5-1-块级元素" class="headerlink" title="5.1    块级元素"></a>5.1    块级元素</h3><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>  <span class="tag">&lt;<span class="name">p</span>&gt;</span>  <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特点：</p><ol><li>总是从新行开始</li><li>高度，行高，外边距和内边距都是可以调节的</li><li>宽度默认与网页同宽</li><li>可以容纳内联元素和其他块元素</li><li><strong>注意：p 和 h1   标签中，不能放入块元素</strong></li></ol><h3 id="5-2-行内元素"><a href="#5-2-行内元素" class="headerlink" title="5.2    行内元素"></a>5.2    行内元素</h3><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>  <span class="tag">&lt;<span class="name">span</span>&gt;</span>  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>  <span class="tag">&lt;<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特点：</p><ol><li>和相邻行内元素在一行内</li><li>行内元素 只能容纳文本或其他行内元素</li></ol><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> /&gt;</span>   <span class="tag">&lt;<span class="name">input</span> /&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="显示模式转化"><a href="#显示模式转化" class="headerlink" title="显示模式转化"></a>显示模式转化</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示模式转化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#00ff00</span>;</span></span><br><span class="line">            display: inline;</span><br><span class="line">        &#125;</span><br><span class="line">        span &#123;</span><br><span class="line">            width: 25px;</span><br><span class="line">            height: 25px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>萌萌哒<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>再见<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>刘邦<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>刘禅<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CSS样式规格&quot;&gt;&lt;a href=&quot;#CSS样式规格&quot; class=&quot;headerlink&quot; title=&quot;CSS样式规格&quot;&gt;&lt;/a&gt;CSS样式规格&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;概念&lt;/strong&gt;： Cascading Style Sheets 层叠样式表&lt;
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>List-01_Linux基本使用</title>
    <link href="http://yoursite.com/2020/01/29/Linux/List-01_Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/01/29/Linux/List-01_Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2020-01-29T07:44:31.000Z</published>
    <updated>2021-03-02T06:05:47.105Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-linux下的文件"><a href="#01-linux下的文件" class="headerlink" title="01.linux下的文件"></a>01.linux下的文件</h2><h3 id="路径区别"><a href="#路径区别" class="headerlink" title="路径区别"></a>路径区别</h3><ol><li><p>Linux系统只有一个盘符</p></li><li><p>路径的写法：区别在于斜杠</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">MyWorld</span>\<span class="title">Softwares</span>//<span class="title">window</span>路径为：反斜杠</span></span><br><span class="line"><span class="function">/<span class="title">home</span>/<span class="title">MyWorld</span>/<span class="title">Softwares</span>//<span class="title">Linux</span>路径为： 正斜杠</span></span><br></pre></td></tr></table></figure></li><li><p>Linux系统中的文件没有扩展名，文件类型可以通过颜色区分，也可以通过命令file区分</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file 文件名称进行区分</span><br></pre></td></tr></table></figure></li></ol><h3 id="文件分类"><a href="#文件分类" class="headerlink" title="文件分类"></a>文件分类</h3><ul><li>普通文件</li><li>目录文件</li><li>设备文件  <ul><li>字符设备文件</li><li>块设备文件</li></ul></li><li>管道文件</li><li>链接文件</li></ul><h4 id="通过file命令来查看文件的类型"><a href="#通过file命令来查看文件的类型" class="headerlink" title="通过file命令来查看文件的类型"></a>通过file命令来查看文件的类型</h4><ul><li>如果file文件后面携带文件名，则查看指定文件的类型</li><li>如果携带通配符   *****    则可以查看当前目录下的所有文件的类型。</li></ul><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><table><thead><tr><th align="center">序号</th><th align="center">权限</th><th align="center">英文</th><th align="center">缩写</th><th align="center">数字代号</th></tr></thead><tbody><tr><td align="center">01</td><td align="center">读</td><td align="center">read</td><td align="center">r</td><td align="center">4</td></tr><tr><td align="center">02</td><td align="center">写</td><td align="center">write</td><td align="center">w</td><td align="center">2</td></tr><tr><td align="center">03</td><td align="center">执行</td><td align="center">excute</td><td align="center">x</td><td align="center">1</td></tr></tbody></table><p><strong>ls -l 扩展    :</strong></p><p><strong><code>ls -l</code> 可以查看文件夹下文件的详细信息，从左到右依次是：</strong></p><ul><li><strong>权限</strong>，第 1 个字符如果是 <code>d</code> 表示目录</li><li><strong>硬链接数</strong>，通俗地讲，就是有多少种方式，可以访问到当前目录／文件</li><li><strong>本用户的权限</strong></li><li><strong>用户组的权限</strong></li><li><strong>其他用户的权限</strong></li><li><strong>大小</strong></li><li><strong>时间</strong></li><li><strong>名称</strong></li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbu0jknltxj30ma08gmxt.jpg" alt=""></p><table><thead><tr><th align="left">字符</th><th>文件类型</th></tr></thead><tbody><tr><td align="left"><strong>d</strong></td><td>文件夹</td></tr><tr><td align="left"><strong>-</strong></td><td>普通文件</td></tr><tr><td align="left">c</td><td>硬件字符设备</td></tr><tr><td align="left">b</td><td>硬件块设备</td></tr><tr><td align="left">l</td><td>软连接文件</td></tr></tbody></table><h2 id="02-Linux-终端命令格式"><a href="#02-Linux-终端命令格式" class="headerlink" title="02.Linux 终端命令格式"></a>02.Linux 终端命令格式</h2><p><strong>command [-options] [parameter1] …</strong> </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">说明：</span><br><span class="line"></span><br><span class="line">command：命令名，相应功能的英文单词或单词的缩写</span><br><span class="line"></span><br><span class="line">[-options]：选项，可用来对命令进行控制，也可以省略，[]代表可选</span><br><span class="line"></span><br><span class="line">[parameter1] …：传给命令的参数，可以是零个一个或多个</span><br></pre></td></tr></table></figure><h3 id="查阅命令帮助信息"><a href="#查阅命令帮助信息" class="headerlink" title="查阅命令帮助信息"></a>查阅命令帮助信息</h3><p><strong>1) commend - - help</strong></p><ul><li><p>一般是 Linux 命令自带的帮助信息，并不是所有命令都自带这个选项。</p><p>例如：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --<span class="built_in">help</span>//查看命令 ls 的用法</span><br></pre></td></tr></table></figure></li></ul><p><strong>2) man</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man commend</span><br></pre></td></tr></table></figure><p>使用 <code>man</code> 时的操作键：</p><table><thead><tr><th align="left">操作键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">空格键</td><td align="left">显示手册页的下一屏</td></tr><tr><td align="left">Enter 键</td><td align="left">一次滚动手册页的一行</td></tr><tr><td align="left">b</td><td align="left">回滚一屏</td></tr><tr><td align="left">f</td><td align="left">前滚一屏</td></tr><tr><td align="left">q</td><td align="left">退出</td></tr><tr><td align="left">/word</td><td align="left">搜索 <strong>word</strong> 字符串</td></tr></tbody></table><h2 id="03-常用命令"><a href="#03-常用命令" class="headerlink" title="03.常用命令"></a>03.常用命令</h2><h4 id="查看目录内容"><a href="#查看目录内容" class="headerlink" title="查看目录内容"></a>查看目录内容</h4><p><strong>ls：查看文件</strong></p><table><thead><tr><th><strong>参数</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>-a</td><td>查看文件，包括隐藏文件</td></tr><tr><td>-l</td><td>以列表方式查看文件，不包括隐藏文件</td></tr><tr><td>-h</td><td>文件大小以  KB ， MB等计量单位显示出来</td></tr><tr><td>-all</td><td>以列表方式查看所有文件，包括隐藏文件</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -all    等同于   ll</span><br><span class="line">ls -lh详细显示文件信息</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>通配符</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>*</td><td>文件代表文件名中所有字符</td></tr><tr><td>ls ch*</td><td>查找以ch开头的文件</td></tr><tr><td>ls *an</td><td>查找以an结尾的文件</td></tr><tr><td>？</td><td>代表文件名中任意一个字符</td></tr><tr><td>ls ?.c</td><td>只找第一个字符任意，后缀为.c的文件</td></tr><tr><td>ls a.?</td><td>只找只有3个字符，前2字符为a.，最后一个字符任意的文件</td></tr><tr><td>ls  [abc]</td><td>abc之间穷举法</td></tr><tr><td>ls  [a-f]</td><td>a到f  之间 穷举法</td></tr><tr><td>ls [a-f]*</td><td>找到从a到f范围内的的任意一个字符开头的文件</td></tr><tr><td>ls a-f</td><td>查找文件名为a-f的文件,当“-”处于方括号之外失去通配符的作用</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\若文件名以  *或？ 开头，使用 \*ch</span><br></pre></td></tr></table></figure><h4 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h4><p><strong>cd：切换工作目录</strong></p><table><thead><tr><th>命令</th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><strong>cd</strong></td><td>切换到当前用户的主目录，用户登陆的时候，<strong>默认的目录就是用户的主目录</strong>。</td></tr><tr><td><strong>cd ~</strong></td><td><strong>切换到当前用户的主目录</strong>(/home/用户目录)</td></tr><tr><td>cd .</td><td>切换到当前目录</td></tr><tr><td><strong>cd ..</strong></td><td>切换到上级目录</td></tr></tbody></table><p><strong>注意：</strong></p><ul><li><p><strong>Linux 所有的 目录 和 文件名 都是大小写敏感的</strong></p></li><li><p>如果路径是从根路径开始的，则路径的前面需要加上 “ / ”，如 “ /mnt ”</p></li><li><p>通常<strong>进入某个目录里的文件夹，前面不用加 “ / ”。</strong></p></li></ul><h4 id="创建和删除操作"><a href="#创建和删除操作" class="headerlink" title="创建和删除操作"></a>创建和删除操作</h4><p><strong>touch :  创建文件或修改文件时间</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch a.txt</span><br></pre></td></tr></table></figure><ul><li>如果文件 <strong>不存在</strong>，可以创建一个空白文件</li><li>如果文件 <strong>已经存在</strong>，可以修改文件的末次修改日期</li></ul><p><strong>mkdir        创建目录</strong></p><ul><li>参数  <strong>- p 可递归创建目录</strong></li><li>需要注意的是新建目录的名称不能与当前目录中已有的目录或文件同名，</li><li>并且目录创建者必须对当前目录具有写权限。</li><li><strong>新建目录的名称</strong> 不能与当前目录中 <strong>已有的目录或文件</strong> 同名</li></ul><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv2jnbruxj30l70b2mxx.jpg" style="zoom:80%;" /><p><strong>rmdir</strong></p><p>可使用rmdir命令删除一个目录。必须离开目录，并且目录必须为空目录，不然提示删除失败。</p><p><strong>rm [文件名]  ：删除指定的文件名</strong></p><blockquote><p><strong><em>使用 <code>rm</code> 命令要小心，因为文件删除后不能恢复</em></strong></p></blockquote><table><thead><tr><th><strong>参数</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><strong>-i</strong></td><td>删一个文件，电脑询问你一次</td></tr><tr><td><strong>-f</strong></td><td>强制删除，忽略不存在的文件，无需提示，<strong>很少使用</strong></td></tr><tr><td><strong>-r</strong></td><td><strong>递归地</strong>删除目录下的内容，删除文件夹时必须加此参数，<strong>经常使用</strong></td></tr></tbody></table> <img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv2nodb83j30ma08j753.jpg" alt="img"  /><h4 id="拷贝和移动文件"><a href="#拷贝和移动文件" class="headerlink" title="拷贝和移动文件"></a>拷贝和移动文件</h4><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">对应英文</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">tree [目录名]</td><td align="left">tree</td><td align="left">以树状图列出文件目录结构</td></tr><tr><td align="left">02</td><td align="left">cp 源文件 目标文件</td><td align="left">copy</td><td align="left">复制文件或者目录</td></tr><tr><td align="left">03</td><td align="left">mv 源文件 目标文件</td><td align="left">move</td><td align="left">移动文件或者目录／文件或者目录重命名</td></tr></tbody></table><p><strong>cp：拷贝</strong></p><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-i</td><td align="left">覆盖文件前提示</td></tr><tr><td align="left">-r</td><td align="left">若给出的源文件是目录文件，则 cp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp a.txt b.txt</span><br><span class="line">cp a c -p</span><br></pre></td></tr></table></figure><p><strong>tree：</strong></p><ul><li><code>tree</code> 命令可以以树状图列出文件目录结构</li></ul><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-d</td><td align="left">只显示目录</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tree</span> </span><br><span class="line"><span class="built_in">tree</span> -d</span><br></pre></td></tr></table></figure><p><strong>mv：</strong></p><p><code>mv</code> 命令可以用来 <strong>移动</strong> <strong>文件</strong> 或 <strong>目录</strong>，也可以给 <strong>文件或目录重命名</strong></p><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-i</td><td align="left">覆盖文件前提示</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mv c.txt ../oneday</span><br><span class="line">mv A.txt oneday</span><br><span class="line">mv twoday ~/Test/oneday</span><br><span class="line"></span><br><span class="line">mv demo.txt abc.txt -i//给文件重命名时，最好加上 -i</span><br><span class="line">mv a demo -i</span><br></pre></td></tr></table></figure><h4 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h4><table><thead><tr><th align="left">号</th><th align="left">命令</th><th align="left">对应英文</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">cat 文件名</td><td align="left">concatenate</td><td align="left">查看文件内容、创建文件、文件合并、追加文件内容等功能</td></tr><tr><td align="left">02</td><td align="left">more 文件名</td><td align="left">more</td><td align="left">分屏显示文件内容</td></tr><tr><td align="left">03</td><td align="left">grep 搜索文本 文件名</td><td align="left">grep</td><td align="left">搜索文本文件内容</td></tr></tbody></table><p><strong>cat：查看或合并文件内容</strong></p><ul><li><code>cat</code> 命令可以用来 <strong>查看文件内容</strong>、<strong>创建文件</strong>、<strong>文件合并</strong>、<strong>追加文件内容</strong> 等功能</li><li><code>cat</code> 会一次显示所有的内容，适合 <strong>查看内容较少</strong> 的文本文件</li></ul><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-b</td><td align="left">对非空输出行编号</td></tr><tr><td align="left">-n</td><td align="left">对输出的所有行编号</td></tr></tbody></table><blockquote><p>Linux 中还有一个 <code>nl</code> 的命令和 <code>cat -b</code> 的效果等价</p></blockquote><ul><li><p>可以同时查看多个文件</p></li><li><pre><code>cat a.txt b.txt<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 将多个文件合并</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>cat a.txt c.txt &gt; d.txt<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**more：分屏显示**</span><br><span class="line"></span><br><span class="line">- &#96;more&#96; 命令可以用于分屏显示文件内容，每次只显示一页内容</span><br><span class="line">- 适合于 **查看内容较多**的文本文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![](http:&#x2F;&#x2F;ww1.sinaimg.cn&#x2F;large&#x2F;0065EZzEly1gbv211iu37j30gv09jt9k.jpg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">| 操作键   | 功能                 |</span><br><span class="line">| :------- | :------------------- |</span><br><span class="line">| 空格键   | 显示手册页的下一屏   |</span><br><span class="line">| Enter 键 | 一次滚动手册页的一行 |</span><br><span class="line">| b        | 回滚一屏             |</span><br><span class="line">| f        | 前滚一屏             |</span><br><span class="line">| q        | 退出                 |</span><br><span class="line">| &#x2F;word    | 搜索 **word** 字符串 |</span><br><span class="line"></span><br><span class="line">**grep：文本搜索**</span><br><span class="line"></span><br><span class="line">| 选项 | 含义                                     |</span><br><span class="line">| :--- | :--------------------------------------- |</span><br><span class="line">| -n   | 显示匹配行及行号                         |</span><br><span class="line">| -v   | 显示不包含匹配文本的所有行（相当于求反） |</span><br><span class="line">| -i   | 忽略大小写                               |</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;cmd</span><br><span class="line">grep -n hello a.txt</span><br><span class="line">grep -i Hello a.txt</span><br><span class="line">grep -vn hello a.txt&#x2F;&#x2F;显示每一行的行号</span><br><span class="line">grep -vn &quot;hello python&quot; a.txt</span><br></pre></td></tr></table></figure></code></pre></li><li><p><strong>常用的两种模式查找</strong></p></li></ul><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">^a</td><td align="left">行首，搜寻以 <strong>a</strong> 开头的行</td></tr><tr><td align="left">ke$</td><td align="left">行尾，搜寻以 <strong>ke</strong> 结束的行</td></tr></tbody></table><table><thead><tr><th><strong>参数</strong></th><th align="center"><strong>含义</strong></th></tr></thead><tbody><tr><td>[Ss]igna[Ll]</td><td align="center">[ ] 中的内容，符合条件都显示出来</td></tr><tr><td><strong>.</strong></td><td align="center">代表任意字符</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep -n ^h a.txt</span><br><span class="line">grep -n ke$ a.txt</span><br><span class="line">grep -n *d  a.txt</span><br><span class="line">grep -n r..r a.txt</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p><strong>echo 文字内容</strong></p><ul><li><code>echo</code> 会在终端中显示参数指定的文字，通常会和 <strong>重定向</strong> 联合使用</li></ul><p><strong>重定向 <code>&gt;</code> 和 <code>&gt;&gt;</code></strong></p><ul><li>Linux 允许将命令执行结果 <strong>重定向</strong>到一个 <strong>文件</strong></li><li>将本应显示在<strong>终端上的内容</strong> <strong>输出／追加</strong> 到<strong>指定文件中</strong></li></ul><p>其中</p><ul><li><code>&gt;</code> 表示输出，会覆盖文件原有的内容</li><li><code>&gt;&gt;</code> 表示追加，会将内容追加到已有文件的末尾</li></ul><p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv1r3ac4mj30ma0a90td.jpg" alt=""></p><p><strong>管道 <code>|</code></strong></p><ul><li>Linux 允许将 <strong>一个命令的输出</strong> 可以<strong>通过管道</strong> 做为 <strong>另一个命令的输入</strong></li><li>可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里 <code>|</code> 的左右分为两端，左端塞东西（写），右端取东西（读）</li></ul><p>常用的管道命令有：</p><ul><li><code>more</code>：分屏显示内容</li><li><code>grep</code>：在命令执行结果的基础上查询指定的文本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -lha ~ | more</span><br><span class="line">ls -lha ~ | grep hello</span><br></pre></td></tr></table></figure><p><strong>wc：计算文件行数或字数</strong></p><p>常用选项说明：</p><table><thead><tr><th><strong>选项</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>-l</td><td>统计行数</td></tr><tr><td>-w</td><td>统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串。</td></tr><tr><td>-c</td><td>统计字节数</td></tr><tr><td>-m</td><td>统计字符数。这个标志不能与 -c 标志一起使用。</td></tr></tbody></table><ul><li>一般直接这样使用</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc a.txt</span><br></pre></td></tr></table></figure><h3 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">tab 智能补全，如果输入的前缀是独属一个文件夹或命令，则自动补全；</span><br><span class="line">两下tab显示出带有此前缀的所有项</span><br><span class="line"></span><br><span class="line">↑ ↓查看历史记录，关闭后存在；但在两个不同终端窗口中，不能使用</span><br><span class="line">Ctrl + PCtrl + N </span><br><span class="line"></span><br><span class="line">clearCtrl + L清屏</span><br><span class="line">pwd显示当前路径</span><br><span class="line"></span><br><span class="line">Ctrl + A将光标移到行首</span><br><span class="line">Ctrl + E 将光标移到行尾</span><br><span class="line"></span><br><span class="line">Ctrl + C强制退出某个命令进程</span><br><span class="line"></span><br><span class="line">Ctrl + U删除光标前的字符</span><br><span class="line">Ctrl + K删除光标后的字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">history查看全部历史命令</span><br></pre></td></tr></table></figure><h2 id="04-远程管理常用命令"><a href="#04-远程管理常用命令" class="headerlink" title="04.远程管理常用命令"></a>04.远程管理常用命令</h2><p><strong>shutdown 关机/重启</strong></p><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">对应英文</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">shutdown 选项 时间</td><td align="left">shutdown</td><td align="left">关机／重新启动</td></tr></tbody></table><ul><li><code>shutdown</code> 命令可以 <strong>安全</strong> <strong>关闭</strong> 或者 <strong>重新启动系统</strong></li></ul><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-r</td><td align="left">重新启动</td></tr></tbody></table><blockquote><p>提示：</p><ul><li><strong>不指定选项和参数</strong>，默认表示 <strong>1 分钟</strong>之后 <strong>关闭电脑</strong></li><li>远程维护服务器时，最好不要关闭系统，而应该重新启动系统</li></ul></blockquote><ul><li>常用命令示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新启动操作系统，其中 now 表示现在</span></span><br><span class="line">$ shutdown -r now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立刻关机，其中 now 表示现在</span></span><br><span class="line">$ shutdown now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统在今天的 20:25 会关机</span></span><br><span class="line">$ shutdown 20:25</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统再过十分钟后自动关机</span></span><br><span class="line">$ shutdown +10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消之前指定的关机计划</span></span><br><span class="line">$ shutdown -c</span><br></pre></td></tr></table></figure><h4 id="查看或配置网卡信息"><a href="#查看或配置网卡信息" class="headerlink" title="查看或配置网卡信息"></a>查看或配置网卡信息</h4><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">对应英文</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">ifconfig</td><td align="left">configure a network interface</td><td align="left">查看/配置计算机当前的网卡配置信息</td></tr><tr><td align="left">02</td><td align="left">ping ip地址</td><td align="left">ping</td><td align="left">检测到目标 ip地址 的连接是否正常</td></tr></tbody></table><p><strong>网卡 和 IP 地址</strong></p><p><strong>网卡</strong></p><ul><li>网卡是一个专门负责网络通讯的硬件设备</li><li><strong>IP 地址</strong>是设置在网卡上的地址信息</li></ul><blockquote><p>我们可以把 <strong>电脑</strong> 比作 <strong>电话</strong>，<strong>网卡</strong> 相当于 <strong>SIM 卡</strong>，<strong>IP 地址</strong> 相当于 <strong>电话号码</strong></p></blockquote><p><strong>IP 地址</strong></p><ul><li><strong>每台联网的电脑上</strong>都有 <strong>IP 地址</strong>，<strong>是保证电脑之间正常通讯的重要设置</strong></li></ul><blockquote><p>注意：每台电脑的 IP 地址不能相同，否则会出现 IP 地址冲突，并且没有办法正常通讯</p></blockquote><p><strong>ifconfig</strong></p><ul><li><code>ifconfig</code> 可以查看／配置计算机当前的网卡配置信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看网卡配置信息</span></span><br><span class="line">$ ifconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网卡对应的 IP 地址</span></span><br><span class="line">$ ifconfig | grep inet</span><br></pre></td></tr></table></figure><blockquote><p>提示：一台计算机中有可能会有一个 <strong>物理网卡</strong> 和 <strong>多个虚拟网卡</strong>，在 Linux 中物理网卡的名字通常以 <code>ensXX</code> 表示</p></blockquote><ul><li><code>127.0.0.1</code> 被称为 <strong>本地回环/环回地址</strong>，一般用来测试本机网卡是否正常</li></ul><p> <strong>ping</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测到目标主机是否连接正常</span></span><br><span class="line">$ ping IP地址</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测本地网卡工作正常</span></span><br><span class="line">$ ping 127.0.0.1</span><br></pre></td></tr></table></figure><ul><li><code>ping</code> 一般用于检测当前计算机到目标计算机之间的网络 <strong>是否通畅</strong>，<strong>数值越大，速度越慢</strong></li></ul><blockquote><ul><li><code>ping</code> 的工作原理与潜水艇的声纳相似，<code>ping</code> 这个命令就是取自 <strong>声纳的声音</strong></li><li>网络管理员之间也常将 <code>ping</code> 用作动词 —— <strong>ping 一下计算机X，看他是否开着</strong></li></ul></blockquote><p>原理：网络上的机器都有 <strong>唯一确定的 IP 地址</strong>，我们给<strong>目标 IP 地址</strong>发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在</p><blockquote><p>提示：在 Linux 中，想要终止一个终端程序的执行，绝大多数都可以使用 <code>CTRL + C</code></p></blockquote><h4 id="查看ip地址"><a href="#查看ip地址" class="headerlink" title="查看ip地址"></a>查看ip地址</h4><ol><li><p>站长工具</p></li><li><pre><code>ping www.baidu.com<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3.</span><br></pre></td></tr></table></figure>nslookup www.baidu.com<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. &#96;&#96;&#96;cmd</span><br><span class="line">   nmap www.baidu.com&#x2F;&#x2F;linux 下的操作</span><br></pre></td></tr></table></figure></code></pre></li></ol><h3 id="远程登录和复制文件"><a href="#远程登录和复制文件" class="headerlink" title="远程登录和复制文件"></a>远程登录和复制文件</h3><table><thead><tr><th align="left">序号</th><th align="left">命令</th><th align="left">对应英文</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">ssh 用户名@ip</td><td align="left">secure shell</td><td align="left">关机／重新启动</td></tr><tr><td align="left">02</td><td align="left">scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径</td><td align="left">secure copy</td><td align="left">远程复制文件</td></tr></tbody></table><h4 id="1-ssh-基础（重点）"><a href="#1-ssh-基础（重点）" class="headerlink" title="1.ssh 基础（重点）"></a>1.<code>ssh</code> 基础（重点）</h4><p>在 Linux 中 SSH 是 <strong>非常常用</strong> 的工具，通过 <strong>SSH 客户端</strong> 我们可以连接到运行了 <strong>SSH 服务器</strong> 的远程机器上</p><ul><li><strong>SSH 客户端</strong>是一种使用 <code>Secure Shell（SSH）</code> 协议连接到远程计算机的软件程序</li><li><strong>SSH</strong>  是目前较可靠<strong>专为远程登录会话和其他网络服务</strong>提供安全性的协议<ul><li>利用 <code>SSH 协议</code> 可以有效<strong>防止远程管理过程中的信息泄露</strong></li><li>通过 <code>SSH 协议</code> 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗</li></ul></li><li><code>SSH</code> 的另一项优点是传输的数据可以是经过压缩的，所以可以加快传输的速度</li></ul><p><strong>域名 和 端口号</strong></p><p><strong>域名</strong></p><ul><li>由一串 <strong>用点分隔</strong> 的名字组成，例如：<code>www.itcast.cn</code></li><li>是 <strong>IP 地址</strong> 的别名，方便用户记忆</li></ul><p><strong>端口号</strong></p><ul><li><strong>IP 地址</strong>：通过 <strong>IP 地址</strong> 找到网络上的 <strong>计算机</strong></li><li><strong>端口号</strong>：通过 <strong>端口号</strong> 可以找到 <strong>计算机上运行的应用程序</strong><ul><li><strong>SSH 服务器</strong> 的默认端口号是 <code>22</code>，如果是默认端口号，在连接的时候，可以省略</li></ul></li><li>常见服务端口号列表：</li></ul><table><thead><tr><th align="left">序号</th><th align="left">服务</th><th align="left">端口号</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">SSH 服务器</td><td align="left">22</td></tr><tr><td align="left">02</td><td align="left">Web 服务器</td><td align="left">80</td></tr><tr><td align="left">03</td><td align="left">HTTPS</td><td align="left">443</td></tr><tr><td align="left">04</td><td align="left">FTP 服务器</td><td align="left">21</td></tr></tbody></table><p><strong>SSH 客户端的简单使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br></pre></td></tr></table></figure><ul><li><code>user</code> 是在远程机器上的用户名，如果不指定的话默认为当前用户</li><li><code>remote</code> 是远程机器的地址，可以是 <strong>IP</strong>／<strong>域名</strong>，或者是 <strong>后面会提到的别名</strong></li><li><code>port</code> 是 <strong>SSH Server 监听的端口</strong>，如果不指定，就为默认值 <code>22</code></li></ul><h4 id="2-scp（掌握）"><a href="#2-scp（掌握）" class="headerlink" title="2.scp（掌握）"></a>2.<code>scp</code>（掌握）</h4><ul><li>scp 就是 <code>secure copy</code>，是一个在 Linux 下用来进行 <strong>远程拷贝文件</strong> 的命令</li><li>它的<strong>地址格式与 ssh 基本相同</strong>，<strong>需要注意的是</strong>，在指定端口时用的是大写的 <code>-P</code> 而不是小写的</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把本地当前目录下的 01.py 文件 复制到 远程 家目录下的 Desktop/01.py</span></span><br><span class="line"><span class="comment"># 注意：`:` 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径</span></span><br><span class="line">scp -P port 01.py user@remote:Desktop/01.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把远程 家目录下的 Desktop/01.py 文件 复制到 本地当前目录下的 01.py</span></span><br><span class="line">scp -P port user@remote:Desktop/01.py 01.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上 -r 选项可以传送文件夹</span></span><br><span class="line"><span class="comment"># 把当前目录下的 demo 文件夹 复制到 远程 家目录下的 Desktop</span></span><br><span class="line">scp -r demo user@remote:Desktop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹</span></span><br><span class="line">scp -r user@remote:Desktop demo</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">选项</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-r</td><td align="left">若给出的源文件是目录文件，则 scp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td></tr><tr><td align="left">-P</td><td align="left">若远程 SSH 服务器的端口不是 22，需要使用大写字母 -P 选项指定端口</td></tr></tbody></table><h5 id="FileZilla"><a href="#FileZilla" class="headerlink" title="FileZilla"></a><code>FileZilla</code></h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileZilla 在传输文件时，使用的是 FTP 服务 而不是 SSH 服务，因此端口号应该设置为 <span class="number">21</span></span><br></pre></td></tr></table></figure><h4 id="3-SSH-高级（知道）"><a href="#3-SSH-高级（知道）" class="headerlink" title="3 SSH 高级（知道）"></a>3 SSH 高级（知道）</h4><ul><li>免密码登录</li><li>配置别名</li></ul><blockquote><p>提示：有关 SSH 配置信息都保存在用户家目录下的 <code>.ssh</code> 目录下</p></blockquote><h5 id="1）免密码登录"><a href="#1）免密码登录" class="headerlink" title="1）免密码登录"></a>1）免密码登录</h5><p><strong>步骤</strong></p><ul><li>配置公钥<ul><li>执行 <code>ssh-keygen</code> 即可生成 SSH 钥匙，一路回车即可</li></ul></li><li>上传公钥到服务器<ul><li>执行 <code>ssh-copy-id -p port user@remote</code>，可以让远程服务器记住我们的公钥</li></ul></li></ul><blockquote><p>非对称加密算法</p><ul><li>使用 <strong>公钥</strong> 加密的数据，需要使用 <strong>私钥</strong> 解密</li><li>使用 <strong>私钥</strong> 加密的数据，需要使用 <strong>公钥</strong> 解密</li></ul></blockquote><h5 id="2-配置别名"><a href="#2-配置别名" class="headerlink" title="2) 配置别名"></a>2) 配置别名</h5><p>每次都输入 <code>ssh -p port user@remote</code>，时间久了会觉得很麻烦，特别是当 <code>user</code>, <code>remote</code> 和 <code>port</code> 都得输入，而且还不好记忆</p><p>而 <strong>配置别名</strong> 可以让我们进一步偷懒，譬如用：<code>ssh mac</code> 来替代上面这么一长串，那么就在 <code>~/.ssh/config</code> 里面追加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host mac</span><br><span class="line">    HostName ip地址</span><br><span class="line">    User itheima</span><br><span class="line">    Port 22</span><br></pre></td></tr></table></figure><p><strong>保存之后，即可用 <code>ssh mac</code> 实现远程登录了，<code>scp</code> 同样可以使用</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-linux下的文件&quot;&gt;&lt;a href=&quot;#01-linux下的文件&quot; class=&quot;headerlink&quot; title=&quot;01.linux下的文件&quot;&gt;&lt;/a&gt;01.linux下的文件&lt;/h2&gt;&lt;h3 id=&quot;路径区别&quot;&gt;&lt;a href=&quot;#路径区别&quot; cla
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo基本使用</title>
    <link href="http://yoursite.com/2020/01/26/Others/Hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/01/26/Others/Hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2020-01-26T03:45:03.000Z</published>
    <updated>2021-01-14T08:27:36.205Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-hexo-next主题-基本使用"><a href="#01-hexo-next主题-基本使用" class="headerlink" title="01.hexo(next主题)基本使用"></a>01.hexo(next主题)基本使用</h2><h4 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章名称</span><br></pre></td></tr></table></figure><h4 id="新文章名称"><a href="#新文章名称" class="headerlink" title="新文章名称"></a>新文章名称</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: best student&#x2F;&#x2F;名称中有空格 ，错误</span><br><span class="line">title: best-student &#x2F;&#x2F;正确</span><br></pre></td></tr></table></figure><h4 id="使用FwoSome-图标"><a href="#使用FwoSome-图标" class="headerlink" title="使用FwoSome 图标"></a>使用FwoSome 图标</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">home: &#x2F;home&#x2F;|| home&#x2F;&#x2F;正确</span><br><span class="line">home: &#x2F;home&#x2F; || home&#x2F;&#x2F;多了个空格，错误</span><br></pre></td></tr></table></figure><h4 id="网站的数据更新"><a href="#网站的数据更新" class="headerlink" title="网站的数据更新"></a>网站的数据更新</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean&#x2F;&#x2F;清楚网站的缓存</span><br><span class="line">hexo g&#x2F;&#x2F;更新网站数据</span><br><span class="line">hexo s&#x2F;&#x2F;启动网站</span><br><span class="line">hexo d&#x2F;&#x2F;同步数据到GitHub</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-hexo-next主题-基本使用&quot;&gt;&lt;a href=&quot;#01-hexo-next主题-基本使用&quot; class=&quot;headerlink&quot; title=&quot;01.hexo(next主题)基本使用&quot;&gt;&lt;/a&gt;01.hexo(next主题)基本使用&lt;/h2&gt;&lt;h4 i
      
    
    </summary>
    
    
    
      <category term="cource" scheme="http://yoursite.com/tags/cource/"/>
    
  </entry>
  
  <entry>
    <title>hexo+GitHub搭建自己的博客</title>
    <link href="http://yoursite.com/2020/01/19/Others/hexo-GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/01/19/Others/hexo-GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-01-19T12:54:25.000Z</published>
    <updated>2021-01-11T13:27:40.379Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。</p><h2 id="1-1-安装-hexo"><a href="#1-1-安装-hexo" class="headerlink" title="1.1    安装  hexo"></a>1.1    安装  hexo</h2><h4 id="安装前提（安装环境的搭建）"><a href="#安装前提（安装环境的搭建）" class="headerlink" title="安装前提（安装环境的搭建）"></a>安装前提（安装环境的搭建）</h4><p>先下载安装上<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>,</p><p>再下载安装上<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>, </p><p> 安装路径没有要求。</p><h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><p>在开始菜单找到 git bash, 然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><h2 id="1-2-创建网站"><a href="#1-2-创建网站" class="headerlink" title="1.2    创建网站"></a>1.2    创建网站</h2><p>下一步，自己找个  放网站文件的（网站文件会生成一个文件夹，文件夹的名称，你自己定） 路径，</p><p>然后 点击鼠标右键，打开git bash</p><p><img src="https://i.loli.net/2020/01/19/wlUN71oWuI9TbKf.png" alt="img"></p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 文件夹名</span><br></pre></td></tr></table></figure><p>ok , 网站创好了，你会看到在 你选择的路径中  会多了那个文件夹</p><h4 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h4><p>输入（在git bash中）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>然后再，</p><p>找到  <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>    选中，鼠标 右键   打开 （open），</p><p>看看 你的网站 ，再回到  git bash  ,   按下 Ctrl+C   ，关闭网站</p><p>然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="1-3-连上GitHub"><a href="#1-3-连上GitHub" class="headerlink" title="1.3    连上GitHub"></a>1.3    连上GitHub</h2><h4 id="先这样做"><a href="#先这样做" class="headerlink" title="先这样做"></a>先这样做</h4><p><strong>1.首先，不用多说，得先有一个GitHub账号吧：</strong></p><p><img src="https://pic3.zhimg.com/80/v2-be8a3a6ad036c32b51caa3d78af4f146_hd.jpg" alt="img"></p><p>填好自己得个人信息（用户名好像不能用汉字）：</p><p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gdkegelk9sj30k0094wem.jpg" alt="2222222222.jpg"></p><p>然后点击Create an account.</p><p><img src="https://pic2.zhimg.com/80/v2-7872012db459db8c8bab2793f7f79101_hd.jpg" alt="img"></p><p>这里选择免费的啦，然后Continue</p><p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gdkehe13euj30k008zglr.jpg" alt="33333.jpg"></p><p>这里选择自己的一些基本情况，然后submit。</p><p><img src="https://pic4.zhimg.com/80/v2-bb9610cdfb32da5e5d029356666ac8b3_hd.jpg" alt="44444.jpg"></p><p>最后来到这个界面就对了，点击右上角那个加号旁边那里，可以来到这个页面。</p><p><strong>2.开始搭建博客：</strong></p><p>首先，我们需要新建一个Repositories,Repositories就相当于一个库，存放我们的项目文件。</p><p><img src="https://pic4.zhimg.com/80/v2-bb9610cdfb32da5e5d029356666ac8b3_hd.jpg" alt="img"></p><p>然后给自己的Repositories取一个名字，注意：名称格式最好为：<a href="https://link.zhihu.com/?target=http%3A//xn--eqr924avxo.github.io/">用户名.github.io</a></p><p>因为我搭建过，所以会提示错误。</p><p><img src="https://pic2.zhimg.com/80/v2-ae40c07cde4cfe27b93c902850160891_hd.jpg" alt="img"></p><p>然后点击create repositories.</p><p>随后跳转到该库界面,由于我是搭建好的，所以会有项目文件，然后选择Settings</p><p><img src="https://pic4.zhimg.com/80/v2-3d639cfbaff027254b6e899a1642644b_hd.jpg" alt="img"></p><p>进入settings后，往下拉，找到GitHub pages设置界面</p><p><img src="https://pic1.zhimg.com/80/v2-90469a0aba1ab48ac8ddb7d9f39c1230_hd.jpg" alt="img"></p><p>按如图所示选择，注意，选择source之后记得Save，然后点击Choose a theme选择一个博客主题。</p><p><img src="https://pic2.zhimg.com/80/v2-be796f462202406cb2cd42fd511d6a85_hd.jpg" alt="img"></p><p>然后点击Select theme</p><p>到这一步呢，正常来说你就可以看到自己的博客了。在地址栏输入：用户名.<a href="https://link.zhihu.com/?target=http%3A//github.io">http://github.io</a>你就可以访问页面了。</p><h4 id="然后这样做"><a href="#然后这样做" class="headerlink" title="然后这样做"></a>然后这样做</h4><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>两个英文下的  引号  别丢了</p><p>然后  会出来  一些东西</p><p>你就   按下    三个  Enter  就行     然后  ，你会看到生成  了一个特殊 图案</p><h4 id="下一步-1"><a href="#下一步-1" class="headerlink" title="下一步"></a>下一步</h4><h5 id="进入GitHub首页"><a href="#进入GitHub首页" class="headerlink" title="进入GitHub首页"></a>进入GitHub首页</h5><p><img src="https://img-blog.csdnimg.cn/20190512110701804.png" alt="img">)<img src="https://img-blog.csdnimg.cn/201905121108238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpbnRvbjE=,size_16,color_FFFFFF,t_70" alt="img"></p><h5 id="点击New-SSHKey"><a href="#点击New-SSHKey" class="headerlink" title="点击New SSHKey"></a>点击New SSHKey</h5><p>​    然后找到当前用户目录下C:\Users\用户名\ .ssh id_rsa.pub文件以文本方式打开。打开之后全部复制到key中</p><p><img src="https://img-blog.csdnimg.cn/20190512111036837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpbnRvbjE=,size_16,color_FFFFFF,t_70" alt="img"></p><p>然后 回到 gitbash   输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>再输入个 yes     ，</p><p> 如果提示：You’ve successfully authenticated, but GitHub does not provide shell access. 说明你连接成功了</p><h4 id="最后一步，设置用户信息："><a href="#最后一步，设置用户信息：" class="headerlink" title="最后一步，设置用户信息："></a>最后一步，设置用户信息：</h4><p>编辑 你创的文件夹 下一层的    _config.yml文件</p><p><strong>到文件的最后</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;你的GitHub 的username（昵称）&#x2F;你的GitHub 的username（昵称）.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后</p><p>找到你命名的 文件下  一层，鼠标右键gitbash，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.你的GitHub 的username（昵称） </span><br><span class="line">git config --global user.你的github注册邮箱</span><br></pre></td></tr></table></figure><p>细心检查，可以 再输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.你的GitHub 的username（昵称） </span><br><span class="line">git config user.你的github注册邮箱</span><br></pre></td></tr></table></figure><p>看看    输入对了否</p><p>然后输入  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>过一小会 ， 输入  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你的GitHub 的username（昵称）.github.io</span><br></pre></td></tr></table></figure><p>看看你的网站    ，你的网站  成了，  以后用它登陆就可以了</p><h2 id="1-4-换个主题"><a href="#1-4-换个主题" class="headerlink" title="1.4    换个主题"></a>1.4    换个主题</h2><p>找到你命名的 文件下  一层，鼠标右键gitbash，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>当 下载 完成后，打开 <strong>站点配置文件</strong>（就是  你创的文件夹 下一层的    _config.yml文件）， </p><p>找到 <code>theme</code> 字段，（可以使用 Ctrl+F，开启查找的一个东西）</p><p>再这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>下一步</p><p>找到你命名的 文件下  一层 的，theme 文件夹     ，进入  next 文件夹 ，   打开  _config.yml文件（<strong>主题配置文件</strong>）</p><p>找到 <strong>scheme</strong>字段，（可以使用 Ctrl+F，开启查找的一个东西）</p><p>改成这样</p><p><img src="https://i.loli.net/2020/01/19/sz59fHXuRkCYWej.png" alt="img"></p><p>重新生成，访问页面</p><p>（    找到你命名的 文件下  一层，鼠标右键git bash，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>再看看你的网站   ）</p><h2 id="1-5-加个评论系统"><a href="#1-5-加个评论系统" class="headerlink" title="1.5    加个评论系统"></a>1.5    加个评论系统</h2><ol><li><p>在<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>的官网上注册账号。</p></li><li><p>在<a href="https://livere.com/insight/myCode" target="_blank" rel="noopener">此处</a>获取data-uid。</p></li></ol><ol start="3"><li><p>打开主题的配置文件<code>—config</code>，</p></li><li><p>搜索livere_uid，将livere_uid前面的#号去掉，然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">livere_uid: 你的uid</span><br></pre></td></tr></table></figure></li><li><p>找到你命名的 文件下  一层，鼠标右键git bash，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>再看看你的网站</p></li></ol><h2 id="1-6-加个统计"><a href="#1-6-加个统计" class="headerlink" title="1.6    加个统计"></a>1.6    加个统计</h2><p>打开主题配置文件，</p><p>找到   <strong>busuanzi_count</strong>，</p><p>改成这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header:  本站访客数 &lt;i class&#x3D;&quot;fa fa-user&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  site_uv_footer: 人次</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header:  本站总访问量 &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: 本文总阅读量 &lt;i class&#x3D;&quot;fa fa-file-o&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  page_pv_footer: 次</span><br></pre></td></tr></table></figure><p>然后</p><p>找到我们在用的<code>next</code>主题文件夹，然后在<code>layout_third-partyanalytics</code>下找到<code>busuanzi-counter.swig</code>文件        ，在该文件下找到如下语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src&#x3D;&quot;https:&#x2F;&#x2F;dn-lbstatics.qbox.me&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>将这句话更改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>然后   </p><p>重新生成，访问页面。</p><h2 id="1-7加个音乐播放器"><a href="#1-7加个音乐播放器" class="headerlink" title="1.7加个音乐播放器"></a>1.7加个音乐播放器</h2><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>点击访问Aplayer源码：<a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">GitHub Aplayer</a>。下载到本地，解压后将<code>dist</code>文件夹复制到<code>themes\next\source</code>文件夹下。</p><h4 id="2，music-js"><a href="#2，music-js" class="headerlink" title="2，music.js"></a>2，music.js</h4><p>新建<code>themes\next\source\dist\music.js</code>文件，添加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">const ap &#x3D; new APlayer(&#123;</span><br><span class="line">    container: document.getElementById(&#39;aplayer&#39;),</span><br><span class="line">    fixed: true,</span><br><span class="line">    autoplay: false,</span><br><span class="line">    audio: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;麻雀&quot;,</span><br><span class="line">        artist: &#39;李荣浩&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;1407551413.mp3&#39;,</span><br><span class="line">        cover: &#39;https:&#x2F;&#x2F;p2.music.126.net&#x2F;TzlSVBiNtpRD2b7MT2Hi-w&#x3D;&#x3D;&#x2F;109951164527590793.jpg?param&#x3D;300x300&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;下山&#39;,</span><br><span class="line">        artist: &#39;要不要买菜&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;1404885266.mp3&#39;,</span><br><span class="line">        cover: &#39;https:&#x2F;&#x2F;p1.music.126.net&#x2F;Aj4X1kpV-C2LLi-e_Xhgvg&#x3D;&#x3D;&#x2F;109951164499744148.jpg?param&#x3D;300x300&quot; location&#x3D;&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;消愁&#39;,</span><br><span class="line">        artist: &#39;毛不易&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;569200213.mp3&#39;,</span><br><span class="line">        cover: &#39;https:&#x2F;&#x2F;p1.music.126.net&#x2F;vmCcDvD1H04e9gm97xsCqg&#x3D;&#x3D;&#x2F;109951163350929740.jpg?param&#x3D;300x300&#39;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="3，-layout-swig"><a href="#3，-layout-swig" class="headerlink" title="3，_layout.swig"></a>3，_layout.swig</h4><p>打开<code>themes\next\layout\_layout.swig</code>文件，将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>添加到     &lt;body itemscope …&gt;   后面就行，即再 <body></body> 里面</p><p>然后，  重新生成，访问页面</p><h2 id="1-8-添加公益404-页面"><a href="#1-8-添加公益404-页面" class="headerlink" title="1.8    添加公益404 页面"></a>1.8    添加公益404 页面</h2><p>打开网站文件夹，右键打开 git bash</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page 404</span><br></pre></td></tr></table></figure><p>再到 主题配置文件 中， 找到  关键字 <strong>menu</strong>， </p><p>再这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">commonweal: &#x2F;404&#x2F;|| heartbeat</span><br></pre></td></tr></table></figure><h4 id="下一步-2"><a href="#下一步-2" class="headerlink" title="下一步"></a>下一步</h4><p>找到  网站文件夹/source/_posts/404   路径  </p><p>打开       index.md 文件   </p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8;&quot;&#x2F;&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge,chrome&#x3D;1&quot; &#x2F;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;all&quot; &#x2F;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;index,follow&quot;&#x2F;&gt;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;style&#x2F;404style.css&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;plain&quot; src&#x3D;&quot;http:&#x2F;&#x2F;www.qq.com&#x2F;404&#x2F;search_children.js&quot;</span><br><span class="line">          charset&#x3D;&quot;utf-8&quot; homePageUrl&#x3D;&quot;&#x2F;&quot;</span><br><span class="line">          homePageName&#x3D;&quot;回到我的主页&quot;&gt;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;data.js&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;page.js&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>  再，重新生成，访问页面</p><h2 id="1-9-Font-Awesome-的使用"><a href="#1-9-Font-Awesome-的使用" class="headerlink" title="1.9    Font Awesome 的使用"></a>1.9    Font Awesome 的使用</h2><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>打开 <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a>，下载文件并解压 ，下载路径  你定    </p><ul><li>将  你下的文件   中的这个    css文件夹    中的     font-awesome.css 文件   </li></ul><p>复制到     网站文件夹/theme/next/source    路径  下的  css 中去</p><ul><li>然后    将  你下的文件   中的这个   fonts文件夹   </li></ul><p>复制到    网站文件夹/theme/next/source    路径下</p><p>再   选择  覆盖  </p><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>在      这个     网站文件夹/theme/next/source    路径下</p><p>创建  名为   Font Awesome  的    html文件</p><p>然后     在这个 html  文件  中</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;font-awesome.min.css&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>重新生成 ，访问页面  </p><h1 id="祝大家建站快乐，少遇坑"><a href="#祝大家建站快乐，少遇坑" class="headerlink" title="祝大家建站快乐，少遇坑~"></a>祝大家建站快乐，少遇坑~</h1><p> 参考博文   <a href="https://blog.csdn.net/linton1/article/details/90137367" target="_blank" rel="noopener">https://blog.csdn.net/linton1/article/details/90137367</a></p><p>​                    <a href="https://www.dazhuanlan.com/2019/09/23/5d88294abddd7/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/09/23/5d88294abddd7/</a></p><p>​                    <a href="https://asdfv1929.github.io/2018/05/26/next-add-music/" target="_blank" rel="noopener">https://asdfv1929.github.io/2018/05/26/next-add-music/</a></p><p>​                    <a href="https://jingyan.baidu.com/article/948f5924ff894cd80ef5f943.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/948f5924ff894cd80ef5f943.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是-Hexo？&quot;&gt;&lt;a href=&quot;#什么是-Hexo？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Hexo？&quot;&gt;&lt;/a&gt;什么是 Hexo？&lt;/h3&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。&lt;/p&gt;
&lt;h2 id=&quot;1-1-安装-
      
    
    </summary>
    
    
    
      <category term="cource" scheme="http://yoursite.com/tags/cource/"/>
    
      <category term="softwares" scheme="http://yoursite.com/tags/softwares/"/>
    
  </entry>
  
</feed>
