<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>List-15_Redis</title>
    <url>/2021/05/13/JavaWeb/List-15-Redis/</url>
    <content><![CDATA[<h2 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h2><ul>
<li>redis<ul>
<li>概念</li>
<li>下载安装</li>
<li>命令操作</li>
</ul>
</li>
<li>数据结构</li>
<li>持久化操作</li>
<li>使用Java客户端操作redis</li>
</ul>
<h2 id="0-1-NOSQL"><a href="#0-1-NOSQL" class="headerlink" title="0.1 NOSQL"></a>0.1 NOSQL</h2><blockquote>
<h4 id="什么是NOSQL"><a href="#什么是NOSQL" class="headerlink" title="什么是NOSQL"></a>什么是NOSQL</h4></blockquote>
<ul>
<li>NoSQL(NoSQL = Not Only SQL)，意即“不仅仅是SQL”，是一项全新的数据库理念，泛指非关系型的数据库。</li>
<li>随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0</li>
<li>纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。</li>
<li>NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，<strong>尤其是大数据应用难题</strong>。</li>
</ul>
<blockquote>
<h4 id="NOSQL和关系型数据库比较"><a href="#NOSQL和关系型数据库比较" class="headerlink" title="NOSQL和关系型数据库比较"></a>NOSQL和关系型数据库比较</h4></blockquote>
<ul>
<li><p><strong>优点</strong>：</p>
<ul>
<li>1）成本：nosql数据库简单易部署，基本都是开源软件，不需要像使用oracle那样花费大量成本购买使用，相比关系型数据库价格便宜。</li>
<li>2）<strong>查询速度</strong>：nosql数据库将数据存储于缓存之中，关系型数据库将数据存储在硬盘中，自然查询速度远不nosql数据库。</li>
<li>3）<strong>存储数据的格式</strong>：nosql的存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，而数据库则只支持基础类型。</li>
<li>4）扩展性：关系型数据库有类似join这样的多表查询机制的限制导致扩展很艰难。</li>
</ul>
</li>
<li><p><strong>缺点</strong>：</p>
<ul>
<li>1）维护的工具和资料有限，因为nosql是属于新的技术，不能和关系型数据库10几年的技术同日而语。</li>
<li>2）不提供对sql的支持，如果不支持sql这样的工业标准，将产生一定用户的学习和使用成本。</li>
<li>3）不提供关系型数据库对事务的处理。</li>
</ul>
</li>
</ul>
<h4 id="1）非关系型数据库的优势："><a href="#1）非关系型数据库的优势：" class="headerlink" title="1）非关系型数据库的优势："></a>1）非关系型数据库的优势：</h4><ul>
<li><p>性能NOSQL<strong>是基于键值对的</strong>，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，<strong>所以性能非常高</strong>。</p>
</li>
<li><p>可扩展性同样也是因为基于键值对，数据之间没有耦合性，<strong>所以非常容易水平扩展</strong>。</p>
</li>
</ul>
<h4 id="2）关系型数据库的优势："><a href="#2）关系型数据库的优势：" class="headerlink" title="2）关系型数据库的优势："></a>2）关系型数据库的优势：</h4><ul>
<li><p>复杂查询可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。</p>
</li>
<li><p>事务支持使得对于安全性能很高的数据访问要求得以实现。对于这两类数据库，对方的优势就是自己的弱势，反之亦然。</p>
</li>
</ul>
<h4 id="3）总结"><a href="#3）总结" class="headerlink" title="3）总结"></a>3）总结</h4><ul>
<li>关系型数据库与NoSQL数据库<strong>并非对立而是互补的关系</strong>，</li>
<li><strong>即通常情况下使用关系型数据库</strong>，在适合使用NoSQL的时候使用NoSQL数据库，让NoSQL数据库对关系型数据库的不足进行弥补。</li>
<li>一般会将数据存储在关系型数据库中，在nosql<strong>数据库中备份存储关系型数据库的数据</strong></li>
</ul>
<h4 id="4）主流的NOSQL产品"><a href="#4）主流的NOSQL产品" class="headerlink" title="4）主流的NOSQL产品"></a>4）主流的NOSQL产品</h4><ul>
<li><p><strong>键值(Key-Value)存储数据库</strong></p>
<ul>
<li>相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB</li>
<li>典型应用： <strong>内容缓存，主要用于处理大量数据的高访问负载。</strong></li>
<li>数据模型： 一系列键值对<ul>
<li>优势： <strong>快速查询</strong></li>
<li>劣势： 存储的数据缺少结构化</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>列存储数据库</strong></p>
<ul>
<li>相关产品：Cassandra, HBase, Riak</li>
<li>典型应用：<strong>分布式的文件系统</strong></li>
<li>数据模型：以列簇式存储，将同一列数据存在一起<ul>
<li>优势：<strong>查找速度快，可扩展性强</strong>，更容易进行分布式扩展</li>
<li>劣势：功能相对局限</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>文档型数据库</strong></p>
<ul>
<li>相关产品：CouchDB、MongoDB<ul>
<li>典型应用：<strong>Web应用</strong>（与Key-Value类似，Value是结构化的）</li>
<li>数据模型： 一系列键值对<ul>
<li>优势：<strong>数据结构要求不严格</strong></li>
<li>劣势： 查询性能不高，而且缺乏统一的查询语法</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>图形(Graph)数据库</p>
<ul>
<li>相关数据库：Neo4J、InfoGrid、Infinite Graph</li>
<li>典型应用：<strong>社交网络</strong></li>
<li>数据模型：图结构<ul>
<li>优势：<strong>利用图结构相关算法</strong>。</li>
<li>劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="0-2-Redis"><a href="#0-2-Redis" class="headerlink" title="0.2 Redis"></a>0.2 Redis</h2><blockquote>
<h4 id="什么是Redis"><a href="#什么是Redis" class="headerlink" title="什么是Redis"></a>什么是Redis</h4></blockquote>
<ul>
<li>Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s </li>
<li>且Redis<strong>通过提供多种键值数据类型来适应不同场景下的存储需求</strong>，</li>
<li>目前为止Redis支持的键值数据类型如下：<ul>
<li>字符串类型 string</li>
<li>哈希类型 hash</li>
<li>列表类型 list</li>
<li>集合类型 set</li>
<li>有序集合类型 sortedset</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="Redis的应用场景"><a href="#Redis的应用场景" class="headerlink" title="Redis的应用场景"></a>Redis的应用场景</h4></blockquote>
<ul>
<li>缓存（数据查询、短连接、新闻内容、商品内容等等）</li>
<li>聊天室的在线好友列表</li>
<li>任务队列。（秒杀、抢购、12306等等）</li>
<li>应用排行榜</li>
<li>网站访问统计</li>
<li>数据过期处理（可以精确到毫秒</li>
<li>分布式集群架构中的session分离</li>
</ul>
<h4 id="1）下载安装"><a href="#1）下载安装" class="headerlink" title="1）下载安装"></a>1）下载安装</h4><ul>
<li>官网：https//redis.io</li>
<li>中文网：https//<a href="http://www.redis.net.cn/" target="_blank" rel="noopener">www.redis.net.cn/</a></li>
<li><strong>解压直接可以使用</strong>：<ul>
<li>redis.windows.conf：配置文件</li>
<li>redis-cli.exe：redis的客户端</li>
<li>redis-server.exe：redis服务器端</li>
</ul>
</li>
</ul>
<h4 id="2）命令操作"><a href="#2）命令操作" class="headerlink" title="2）命令操作"></a>2）命令操作</h4><ul>
<li><p><strong>redis的数据结构：</strong></p>
<ul>
<li>redis存储的是：key,value格式的数据，其中<strong>key都是字符串</strong>，value有5种不同的数据结构</li>
<li>value的数据结构：<ul>
<li>字符串类型 string</li>
<li>哈希类型 hash ： map格式</li>
<li>列表类型 list ： linkedlist格式。支持重复元素</li>
<li>集合类型 set  ： 不允许重复元素</li>
<li>有序集合类型 sortedset：不允许重复元素，且元素有顺序</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="字符串类型-string"><a href="#字符串类型-string" class="headerlink" title="字符串类型 string"></a>字符串类型 string</h4></blockquote>
<ul>
<li>存储： set key value<ul>
<li>127.0.0.1：6379&gt; set username zhangsan</li>
<li>OK</li>
</ul>
</li>
<li>获取： get key<ul>
<li>127.0.0.1：6379&gt; get username</li>
<li>“zhangsan”</li>
</ul>
</li>
<li>删除： del key<ul>
<li>127.0.0.1：6379&gt; del age</li>
<li>(integer) 1</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="哈希类型-hash"><a href="#哈希类型-hash" class="headerlink" title="哈希类型 hash"></a>哈希类型 hash</h4></blockquote>
<ul>
<li>存储： hset key field value<ul>
<li>127.0.0.1：6379&gt; hset myhash username lisi</li>
<li>(integer) 1</li>
<li>127.0.0.1：6379&gt; hset myhash password 123</li>
<li>(integer) 1</li>
</ul>
</li>
<li>获取：<ul>
<li>hget key field： 获取指定的field对应的值<ul>
<li>127.0.0.1：6379&gt; hget myhash username</li>
<li>“lisi”</li>
</ul>
</li>
<li>hgetall key：获取所有的field和value<ul>
<li>127.0.0.1：6379&gt; hgetall myhash</li>
<li>1) “username”</li>
<li>2) “lisi”</li>
<li>3) “password”</li>
<li>4) “123”</li>
</ul>
</li>
</ul>
</li>
<li>删除： hdel key field<ul>
<li>127.0.0.1：6379&gt; hdel myhash username</li>
<li>(integer) 1</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="列表类型-list：-可以添加一个元素到列表的头部（左边）或者尾部（右边）"><a href="#列表类型-list：-可以添加一个元素到列表的头部（左边）或者尾部（右边）" class="headerlink" title="列表类型 list： 可以添加一个元素到列表的头部（左边）或者尾部（右边）"></a>列表类型 list： 可以添加一个元素到列表的头部（左边）或者尾部（右边）</h4></blockquote>
<ul>
<li>添加：<ul>
<li>lpush key value： 将元素加入列表</li>
<li>rpush key value：将元素加入列表右边</li>
<li>127.0.0.1：6379&gt; lpush myList a<br>(integer) 1<br>127.0.0.1：6379&gt; lpush myList b<br>(integer) 2<br>127.0.0.1：6379&gt; rpush myList c<br>(integer) 3</li>
</ul>
</li>
<li>获取：<ul>
<li>lrange key start end ：范围获取</li>
<li>127.0.0.1：6379&gt; lrange myList 0 -1<br>1) “b”<br>2) “a”<br>3) “c”</li>
</ul>
</li>
<li>删除：<ul>
<li>lpop key： 删除列表最左边的元素，并将元素返回</li>
<li>rpop key： 删除列表最右边的元素，并将元素返回</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="集合类型-set-：-不允许重复元素"><a href="#集合类型-set-：-不允许重复元素" class="headerlink" title="集合类型 set ： 不允许重复元素"></a>集合类型 set ： 不允许重复元素</h4></blockquote>
<ul>
<li>存储：sadd key value<ul>
<li>127.0.0.1：6379&gt; sadd myset a<br>(integer) 1<br>127.0.0.1：6379&gt; sadd myset a<br>(integer) 0</li>
</ul>
</li>
<li>获取：smembers key：获取set集合中所有元素<ul>
<li>127.0.0.1：6379&gt; smembers myset<br>1) “a”</li>
</ul>
</li>
<li>删除：srem key value：删除set集合中的某个元素<ul>
<li>127.0.0.1：6379&gt; srem myset a<br>(integer) 1</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="有序集合类型-sortedset："><a href="#有序集合类型-sortedset：" class="headerlink" title="有序集合类型 sortedset："></a>有序集合类型 sortedset：</h4></blockquote>
<ul>
<li><p>不允许重复元素，且元素有顺序.</p>
</li>
<li><p>每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排</p>
</li>
<li><p>存储：zadd key score value</p>
<ul>
<li>127.0.0.1:6379&gt; zadd mysort 60 zhangsan<br>(integer) 1<br>127.0.0.1:6379&gt; zadd mysort 50 lisi<br>(integer) 1<br>127.0.0.1:6379&gt; zadd mysort 80 wangwu<br>(integer) 1</li>
</ul>
</li>
<li><p>获取：zrange key start end [withscores]</p>
<ul>
<li><p>127.0.0.1:6379&gt; zrange mysort 0 -1<br>1) “lisi”<br>2) “zhangsan”<br>3) “wangwu”</p>
<p>127.0.0.1:6379&gt; zrange mysort 0 -1 withscores<br>1) “zhangsan”<br>2) “60”<br>3) “wangwu”<br>4) “80”<br>5) “lisi”<br>6) “500”</p>
</li>
</ul>
</li>
<li><p>删除：zrem key value</p>
<ul>
<li>127.0.0.1:6379&gt; zrem mysort lisi<br>(integer) 1</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h4></blockquote>
<ul>
<li>keys * ： 查询所有的键</li>
<li>type key ： 获取键对应的value的类型</li>
<li>del key：删除指定的key value</li>
</ul>
</li>
</ul>
<h2 id="0-3-持久化"><a href="#0-3-持久化" class="headerlink" title="0.3 持久化"></a>0.3 持久化</h2><ul>
<li>redis是一个内存数据库，当redis服务器重启，获取电脑重启，数据会丢失</li>
<li>我们可以将redis内存中的数据持久化保存到硬盘的文件</li>
</ul>
<h4 id="1）redis持久化机制："><a href="#1）redis持久化机制：" class="headerlink" title="1）redis持久化机制："></a>1）redis持久化机制：</h4><ul>
<li><blockquote>
<h4 id="RDB：默认方式"><a href="#RDB：默认方式" class="headerlink" title="RDB：默认方式"></a>RDB：默认方式</h4></blockquote>
<ul>
<li>不需要进行配置，默认就使用这种机制</li>
<li>在一定的间隔时间中，检测key的变化情况，然后持久化数据</li>
<li><strong>1、编辑redis.windwos.conf文件</strong><ul>
<li>after 900 sec (15 min) if at least 1 key changed<br>save 900 1<br>after 300 sec (5 min) if at least 10 keys changed<br>save 300 10<br>after 60 sec if at least 10000 keys changed<br>save 60 10000</li>
</ul>
</li>
<li><strong>2.重新启动redis服务器，并指定配置文件名称</strong><ul>
<li>D：\JavaWeb2018\day23_redis\资料\redis\windows-64\redis-2.8.9&gt;redis-server.exe redis.windows.conf</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="AOF：日志记录的方式"><a href="#AOF：日志记录的方式" class="headerlink" title="AOF：日志记录的方式"></a>AOF：日志记录的方式</h4></blockquote>
<ul>
<li><p>可以记录每一条命令的操作。可以每一次命令操作后，持久化数据</p>
</li>
<li><p>编辑redis.windwos.conf文件</p>
<ul>
<li><p>appendonly no（关闭aof） –&gt; appendonly yes （开启aof）</p>
<p>appendfsync always ： 每一次操作都进行持久化<br>appendfsync everysec ： 每隔一秒进行一次持久化<br>appendfsync no     ： 不进行持久化</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>​    </p>
<pre><code>5. Java客户端 Jedis
    * Jedis： 一款java操作redis数据库的工具.
    * 使用步骤：
        1. 下载jedis的jar包
        2. 使用
            //1. 获取连接
            Jedis jedis = new Jedis(&quot;localhost&quot;,6379);
               //2. 操作
               jedis.set(&quot;username&quot;,&quot;zhangsan&quot;);
            //3. 关闭连接
            jedis.close();</code></pre><p>​        </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">		* Jedis操作各种redis中的数据结构</span><br><span class="line">​			1) 字符串类型 string</span><br><span class="line">​				set</span><br><span class="line">​				get</span><br><span class="line">​				</span><br><span class="line">​				 &#x2F;&#x2F;1. 获取连接</span><br><span class="line">​		        Jedis jedis &#x3D; new Jedis();&#x2F;&#x2F;如果使用空参构造，默认值 &quot;localhost&quot;,6379端口</span><br><span class="line">​		        &#x2F;&#x2F;2. 操作</span><br><span class="line">​		        &#x2F;&#x2F;存储</span><br><span class="line">​		        jedis.set(&quot;username&quot;,&quot;zhangsan&quot;);</span><br><span class="line">​		        &#x2F;&#x2F;获取</span><br><span class="line">​		        String username &#x3D; jedis.get(&quot;username&quot;);</span><br><span class="line">​		        System.out.println(username);</span><br></pre></td></tr></table></figure>


<p>​        </p>
<pre><code>    //可以使用setex()方法存储可以指定过期时间的 key value
    jedis.setex(&quot;activecode&quot;,20,&quot;hehe&quot;);//将activecode：hehe键值对存入redis，并且20秒后自动删除该键值对

    //3. 关闭连接
    jedis.close();

2) 哈希类型 hash ： map格式  
    hset
    hget
    hgetAll
    //1. 获取连接
    Jedis jedis = new Jedis();//如果使用空参构造，默认值 &quot;localhost&quot;,6379端口
    //2. 操作
    // 存储hash
    jedis.hset(&quot;user&quot;,&quot;name&quot;,&quot;lisi&quot;);
    jedis.hset(&quot;user&quot;,&quot;age&quot;,&quot;23&quot;);
    jedis.hset(&quot;user&quot;,&quot;gender&quot;,&quot;female&quot;);

    // 获取hash
    String name = jedis.hget(&quot;user&quot;, &quot;name&quot;);
    System.out.println(name);</code></pre><p>​        </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">		        &#x2F;&#x2F; 获取hash的所有map中的数据</span><br><span class="line">​		        Map&lt;String, String&gt; user &#x3D; jedis.hgetAll(&quot;user&quot;);</span><br><span class="line">​		</span><br><span class="line">​		        &#x2F;&#x2F; keyset</span><br><span class="line">​		        Set&lt;String&gt; keySet &#x3D; user.keySet();</span><br><span class="line">​		        for (String key ： keySet) &#123;</span><br><span class="line">​		            &#x2F;&#x2F;获取value</span><br><span class="line">​		            String value &#x3D; user.get(key);</span><br><span class="line">​		            System.out.println(key + &quot;：&quot; + value);</span><br><span class="line">​		        &#125;</span><br><span class="line">​</span><br></pre></td></tr></table></figure>




<pre><code>    //3. 关闭连接
    jedis.close();


3) 列表类型 list ： linkedlist格式。支持重复元素
    lpush / rpush
    lpop / rpop
    lrange start end ： 范围获取

     //1. 获取连接
    Jedis jedis = new Jedis();//如果使用空参构造，默认值 &quot;localhost&quot;,6379端口
    //2. 操作
    // list 存储
    jedis.lpush(&quot;mylist&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;);//从左边存
    jedis.rpush(&quot;mylist&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;);//从右边存

    // list 范围获取
    List&lt;String&gt; mylist = jedis.lrange(&quot;mylist&quot;, 0, -1);
    System.out.println(mylist);

    // list 弹出
    String element1 = jedis.lpop(&quot;mylist&quot;);//c
    System.out.println(element1);

    String element2 = jedis.rpop(&quot;mylist&quot;);//c
    System.out.println(element2);

    // list 范围获取
    List&lt;String&gt; mylist2 = jedis.lrange(&quot;mylist&quot;, 0, -1);
    System.out.println(mylist2);

    //3. 关闭连接
    jedis.close();


4) 集合类型 set  ： 不允许重复元素
    sadd
    smembers：获取所有元素

    //1. 获取连接
    Jedis jedis = new Jedis();//如果使用空参构造，默认值 &quot;localhost&quot;,6379端口
    //2. 操作</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">		</span><br><span class="line">​		        &#x2F;&#x2F; set 存储</span><br><span class="line">​		        jedis.sadd(&quot;myset&quot;,&quot;java&quot;,&quot;php&quot;,&quot;c++&quot;);</span><br><span class="line">​		</span><br><span class="line">​		        &#x2F;&#x2F; set 获取</span><br><span class="line">​		        Set&lt;String&gt; myset &#x3D; jedis.smembers(&quot;myset&quot;);</span><br><span class="line">​		        System.out.println(myset);</span><br></pre></td></tr></table></figure>


<p>​        </p>
<pre><code>    //3. 关闭连接
    jedis.close();
5) 有序集合类型 sortedset：不允许重复元素，且元素有顺序
    zadd
    zrange

    //1. 获取连接
    Jedis jedis = new Jedis();//如果使用空参构造，默认值 &quot;localhost&quot;,6379端口
    //2. 操作
    // sortedset 存储
    jedis.zadd(&quot;mysortedset&quot;,3,&quot;亚瑟&quot;);
    jedis.zadd(&quot;mysortedset&quot;,30,&quot;后裔&quot;);
    jedis.zadd(&quot;mysortedset&quot;,55,&quot;孙悟空&quot;);

    // sortedset 获取
    Set&lt;String&gt; mysortedset = jedis.zrange(&quot;mysortedset&quot;, 0, -1);

    System.out.println(mysortedset);</code></pre><p>​        </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">		        &#x2F;&#x2F;3. 关闭连接</span><br><span class="line">​		        jedis.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​		</span><br><span class="line">​		* jedis连接池： JedisPool</span><br><span class="line">​			* 使用：</span><br><span class="line">​				1. 创建JedisPool连接池对象</span><br><span class="line">​				2. 调用方法 getResource()方法获取Jedis连接</span><br><span class="line">​					&#x2F;&#x2F;0.创建一个配置对象</span><br><span class="line">​			        JedisPoolConfig config &#x3D; new JedisPoolConfig();</span><br><span class="line">​			        config.setMaxTotal(50);</span><br><span class="line">​			        config.setMaxIdle(10);</span><br><span class="line">​			</span><br><span class="line">​			        &#x2F;&#x2F;1.创建Jedis连接池对象</span><br><span class="line">​			        JedisPool jedisPool &#x3D; new JedisPool(config,&quot;localhost&quot;,6379);</span><br><span class="line">​</span><br></pre></td></tr></table></figure>




<pre><code>//2.获取连接
Jedis jedis = jedisPool.getResource();
//3. 使用
jedis.set(&quot;hehe&quot;,&quot;heihei&quot;);</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">			</span><br><span class="line">​			        &#x2F;&#x2F;4. 关闭 归还到连接池中</span><br><span class="line">​			        jedis.close();</span><br><span class="line">​			</span><br><span class="line">​			* 连接池工具类</span><br><span class="line">​				public class JedisPoolUtils &#123;</span><br></pre></td></tr></table></figure>


<p>​    </p>
<pre><code>    private static JedisPool jedisPool;

    static{
        //读取配置文件
        InputStream is = JedisPoolUtils.class.getClassLoader().getResourceAsStream(&quot;jedis.properties&quot;);
        //创建Properties对象
        Properties pro = new Properties();
        //关联文件
        try {
            pro.load(is);
        } catch (IOException e) {
            e.printStackTrace();
        }
        //获取数据，设置到JedisPoolConfig中
        JedisPoolConfig config = new JedisPoolConfig();
        config.setMaxTotal(Integer.parseInt(pro.getProperty(&quot;maxTotal&quot;)));
        config.setMaxIdle(Integer.parseInt(pro.getProperty(&quot;maxIdle&quot;)));

        //初始化JedisPool
        jedisPool = new JedisPool(config,pro.getProperty(&quot;host&quot;),Integer.parseInt(pro.getProperty(&quot;port&quot;)));

    }

    /**
     * 获取连接方法
     */
    public static Jedis getJedis(){
        return jedisPool.getResource();
    }
}</code></pre><h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><ul>
<li>案例需求：<ul>
<li>提供index.html页面，页面中有一个省份 下拉列表</li>
<li>当页面加载完成后 <strong>发送ajax请求</strong>，加载所有省份</li>
</ul>
</li>
<li>注意：使用redis<strong>缓存一些不经常发生变化的数据</strong>。<ul>
<li>数据库的数据一旦发生改变，则需要更新缓存。<ul>
<li>数据库的表执行 增删改的相关操作，需要将redis缓存数据情况，<strong>再次存入</strong></li>
<li>在service<strong>对应的增删改方法中</strong>，将redis数据删除。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>​    </p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-12_Ajax&amp;Json</title>
    <url>/2021/05/13/JavaWeb/List-14_Ajax&amp;Json/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>AJAX：</li>
<li>JSON</li>
</ul>
<h2 id="0-1-AJAX"><a href="#0-1-AJAX" class="headerlink" title="0.1 AJAX"></a>0.1 AJAX</h2><ul>
<li><p>概念： ASynchronous JavaScript And XML    <strong>异步的JavaScript 和 XML</strong></p>
</li>
<li><p><strong>异步和同步</strong>：客户端和服务器端相互通信的基础上</p>
<ul>
<li>客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。</li>
<li>客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。</li>
</ul>
</li>
<li><p><strong>Ajax</strong> <strong>是一种在无需重新加载整个网页的情况下</strong>，能够更新部分网页的技术。</p>
<ul>
<li>通过在后台与服务器进行少量数据交换，Ajax <strong>可以使网页实现异步更新</strong>。</li>
<li>这意味着可以在不重新加载整个网页的情况下，<strong>对网页的某部分进行更新</strong>。</li>
</ul>
</li>
<li><p>传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p>
</li>
</ul>
<h4 id="1）提升用户的体验"><a href="#1）提升用户的体验" class="headerlink" title="1）提升用户的体验"></a>1）提升用户的体验</h4><ul>
<li><blockquote>
<h4 id="实现方式："><a href="#实现方式：" class="headerlink" title="实现方式："></a>实现方式：</h4></blockquote>
<ul>
<li><p>原生的JS实现方式（了解）</p>
</li>
<li><p>实现步骤：</p>
<ol>
<li>创建核心对象</li>
<li>建立连接</li>
<li>发送请求</li>
<li>接受并处理来自服务器的响应结果</li>
</ol>
</li>
<li><pre><code>//1.创建核心对象
var xmlhttp;
if (window.XMLHttpRequest)
{// code for IE7+, Firefox, Chrome, Opera, Safari
    xmlhttp=new XMLHttpRequest();
}
else
{// code for IE6, IE5
    xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);
}

//2. 建立连接
/*
参数：
1. 请求方式：GET、POST
* get方式，请求参数在URL后边拼接。send方法为空参
* post方式，请求参数在send方法中定义
2. 请求的URL：
3. 同步或异步请求：true（异步）或 false（同步）

*/
xmlhttp.open(&quot;GET&quot;,&quot;ajaxServlet?username=tom&quot;,true);

//3.发送请求
xmlhttp.send();

//4.接受并处理来自服务器的响应结果
//获取方式 ：xmlhttp.responseText
//什么时候获取？当服务器响应成功后再获取

//当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。
xmlhttp.onreadystatechange=function()
{
    //判断readyState就绪状态是否为4，判断status响应状态码是否为200
    if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)
    {
        //获取服务器的响应结果
        var responseText = xmlhttp.responseText;
        alert(responseText);
    }
}
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 2）JQeury实现方式</span><br><span class="line"></span><br><span class="line">**1.&#96;$.ajax()&#96;**</span><br><span class="line"></span><br><span class="line">- 语法：**$.ajax(&#123;键值对&#125;);**</span><br><span class="line"></span><br><span class="line">- &#96;&#96;&#96;java</span><br><span class="line">   &#x2F;&#x2F;使用$.ajax()发送异步请求</span><br><span class="line">   $.ajax(&#123;</span><br><span class="line">       url：&quot;ajaxServlet1111&quot; , &#x2F;&#x2F; 请求路径</span><br><span class="line">       type：&quot;POST&quot; , &#x2F;&#x2F;请求方式</span><br><span class="line">       &#x2F;&#x2F;data： &quot;username&#x3D;jack&amp;age&#x3D;23&quot;,&#x2F;&#x2F;请求参数</span><br><span class="line">       data：&#123;&quot;username&quot;：&quot;jack&quot;,&quot;age&quot;：23&#125;,</span><br><span class="line">       success：function (data) &#123;</span><br><span class="line">           alert(data);</span><br><span class="line">       &#125;,&#x2F;&#x2F;响应成功后的回调函数</span><br><span class="line">       error：function () &#123;</span><br><span class="line">           alert(&quot;出错啦...&quot;)</span><br><span class="line">       &#125;,&#x2F;&#x2F;表示如果请求响应出现错误，会执行的回调函数</span><br><span class="line">   </span><br><span class="line">       dataType：&quot;text&quot;&#x2F;&#x2F;设置接受到的响应数据的格式</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure>


</code></pre></li>
</ul>
</li>
</ul>
<ol start="2">
<li><strong><code>$.get()</code></strong>：发送get请求<ul>
<li>语法：$.get(url, [data], [callback], [type])</li>
<li>参数：<ul>
<li>url：请求路径</li>
<li>data：请求参数</li>
<li>callback：回调函数</li>
<li>type：响应结果的类型</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>  3<strong>.<code>$.post()</code></strong>：发送post请求</p>
<ul>
<li>语法：$.post(url, [data], [callback], [type])</li>
<li>参数：<ul>
<li>url：请求路径</li>
<li>data：请求参数</li>
<li>callback：回调函数</li>
<li>type：响应结果的类型</li>
</ul>
</li>
</ul>
<h2 id="0-2-JSON"><a href="#0-2-JSON" class="headerlink" title="0.2 JSON"></a>0.2 JSON</h2><ul>
<li><p>概念： JavaScript Object Notation        <strong>JavaScript对象表示法</strong></p>
<ul>
<li><pre><code class="javascript">Person p = <span class="keyword">new</span> Person();
p.setName(<span class="string">"张三"</span>);
p.setAge(<span class="number">23</span>);
p.setGender(<span class="string">"男"</span>);

<span class="keyword">var</span> p = {<span class="string">"name"</span>：<span class="string">"张三"</span>,<span class="string">"age"</span>：<span class="number">23</span>,<span class="string">"gender"</span>：<span class="string">"男"</span>};
&lt;!--￼<span class="number">1</span>--&gt;
        <span class="comment">//1.定义基本格式</span>
​                <span class="keyword">var</span> person = {<span class="string">"name"</span>： <span class="string">"张三"</span>, age： <span class="number">23</span>, <span class="string">'gender'</span>： <span class="literal">true</span>};
​                 <span class="keyword">var</span> ps = [{<span class="string">"name"</span>： <span class="string">"张三"</span>, <span class="string">"age"</span>： <span class="number">23</span>, <span class="string">"gender"</span>： <span class="literal">true</span>},
​                {<span class="string">"name"</span>： <span class="string">"李四"</span>, <span class="string">"age"</span>： <span class="number">24</span>, <span class="string">"gender"</span>： <span class="literal">true</span>},
​                {<span class="string">"name"</span>： <span class="string">"王五"</span>, <span class="string">"age"</span>： <span class="number">25</span>, <span class="string">"gender"</span>： <span class="literal">false</span>}];
</code></pre>
</li>
</ul>
</li>
</ul>
<p>​                    //获取person对象中所有的键和值<br>​                    //for in 循环<br>​                   /* for(var key in person){<br>​                        //这样的方式获取不行。因为相当于  person.”name”<br>​                        //alert(key + “：” + person.key);<br>​                        alert(key+”：”+person[key]);<br>​                    }*/<br>​<br>​                   //获取ps中的所有值<br>​                    for (var i = 0; i &lt; ps.length; i++) {<br>​                        var p = ps[i];<br>​                        for(var key in p){<br>​                            alert(key+”：”+p[key]);<br>​                        }<br>​                    }</p>
<pre><code>


#### 2）JSON数据和Java对象的相互转换

* JSON解析器：

  * 常见的解析器：Jsonlib，Gson，fastjson，jackson

* &gt; #### JSON转为Java对象

  1. 导入jackson的相关jar包
  2. 创建Jackson核心对象 ObjectMapper
  3. 调用ObjectMapper**的相关方法进行转换**
  4. readValue(json字符串数据,Class)

* &gt; #### Java对象转换JSON

  1. 导入jackson的相关jar包
  2. 创建Jackson核心对象 ObjectMapper
  3. 调用ObjectMapper**的相关方法进行转换**
     - **转换方法**：writeValue(**参数**1，obj)：
       - 参数1：
         - File：将obj对象转换为JSON字符串，并保存到指定的文件中
         - Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中
         - OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中
         - writeValueAsString(obj)：将对象转为json字符串
     - 注解：
       - @JsonIgnore：排除属性。
       - @JsonFormat：属性值得格式化
       - @JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)
     - 复杂java对象转换
       - List：数组
       - Map：对象格式一致



## 案例：

* 校验用户名是否存在

  1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。
  2. 有两种解决方案：

    - **$.get(type)**：**将最后一个参数**type指定为&quot;json&quot;
    - 在服务器端设置MIME类型
      - response.setContentType(&quot;application/json;charset=utf-8&quot;);


</code></pre>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Edge使用教程</title>
    <url>/2021/05/10/Others/Edge%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="0-2-隐私，搜索和服务"><a href="#0-2-隐私，搜索和服务" class="headerlink" title="0.2 隐私，搜索和服务"></a>0.2 隐私，搜索和服务</h3><blockquote>
<h4 id="地址栏和搜索（页面最底部）"><a href="#地址栏和搜索（页面最底部）" class="headerlink" title="地址栏和搜索（页面最底部）"></a>地址栏和搜索（页面最底部）</h4></blockquote>
<p><strong>管理快捷搜索引擎</strong></p>
<ul>
<li>（页面最底部），例如百度  bd，知乎  zh</li>
</ul>
]]></content>
      <tags>
        <tag>Edge</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA快捷键</title>
    <url>/2021/05/08/JAVA/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="0-1-Ctrl-快捷键"><a href="#0-1-Ctrl-快捷键" class="headerlink" title="0.1 Ctrl 快捷键"></a>0.1 Ctrl 快捷键</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl + F        //在当前文件进行文本查找 （必备）</span><br><span class="line">Ctrl + R        //在当前文件进行文本替换 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Z        //撤销 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Y        //删除光标所在行 或 删除选中的行 （必备）</span><br><span class="line">Ctrl + X        //剪切光标所在行 或 剪切选择内容</span><br><span class="line"></span><br><span class="line">Ctrl + C        //复制光标所在行 或 复制选择内容</span><br><span class="line">Ctrl + D        //复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + W        //递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围（必备）</span><br><span class="line"></span><br><span class="line">Ctrl + E        //显示最近打开的文件记录列表 （必备）</span><br><span class="line">Ctrl + N        //根据输入的 名/类名 查找类文件 （必备）</span><br></pre></td></tr></table></figure>



<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl + G        //在当前文件跳转到指定行处</span><br><span class="line"></span><br><span class="line">Ctrl + J        //插入自定义动态代码模板 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + P        //方法参数提示显示 （必备）</span><br><span class="line">Ctrl + Q        //光标所在的变量 / 类名 / 方法名等上面（也可以在提示补充的时候按），显示文档内容</span><br><span class="line"></span><br><span class="line">Ctrl + U        //前往当前光标所在的方法的父类的方法 / 接口定义 （必备）</span><br><span class="line">Ctrl + B        //进入光标所在的方法/变量的接口或是定义处，等效于 Ctrl + 左键单击 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + K        //版本控制提交项目，需要此项目有加入到版本控制才可用</span><br><span class="line">Ctrl + T        //版本控制更新项目，需要此项目有加入到版本控制才可用</span><br><span class="line"></span><br><span class="line">Ctrl + H        //显示当前类的层次结构</span><br><span class="line">Ctrl + O        //选择可重写的方法</span><br></pre></td></tr></table></figure>



<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl + I        //选择可继承的方法</span><br><span class="line"></span><br><span class="line">Ctrl + +        //展开代码</span><br><span class="line">Ctrl + -        //折叠代码</span><br><span class="line"></span><br><span class="line">Ctrl + /        //注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + [            //移动光标到当前所在代码的花括号开始位置</span><br><span class="line">Ctrl + ]            //移动光标到当前所在代码的花括号结束位置</span><br><span class="line"></span><br><span class="line">Ctrl + F1           //在光标所在的错误代码处显示错误信息 （必备）</span><br><span class="line">Ctrl + F3           //调转到所选中的词的下一个引用位置 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + F4           //关闭当前编辑文件</span><br><span class="line">Ctrl + F8           //在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</span><br></pre></td></tr></table></figure>



<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl + F9           //执行 Make Project 操作</span><br><span class="line"></span><br><span class="line">Ctrl + F11          //选中文件 / 文件夹，使用助记符设定 / 取消书签 （必备）</span><br><span class="line">Ctrl + F12          //弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</span><br><span class="line"></span><br><span class="line">Ctrl + Tab          //编辑窗口切换，如果在切换的过程又加按上 delete，则是关闭对应选中的窗口</span><br><span class="line">Ctrl + End          //跳到文件尾</span><br><span class="line">Ctrl + Home         //跳到文件头</span><br><span class="line"></span><br><span class="line">Ctrl + Space        //基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl +逗号 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + Delete       //删除光标后面的单词或是中文句 （必备）</span><br><span class="line">Ctrl +BackSpace     //删除光标前面的单词或是中文句 （必备）</span><br></pre></td></tr></table></figure>



<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl +<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>…<span class="number">9</span>       //定位到对应数值的书签位置 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + 左键单击     //在打开的文件标题上，弹出该文件路径 （必备）</span><br><span class="line">Ctrl + 光标定位按    //Ctrl 不要松开，会显示光标所在的类信息摘要</span><br><span class="line"></span><br><span class="line">Ctrl + 左方向键     //光标跳转到当前单词 / 中文句的左侧开头位置 （必备）</span><br><span class="line">Ctrl + 右方向键     //光标跳转到当前单词 / 中文句的右侧开头位置 （必备）</span><br><span class="line"></span><br><span class="line">Ctrl + 前方向键     //等效于鼠标滚轮向前效果 （必备）</span><br><span class="line">Ctrl + 后方向键     //等效于鼠标滚轮向后效果 （必备）</span><br></pre></td></tr></table></figure>

<h2 id="0-2-Alt快捷键"><a href="#0-2-Alt快捷键" class="headerlink" title="0.2 Alt快捷键"></a>0.2 Alt快捷键</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Alt + `             //显示版本控制常用操作菜单弹出层 （必备）</span><br><span class="line">Alt + Q             //弹出一个提示，显示当前类的声明 / 上下文信息</span><br><span class="line"></span><br><span class="line">Alt + F1            //显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择 （必备）</span><br><span class="line">Alt + F2            //对于前面页面，显示各类浏览器打开目标选择弹出层</span><br><span class="line"></span><br><span class="line">Alt + F3            //选中文本，逐个往下查找相同文本，并高亮显示</span><br><span class="line">Alt + F7            //查找光标所在的方法 / 变量 / 类被调用的地方</span><br><span class="line"></span><br><span class="line">Alt + F8            //在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</span><br><span class="line">Alt + Home          //定位 / 显示到当前文件的 Navigation Bar</span><br><span class="line"></span><br><span class="line">Alt + Enter         //IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 （必备）</span><br><span class="line">Alt + Insert        //代码自动生成，如生成对象的 <span class="built_in">set</span> / get 方法，构造函数，toString() 等 （必备）</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Alt + 左方向键              切换当前已打开的窗口中的子视图，比如 Debug 窗口中有 Output、Debugger 等子视图，用此快捷键就可以在子视图中切换 （必备）</span><br><span class="line">Alt + 右方向键              按切换当前已打开的窗口中的子视图，比如 Debug 窗口中有 Output、Debugger 等子视图，用此快捷键就可以在子视图中切换 （必备）</span><br><span class="line"></span><br><span class="line">Alt + 前方向键              当前光标跳转到当前文件的前一个方法名位置 （必备）</span><br><span class="line">Alt + 后方向键              当前光标跳转到当前文件的后一个方法名位置 （必备）</span><br><span class="line"></span><br><span class="line">Alt +1,2,3…9                显示对应数值的选项卡，其中 1 是 Project 用得最多 （必备）</span><br></pre></td></tr></table></figure>



<h2 id="0-3-Shift-快捷键"><a href="#0-3-Shift-快捷键" class="headerlink" title="0.3  Shift 快捷键"></a>0.3  Shift 快捷键</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Shift + F1              如果有外部文档可以连接外部文档</span><br><span class="line">Shift + F2              跳转到上一个高亮错误 或 警告位置</span><br><span class="line">Shift + F3              在查找模式下，查找匹配上一个</span><br><span class="line">Shift + F4              对当前打开的文件，使用新 Windows 窗口打开，旧窗口保留</span><br><span class="line">Shift + F6              对文件 &#x2F; 文件夹 重命名</span><br><span class="line">Shift + F7              在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</span><br><span class="line">Shift + F8              在 Debug 模式下，跳出，表现出来的效果跟 F9 一样</span><br><span class="line">Shift + F9              等效于点击工具栏的 Debug 按钮</span><br><span class="line">Shift + F10             等效于点击工具栏的 Run 按钮</span><br><span class="line">Shift + F11             弹出书签显示层 （必备）</span><br><span class="line">Shift + Tab             取消缩进 （必备）</span><br><span class="line">Shift + ESC             隐藏当前 或 最后一个激活的工具窗口</span><br><span class="line">Shift + End             选中光标到当前行尾位置</span><br><span class="line">Shift + Home            选中光标到当前行头位置</span><br><span class="line">Shift + Enter           开始新一行。光标所在行下空出一行，光标定位到新行位置 （必备）</span><br><span class="line">Shift + 左键单击            在打开的文件名上按此快捷键，可以关闭当前打开文件 （必备）</span><br><span class="line">Shift + 滚轮前后滚动      当前文件的横向滚动轴滚动 （必备）</span><br></pre></td></tr></table></figure>



<h2 id="0-4-Ctrl-Alt-快捷键"><a href="#0-4-Ctrl-Alt-快捷键" class="headerlink" title="0.4  Ctrl + Alt 快捷键"></a>0.4  Ctrl + Alt 快捷键</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl + Alt + L              格式化代码，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + O              优化导入的类，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + I              光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</span><br><span class="line">Ctrl + Alt + T              对选中的代码弹出环绕选项弹出层 （必备）</span><br><span class="line">Ctrl + Alt + J              弹出模板选择窗口，将选定的代码加入动态模板中</span><br><span class="line">Ctrl + Alt + H              调用层次</span><br><span class="line">Ctrl + Alt + B              在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</span><br><span class="line">Ctrl + Alt + V              快速引进变量</span><br><span class="line">Ctrl + Alt + Y              同步、刷新</span><br><span class="line">Ctrl + Alt + S              打开 IntelliJ IDEA 系统设置 （必备）</span><br><span class="line">Ctrl + Alt + F7             显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl + Alt + F11                切换全屏模式</span><br><span class="line">Ctrl + Alt + Enter              光标所在行上空出一行，光标定位到新行 （必备）</span><br><span class="line">Ctrl + Alt + Home               弹出跟当前文件有关联的文件弹出层</span><br><span class="line">Ctrl + Alt + Space              类名自动完成</span><br><span class="line">Ctrl + Alt + 左方向键           退回到上一个操作的地方 （必备）</span><br><span class="line">Ctrl + Alt + 右方向键           前进到上一个操作的地方 （必备）</span><br><span class="line">Ctrl + Alt + 前方向键           在查找模式下，跳到上个查找的文件</span><br><span class="line">Ctrl + Alt + 后方向键           在查找模式下，跳到下个查找的文件</span><br></pre></td></tr></table></figure>



<h2 id="0-5-Ctrl-Shift-快捷键"><a href="#0-5-Ctrl-Shift-快捷键" class="headerlink" title="0.5  Ctrl + Shift 快捷键"></a>0.5  Ctrl + Shift 快捷键</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl + Shift + F 根据输入内容查找整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + Shift + R 根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + Shift + J 自动将下一行合并到当前行末尾 （必备）</span><br><span class="line">Ctrl + Shift + Z 取消撤销 （必备）</span><br><span class="line">Ctrl + Shift + W 递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 （必备）</span><br><span class="line">Ctrl + Shift + N 通过文件名定位 &#x2F; 打开文件 &#x2F; 目录，打开目录需要在输入的内容后面多加一个正斜杠 （必备）</span><br><span class="line">Ctrl + Shift + U 对选中的代码进行大 &#x2F; 小写轮流转换 （必备）</span><br><span class="line">Ctrl + Shift + T 对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择 （必备）</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl + Shift + C 复制当前文件磁盘路径到剪贴板 （必备）Ctrl + Shift + V 弹出缓存的最近拷贝的内容管理器弹出层Ctrl + Shift + E 显示最近修改的文件列表的弹出层Ctrl + Shift + H 显示方法层次结构Ctrl + Shift + B 跳转到类型声明处 （必备）Ctrl + Shift + I 快速查看光标所在的方法 或 类的定义Ctrl + Shift + A 查找动作 &#x2F; 设置Ctrl + Shift + &#x2F; 代码块注释 （必备）Ctrl + Shift + [ 选中从光标所在位置到它的顶部中括号位置 （必备）Ctrl + Shift + ] 选中从光标所在位置到它的底部中括号位置 （必备）Ctrl + Shift + + 展开所有代码 （必备）Ctrl + Shift + - 折叠所有代码 （必备）</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl + Shift + F7 高亮显示所有该选中文本，按 Esc 高亮消失 （必备）Ctrl + Shift + F8 在 Debug 模式下，指定断点进入条件Ctrl + Shift + F9 编译选中的文件 &#x2F; 包 &#x2F; ModuleCtrl + Shift + F12 编辑器最大化 （必备）Ctrl + Shift + Space 智能代码提示Ctrl + Shift + Enter 自动结束代码，行末自动添加分号 （必备）Ctrl + Shift +Backspace 退回到上次修改的地方 （必备）Ctrl + Shift +1,2,3…9 快速添加指定数值的书签 （必备）Ctrl + Shift + 左键单击 把光标放在某个类变量上，按此快捷键可以直接定位到该类中 （必备）</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl + Shift + 左方向键 在代码文件上，光标跳转到当前单词 &#x2F; 中文句的左侧开头位置，同时选中该单词 &#x2F; 中文句（必备）Ctrl + Shift + 右方向键 在代码文件上，光标跳转到当前单词 &#x2F; 中文句的右侧开头位置，同时选中该单词 &#x2F; 中文句（必备）Ctrl + Shift + 前方向键 光标放在方法名上，将方法移动到上一个方法前面，调整方法排序 （必备）Ctrl + Shift + 后方向键 光标放在方法名上，将方法移动到下一个方法前面，调整方法排序 （必备）</span><br></pre></td></tr></table></figure>



<h2 id="0-6-Alt-Shift-快捷键"><a href="#0-6-Alt-Shift-快捷键" class="headerlink" title="0.6  Alt + Shift 快捷键"></a>0.6  Alt + Shift 快捷键</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Alt + <span class="built_in">Shift</span> + N 选择 / 添加 task （必备）Alt + <span class="built_in">Shift</span> + F 显示添加到收藏夹弹出层 / 添加到收藏夹Alt + <span class="built_in">Shift</span> + C 查看最近操作项目的变化情况列表Alt + <span class="built_in">Shift</span> + I 查看项目当前文件Alt + <span class="built_in">Shift</span> + F7在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入Alt + <span class="built_in">Shift</span> + F9 弹出 Debug 的可选择菜单Alt + <span class="built_in">Shift</span> + F10 弹出 Run 的可选择菜单Alt + <span class="built_in">Shift</span> + 左键双击 选择被双击的单词 / 中文句，按住不放，可以同时选择其他单词 / 中文句 （必备）Alt + <span class="built_in">Shift</span> + 前方向键 移动光标所在行向上移动 （必备）Alt + <span class="built_in">Shift</span> + 后方向键 移动光标所在行向下移动 （必备）</span><br></pre></td></tr></table></figure>



<h2 id="0-7-Ctrl-Shift-Alt-快捷键"><a href="#0-7-Ctrl-Shift-Alt-快捷键" class="headerlink" title="0.7  Ctrl + Shift + Alt 快捷键"></a>0.7  Ctrl + Shift + Alt 快捷键</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl + <span class="built_in">Shift</span> + Alt + V     无格式黏贴 （必备）Ctrl + <span class="built_in">Shift</span> + Alt + N     前往指定的变量 / 方法Ctrl + <span class="built_in">Shift</span> + Alt + S     打开当前项目设置 （必备）Ctrl + <span class="built_in">Shift</span> + Alt + C     复制参考信息</span><br></pre></td></tr></table></figure>



<h2 id="0-8-其他快捷键"><a href="#0-8-其他快捷键" class="headerlink" title="0.8 其他快捷键"></a>0.8 其他快捷键</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">F2 跳转到下一个高亮错误 或 警告位置 （必备）</span><br><span class="line">F3 在查找模式下，定位到下一个匹配处</span><br><span class="line">F4 编辑源 （必备）</span><br><span class="line"></span><br><span class="line">F7 在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</span><br><span class="line">F8 在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</span><br><span class="line"></span><br><span class="line">F9 在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</span><br><span class="line"></span><br><span class="line">F11 添加书签 （必备）</span><br><span class="line">F12 回到前一个工具窗口 （必备）</span><br><span class="line"></span><br><span class="line">Tab缩进 （必备）</span><br><span class="line">ESC 从工具窗口进入代码文件窗口 （必备）</span><br><span class="line"></span><br><span class="line">连按两次<span class="built_in">Shift</span> 弹出 Search Everywhere 弹出层</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA_IDEA</category>
      </categories>
  </entry>
  <entry>
    <title>手机热点无法使用</title>
    <url>/2021/05/06/Others/%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h3><ul>
<li><strong>热点的AP频段</strong> 可能选择的不合适        <strong>更换AP频段，热点能够正常使用</strong></li>
</ul>
<blockquote>
<p>发现，在学校的不同地点，需要不同的AP频段，才能正常使用我的手机热点</p>
</blockquote>
]]></content>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>ABBYY使用教程</title>
    <url>/2021/04/24/Others/ABBYY%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="识别图片生成文字"><a href="#识别图片生成文字" class="headerlink" title="识别图片生成文字"></a>识别图片生成文字</h3><ul>
<li>使用<strong>FineReaderOCR</strong>  即可。</li>
</ul>
]]></content>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA使用教程</title>
    <url>/2021/04/07/JavaWeb/IDEA%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h4 id="1-1-1-项目结构"><a href="#1-1-1-项目结构" class="headerlink" title="1.1.1  项目结构"></a>1.1.1  项目结构</h4><p><img src="https://i.loli.net/2021/04/07/U2zNqhSXBx6H3ys.png" alt="img"></p>
<h4 id="1-1-2-IDEA常用快捷键"><a href="#1-1-2-IDEA常用快捷键" class="headerlink" title="1.1.2  IDEA常用快捷键"></a>1.1.2  IDEA常用快捷键</h4><table>
<thead>
<tr>
<th><strong>快捷健</strong></th>
<th><strong>功能</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Alt+Enter</td>
<td>导入包，自动修正代码</td>
</tr>
<tr>
<td>Ctrl+Y</td>
<td>删除光标所在行</td>
</tr>
<tr>
<td>Ctrl+D</td>
<td>复制光标所在行的内容，插入光标位置下面</td>
</tr>
<tr>
<td>Ctrl+Alt+L</td>
<td>格式化代码</td>
</tr>
<tr>
<td>Ctrl+/</td>
<td>单行注释</td>
</tr>
<tr>
<td>Ctrl+Shift+/</td>
<td>选中代码注释，多行注释，再按取消注释</td>
</tr>
<tr>
<td>Alt+Ins</td>
<td>自动生成代码，toString, get, set等方法</td>
</tr>
<tr>
<td>Alt+Shift+上下箭头</td>
<td>移动当前代码行</td>
</tr>
</tbody></table>
<h4 id="1-1-3-IDEA修改快捷键"><a href="#1-1-3-IDEA修改快捷键" class="headerlink" title="1.1.3  IDEA修改快捷键"></a>1.1.3  IDEA修改快捷键</h4><p><img src="https://i.loli.net/2021/04/07/cF8XtsCZKJRyNfq.png" alt="img"></p>
<h4 id="1-1-4-模块的导入"><a href="#1-1-4-模块的导入" class="headerlink" title="1.1.4  模块的导入"></a>1.1.4  模块的导入</h4><p><img src="https://i.loli.net/2021/04/07/cF8XtsCZKJRyNfq.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/04/07/cF8XtsCZKJRyNfq.png" alt="img"></p>
<ul>
<li>选中某个文件夹后，一路回车即可。</li>
</ul>
<h4 id="1-1-5-JavaBeen的快速创建"><a href="#1-1-5-JavaBeen的快速创建" class="headerlink" title="1.1.5  JavaBeen的快速创建"></a>1.1.5  JavaBeen的快速创建</h4><p><img src="https://i.loli.net/2021/04/07/EHLomjrMh3RcaYg.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/04/07/EHLomjrMh3RcaYg.png" alt="img"></p>
<h4 id="1-1-6-快捷遍历输出"><a href="#1-1-6-快捷遍历输出" class="headerlink" title="1.1.6  快捷遍历输出"></a>1.1.6  快捷遍历输出</h4><p><img src="https://i.loli.net/2021/04/07/EHLomjrMh3RcaYg.png" alt="img"></p>
<h4 id="1-1-7-查看某个类的详细内容"><a href="#1-1-7-查看某个类的详细内容" class="headerlink" title="1.1.7  查看某个类的详细内容"></a>1.1.7  查看某个类的详细内容</h4><ul>
<li><strong>按住 Ctrl  ，然后 使用鼠标点击 某个类，即可。</strong></li>
</ul>
<h4 id="1-1-8-查看类文件的方法结构"><a href="#1-1-8-查看类文件的方法结构" class="headerlink" title="1.1.8  查看类文件的方法结构"></a>1.1.8  查看类文件的方法结构</h4><ul>
<li><strong>Alt + 7</strong> </li>
</ul>
<p><img src="https://i.loli.net/2021/04/07/XPjSFtrYTOU1a2z.png" alt="img"></p>
<h4 id="1-1-9-更改文件编码格式"><a href="#1-1-9-更改文件编码格式" class="headerlink" title="1.1.9    更改文件编码格式"></a>1.1.9    更改文件编码格式</h4><ul>
<li><img src="https://i.loli.net/2021/05/12/UotWKEFbNZgs5BI.png" alt="image-20210512215904101"></li>
</ul>
<h2 id="1-2-Tomcat"><a href="#1-2-Tomcat" class="headerlink" title="1.2 Tomcat"></a>1.2 Tomcat</h2><h4 id="1-2-1-Tomcat-项目的属性设置"><a href="#1-2-1-Tomcat-项目的属性设置" class="headerlink" title="1.2.1  Tomcat 项目的属性设置"></a>1.2.1  Tomcat 项目的属性设置</h4><p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p>
<h4 id="1-2-2-打开不同的Tomcat项目"><a href="#1-2-2-打开不同的Tomcat项目" class="headerlink" title="1.2.2  打开不同的Tomcat项目"></a>1.2.2  打开不同的Tomcat项目</h4><ol>
<li>打开另一个Tomcat项目，<strong>需要更改Tomcat的相关属性</strong></li>
<li><strong>选择你要使用的Tomcat项目</strong></li>
</ol>
<p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p>
<h4 id="1-2-3-编辑你的Tomcat项目"><a href="#1-2-3-编辑你的Tomcat项目" class="headerlink" title="1.2.3 编辑你的Tomcat项目"></a>1.2.3 编辑你的Tomcat项目</h4><ul>
<li><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></li>
</ul>
<h4 id="1-2-4-Tomcat项目对应的文件目录"><a href="#1-2-4-Tomcat项目对应的文件目录" class="headerlink" title="1.2.4  Tomcat项目对应的文件目录"></a>1.2.4  Tomcat项目对应的文件目录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\JAVA_DEMO2\out\artifacts</span><br></pre></td></tr></table></figure>

<h4 id="1-2-5-添加jar包"><a href="#1-2-5-添加jar包" class="headerlink" title="1.2.5  添加jar包"></a><strong>1.2.5</strong>  添加jar包</h4><ol>
<li>导入jar包</li>
<li>添加到使用列表</li>
</ol>
<p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/04/07/mVd9ZIkhaTcLDqU.png" alt="img"></p>
<h4 id="1-2-6-更改Servlet模板"><a href="#1-2-6-更改Servlet模板" class="headerlink" title="1.2.6  更改Servlet模板"></a>1.2.6  更改Servlet模板</h4><img src="https://i.loli.net/2021/04/07/Eid5ZVFszmJN8tG.png" alt="img" style="zoom:80%;" />

<h4 id="1-2-6-JSP工作文件夹"><a href="#1-2-6-JSP工作文件夹" class="headerlink" title="1.2.6   JSP工作文件夹"></a><strong>1.2.6</strong>   <strong>JSP工作文件夹</strong></h4><ul>
<li><code>D:\apache-tomcat-8.5.31\webapps\examples</code></li>
</ul>
<h4 id="1-2-7-更改Filter模板"><a href="#1-2-7-更改Filter模板" class="headerlink" title="1.2.7  更改Filter模板"></a>1.2.7  更改Filter模板</h4><ul>
<li>和更改Servlet模板大致相同</li>
</ul>
<h2 id="1-3-使用技巧"><a href="#1-3-使用技巧" class="headerlink" title="1.3 使用技巧"></a>1.3 使用技巧</h2><h4 id="1-3-1-添加代办TODO"><a href="#1-3-1-添加代办TODO" class="headerlink" title="1.3.1  添加代办TODO"></a>1.3.1  添加代办TODO</h4><ul>
<li><strong>在java代码中添加TODO，直接写注释即可。</strong></li>
</ul>
<p><img src="https://i.loli.net/2021/04/07/Ydrn9fb3GpNAk6S.png" alt="img"></p>
<ul>
<li><strong>在jsp代码中添加TODO，同样是写注释即可。</strong></li>
</ul>
<p><img src="https://i.loli.net/2021/04/07/Ydrn9fb3GpNAk6S.png" alt="img"></p>
]]></content>
      <tags>
        <tag>JAVA_IDEA使用技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>List-13_JQuery高级</title>
    <url>/2021/04/06/JavaWeb/JavaScript/List-13_JQuery%E9%AB%98%E7%BA%A7/</url>
    <content><![CDATA[<h3 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h3><ul>
<li>JQuery 高级<ul>
<li>动画</li>
<li>遍历</li>
<li>事件绑定</li>
</ul>
</li>
<li>案例</li>
<li>插件</li>
</ul>
<h2 id="0-1-JQuery-高级"><a href="#0-1-JQuery-高级" class="headerlink" title="0.1    JQuery 高级"></a>0.1    JQuery 高级</h2><h4 id="1）动画"><a href="#1）动画" class="headerlink" title="1）动画"></a>1）动画</h4><ul>
<li><p>三种方式显示和隐藏元素</p>
<blockquote>
<ol>
<li><h4 id="默认显示和隐藏方式"><a href="#默认显示和隐藏方式" class="headerlink" title="默认显示和隐藏方式"></a>默认显示和隐藏方式</h4></li>
</ol>
</blockquote>
<ul>
<li><p><strong>show</strong> ( [ speed,  [easing],  [fn]]  )</p>
<ol>
<li>参数：<ol>
<li><strong>speed</strong>：<strong>动画的速度</strong>。三个预定义的值(“slow”,”normal”, “fast”)或表示动画时长的毫秒数值(如：1000)</li>
<li><strong>easing</strong>：<strong>用来指定切换效果</strong>，默认是”swing”，可用参数”linear”<ul>
<li><strong>swing：动画执行时效果是 先慢，中间快，最后又慢</strong></li>
<li><strong>linear：动画执行时速度是匀速的</strong></li>
</ul>
</li>
<li><strong>fn</strong>：在动画完成时执行的函数，<strong>每个元素执行一次</strong>。</li>
</ol>
</li>
</ol>
</li>
<li><p>hide( [ speed,  [easing],  [fn]]  )</p>
</li>
<li><p>toggle( [ speed,  [easing],  [fn]]  )</p>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="2-滑动显示和隐藏方式"><a href="#2-滑动显示和隐藏方式" class="headerlink" title="2.滑动显示和隐藏方式"></a>2.滑动显示和隐藏方式</h4></blockquote>
<ul>
<li><p><strong>slideDown</strong>([speed],[easing],[fn])</p>
</li>
<li><p><strong>slideUp</strong>([speed,[easing],[fn]])</p>
</li>
<li><p><strong>slideToggle</strong>([speed],[easing],[fn])</p>
</li>
</ul>
</li>
<li><blockquote>
<h4 id="3-淡入淡出显示和隐藏方式"><a href="#3-淡入淡出显示和隐藏方式" class="headerlink" title="3.淡入淡出显示和隐藏方式"></a>3.淡入淡出显示和隐藏方式</h4></blockquote>
<ul>
<li><strong>fadeIn</strong>([speed],[easing],[fn])<ul>
<li><strong>fadeOut</strong>([speed],[easing],[fn])</li>
<li><strong>fadeToggle</strong>([speed,[easing],[fn]])</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2）遍历"><a href="#2）遍历" class="headerlink" title="2）遍历"></a>2）遍历</h4><ul>
<li><p>JS的遍历方式</p>
<ul>
<li>for(初始化值；循环结束条件；步长)</li>
</ul>
</li>
<li><blockquote>
<h4 id="JQ的遍历方式"><a href="#JQ的遍历方式" class="headerlink" title="JQ的遍历方式"></a>JQ的遍历方式</h4></blockquote>
<ul>
<li><p><strong>1、jq对象.each(callback)</strong></p>
<ul>
<li>语法：<code>jquery对象.each(function(index,element){</code><ul>
<li>​        <code>})；</code></li>
<li><strong>index：就是元素在集合中的索引</strong><ul>
<li><strong>element：就是集合中的每一个元素对象</strong></li>
<li><strong>this：集合中的每一个元素对象</strong></li>
</ul>
</li>
</ul>
</li>
<li><strong>回调函数返回值</strong>：<ul>
<li><strong>$.each(object, [callback])</strong><ul>
<li>true：如果当前function返回为false，则结束循环(break)。</li>
<li>false：如果当前function返回为true，则结束本次循环，继续下次循环(continue)</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>2、for..of</strong>： </p>
<ul>
<li><strong>for(元素对象 of 容器对象)</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="3）事件绑定"><a href="#3）事件绑定" class="headerlink" title="3）事件绑定"></a>3）事件绑定</h4><ul>
<li><p><strong>jquery标准的绑定方式</strong></p>
<ul>
<li>jq对象.事件方法(回调函数)；</li>
<li>注：如果调用事件方法，不传递回调函数，<strong>则会触发浏览器默认行为</strong>。<ul>
<li>表单对象.submit()；    //让表单提交</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>on绑定事件/off解除绑定</strong></p>
<ul>
<li>jq对象.on(“事件名称”,回调函数)</li>
<li>jq对象.off(“事件名称”)<ul>
<li>如果off方法不传递任何参数，<strong>则将组件上的所有事件全部解绑</strong></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>事件切换：toggle</strong></p>
<ul>
<li><p>jq对象.toggle(fn1,fn2…)</p>
<ul>
<li>当单击jq对象对应的组件后，会执行<strong>fn1</strong>.<strong>第二次点击会执行</strong>fn2…..</li>
</ul>
</li>
<li><p>注意：<strong>1.9版本 .toggle() 方法删除</strong>，jQuery Migrate（迁移）插件可以恢复此功能。</p>
<ul>
<li><script src="../js/jquery-migrate-1.0.0.js" type="text/javascript" charset="utf-8"></script>



</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h4 id="广告的自动现实和隐藏"><a href="#广告的自动现实和隐藏" class="headerlink" title="广告的自动现实和隐藏"></a>广告的自动现实和隐藏</h4><ul>
<li><h4 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h4><ul>
<li>当页面加载完，3秒后。自动显示广告动消失。</li>
</ul>
</li>
<li><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><ol>
<li>使用定时器来完成。setTimeout (执行一次定时器)</li>
<li>Query的显示和隐藏动画效果其实就是控制display</li>
<li>使用  show/hide方法来完成广告的显示</li>
</ol>
</li>
<li><p>代码实现</p>
<ul>
<li><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//入口函数，在页面加载完成之后，定义定时器，调用这两个方法</span></span><br><span class="line">    $(function () &#123;</span><br><span class="line">       <span class="comment">//定义定时器，调用adShow方法 3秒后执行一次</span></span><br><span class="line">       setTimeout(adShow,<span class="number">3000</span>)；</span><br><span class="line">       <span class="comment">//定义定时器，调用adHide方法，8秒后执行一次</span></span><br><span class="line">        setTimeout(adHide,<span class="number">8000</span>)；</span><br><span class="line">    &#125;)；</span><br><span class="line">    <span class="comment">//显示广告</span></span><br><span class="line">    <span class="function">function <span class="title">adShow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取广告div，调用显示方法</span></span><br><span class="line">        $(<span class="string">"#ad"</span>).show(<span class="string">"slow"</span>)；</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//隐藏广告</span></span><br><span class="line">    <span class="function">function <span class="title">adHide</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取广告div，调用隐藏方法</span></span><br><span class="line">        $(<span class="string">"#ad"</span>).hide(<span class="string">"slow"</span>)；</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>





</li>
</ul>
</li>
</ul>
<h4 id="抽奖"><a href="#抽奖" class="headerlink" title="抽奖"></a>抽奖</h4><ul>
<li><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h4><ol>
<li>给开始按钮绑定单击事件<ol>
<li>定义循环定时器<ul>
<li>切换小相框的src属性</li>
</ul>
</li>
<li>定义数组，存放图片资源路径<ul>
<li>生成随机数。数组索引        </li>
</ul>
</li>
</ol>
</li>
<li>给结束按钮绑定单击事件<ol>
<li>停止定时器</li>
<li>给大相框设置src属性</li>
</ol>
</li>
</ol>
</li>
<li><p><strong>disabled不能够使用</strong></p>
<ul>
<li><pre><code class="javascript">$(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">true</span>)；
$(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">false</span>)；
&lt;!--￼<span class="number">1</span>--&gt;</code></pre>
</li>
</ul>
</li>
<li><p>代码实现</p>
</li>
<li><pre><code class="java">&lt;script language=<span class="string">'javascript'</span> type=<span class="string">'text/javascript'</span>&gt;

    <span class="keyword">var</span> imgs = [<span class="string">"../img/man00.jpg"</span>,
                <span class="string">"../img/man01.jpg"</span>,
                <span class="string">"../img/man02.jpg"</span>,
                <span class="string">"../img/man03.jpg"</span>,
                <span class="string">"../img/man04.jpg"</span>,
                <span class="string">"../img/man05.jpg"</span>,
                <span class="string">"../img/man06.jpg"</span>,
                ]；
    <span class="keyword">var</span> startId；<span class="comment">//开始定时器的id</span>
    <span class="keyword">var</span> index；<span class="comment">//随机角标</span>

    $(function () {
        <span class="comment">//处理按钮是否可以使用的效果</span>
        $(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="keyword">false</span>)；
        $(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="keyword">true</span>)；

</code></pre>
</li>
</ul>
<pre><code>       //1. 给开始按钮绑定单击事件
        $(&quot;#startID&quot;).click(function () {
            // 1.1 定义循环定时器 20毫秒执行一次
            startId = setInterval(function () {
                //处理按钮是否可以使用的效果
                $(&quot;#startID&quot;).prop(&quot;disabled&quot;,true)；
                $(&quot;#stopID&quot;).prop(&quot;disabled&quot;,false)；


                //1.2生成随机角标 0-6
                index = Math.floor(Math.random() * 7)；//0.000--0.999 --&gt; * 7 --&gt; 0.0-----6.9999
                //1.3设置小相框的src属性
                $(&quot;#img1ID&quot;).prop(&quot;src&quot;,imgs[index])；

            },200)；
        })；


        //2. 给结束按钮绑定单击事件
        $(&quot;#stopID&quot;).click(function () {
            //处理按钮是否可以使用的效果
            $(&quot;#startID&quot;).prop(&quot;disabled&quot;,false)；
            $(&quot;#stopID&quot;).prop(&quot;disabled&quot;,true)；


           // 1.1 停止定时器
            clearInterval(startId)；
           // 1.2 给大相框设置src属性
            $(&quot;#img2ID&quot;).prop(&quot;src&quot;,imgs[index]).hide()；
            //显示1秒之后
            $(&quot;#img2ID&quot;).show(1000)；
        })；
    })；

&lt;/script&gt;</code></pre><pre><code>


## 0.2 插件：

- 增强JQuery的功能


- 实现方式：
  - **$.fn.extend(object)** 
    - **增强**    通过Jquery获取的对象的功能  $(&quot;#id&quot;)
  - **$.extend(object)**
    - 增强JQeury对象自身的功能   $/jQuery
</code></pre>]]></content>
      <categories>
        <category>JQ</category>
      </categories>
  </entry>
  <entry>
    <title>List-12_JQuery基础</title>
    <url>/2021/04/06/JavaWeb/JavaScript/List-12_JQuery%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>JQuery 基础：<ul>
<li>概念</li>
<li>快速入门</li>
</ul>
</li>
<li>JQuery对象和JS对象区别与转换</li>
<li>选择器</li>
<li>DOM操作</li>
<li>案例</li>
</ul>
<h2 id="0-1-JQuery-基础："><a href="#0-1-JQuery-基础：" class="headerlink" title="0.1    JQuery 基础："></a>0.1    JQuery 基础：</h2><p><strong>概念： 一个JavaScript框架。简化JS开发</strong></p>
<ul>
<li>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。</li>
<li>jQuery设计的宗旨    是“write Less，Do More”，<strong>即倡导写更少的代码，做更多的事情。</strong></li>
<li>它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，<strong>优化HTML文档操作、事件处理、动画设计和Ajax交互。</strong></li>
<li>JavaScript框架：本质上就是一些js文件，封装了js的原生代码而已</li>
</ul>
<h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><ol>
<li><p>步骤：</p>
<ol>
<li><p>下载JQuery</p>
<ul>
<li>jquery-xxx.js 与 jquery-xxx.min.js区别：<ul>
<li>jquery-xxx.js：开发版本。给程序员看的，<strong>有良好的缩进和注释</strong>。体积大一些</li>
<li>jquery-xxx.min.js：生产版本。程序中使用，没有缩进。体积小一些。<strong>程序加载更快</strong></li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
<li><p>导入JQuery的js文件：导入min.js文件</p>
</li>
<li><p><strong>使用</strong></p>
<ul>
<li><p>示例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> div1 = $(<span class="string">"#div1"</span>);</span><br><span class="line"></span><br><span class="line">alert(div1.html( ));</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<blockquote>
<h4 id="JQuery对象和JS对象区别与转换"><a href="#JQuery对象和JS对象区别与转换" class="headerlink" title="JQuery对象和JS对象区别与转换"></a>JQuery对象和JS对象区别与转换</h4></blockquote>
<ul>
<li>JQuery对象在操作时，<strong>更加方便</strong>。<ul>
<li>JQuery对象和js对象<strong>方法不通用的</strong>.</li>
<li>两者相互转换<ul>
<li>JQuery – &gt; JS ： <ul>
<li>JQ 对象[ 索引 ] </li>
<li>或者 JQ 对象.get( 索引)</li>
</ul>
</li>
<li>JS– &gt;JQuery：<strong>$(JS 对象)</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="0-2-基本操作学习："><a href="#0-2-基本操作学习：" class="headerlink" title="0.2    基本操作学习："></a>0.2    基本操作学习：</h2><ul>
<li><p>事件绑定</p>
<ul>
<li><pre><code class="javascript"><span class="comment">//1.获取b1按钮</span>
   $(<span class="string">"#b1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>{
       alert(<span class="string">"abc"</span>);
   });
&lt;!--￼<span class="number">1</span>--&gt;





</code></pre>
</li>
</ul>
</li>
</ul>
<h2 id="0-3-选择器"><a href="#0-3-选择器" class="headerlink" title="0.3    选择器"></a>0.3    选择器</h2><ul>
<li><strong>筛选具有相似特征的元素</strong>(标签)</li>
</ul>
<h4 id="1）选择器分类"><a href="#1）选择器分类" class="headerlink" title="1）选择器分类"></a>1）选择器分类</h4><blockquote>
<h4 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h4></blockquote>
<ol>
<li>标签选择器（元素选择器）<ul>
<li>语法： $(“html标签名”) 获得所有匹配标签名称的元素</li>
</ul>
</li>
<li><strong>id选择器</strong> <ul>
<li>语法： $(“#id的属性值”) 获得与指定id属性值匹配的元素</li>
</ul>
</li>
<li>类选择器<ul>
<li>语法： $(“.class的属性值”) 获得与指定的class属性值匹配的元素</li>
</ul>
</li>
<li>并集选择器：<ul>
<li>语法： $(“选择器1,选择器2….”) 获取多个选择器选中的所有元素</li>
</ul>
</li>
</ol>
<blockquote>
<h4 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h4></blockquote>
<ul>
<li>后代选择器<ul>
<li>语法： $(“A B “) 选择A元素内部的<strong>所有B元素</strong>        </li>
</ul>
</li>
<li>子选择器<ul>
<li>语法： $(“A &gt; B”) 选择A元素内部的<strong>所有B子元素</strong></li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h4></blockquote>
<ol>
<li>属性名称选择器 <ul>
<li>语法： $(“A[属性名]”) 包含指定属性的选择器</li>
</ul>
</li>
<li>属性选择器<ul>
<li>语法： $(“A[属性名=’值’]”) 包含指定属性等于指定值的选择器</li>
</ul>
</li>
<li>复合属性选择器<ul>
<li>语法： $(“A[属性名=’值’][]…”) 包含多个属性条件的选择器</li>
</ul>
</li>
</ol>
<blockquote>
<h4 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h4></blockquote>
<ol>
<li>首元素选择器 <ul>
<li>语法： ：first 获得选择的元素中的第一个元素</li>
</ul>
</li>
<li>尾元素选择器 <ul>
<li>语法： ：last 获得选择的元素中的最后一个元素</li>
</ul>
</li>
<li>非元素选择器<ul>
<li>语法： ：not(selector) 不包括指定内容的元素</li>
</ul>
</li>
<li>偶数选择器<ul>
<li>语法： ：even 偶数，从 0 开始计数</li>
</ul>
</li>
<li>奇数选择器<ul>
<li>语法： ：odd 奇数，从 0 开始计数</li>
</ul>
</li>
<li>等于索引选择器<ul>
<li>语法： ：eq(index) 指定索引元素</li>
</ul>
</li>
<li>大于索引选择器 <ul>
<li>语法： ：gt(index) 大于指定索引元素</li>
</ul>
</li>
<li>小于索引选择器 <ul>
<li>语法： ：lt(index) 小于指定索引元素</li>
</ul>
</li>
<li>标题选择器<ul>
<li>语法： ：header 获得标题（h1~h6）元素，固定写法</li>
</ul>
</li>
</ol>
<blockquote>
<h4 id="表单过滤选择器"><a href="#表单过滤选择器" class="headerlink" title="表单过滤选择器"></a>表单过滤选择器</h4></blockquote>
<ol>
<li>可用元素选择器 <ul>
<li>语法： ：enabled 获得可用元素</li>
</ul>
</li>
<li>不可用元素选择器 <ul>
<li>语法： ：disabled 获得不可用元素</li>
</ul>
</li>
<li>选中选择器 <ul>
<li>语法： <strong>：checked</strong> 获得<strong>单选/复选框选中的元素</strong></li>
</ul>
</li>
<li>选中选择器 <ul>
<li>语法： <strong>：selected</strong> 获得<strong>下拉框选中的元素</strong></li>
</ul>
</li>
</ol>
<h2 id="0-4-DOM操作"><a href="#0-4-DOM操作" class="headerlink" title="0.4    DOM操作"></a>0.4    DOM操作</h2><h4 id="1）内容操作"><a href="#1）内容操作" class="headerlink" title="1）内容操作"></a>1）内容操作</h4><ol>
<li>html( )： 获取/设置元素的标签体内容   <a><font>内容</font></a>  –&gt; <font>内容</font></li>
<li>text( )： 获取/设置元素的标签体纯文本内容   <a><font>内容</font></a> –&gt; 内容</li>
<li>val( )： 获取/设置元素的value属性值</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取myinput 的value值</span></span><br><span class="line"><span class="keyword">var</span> value = $(<span class="string">"#myInput"</span>).val( );</span><br><span class="line">alert(value);</span><br><span class="line">            $(<span class="string">"#myInput"</span>).val(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取mydiv的标签体内容</span></span><br><span class="line"><span class="keyword">var</span> html = $(<span class="string">"#myDiv"</span>).html( );</span><br><span class="line">alert(html);</span><br><span class="line">            $(<span class="string">"#myDiv"</span>).html(<span class="string">"&lt;p&gt;aaaa&lt;/p&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取mydiv文本内容</span></span><br><span class="line">            <span class="keyword">var</span> text = $(<span class="string">"#myDiv"</span>).text( );</span><br><span class="line">            alert(text);</span><br><span class="line">            $(<span class="string">"#myDiv"</span>).text(<span class="string">"bbb"</span>);</span><br></pre></td></tr></table></figure>



<h4 id="2）属性操作"><a href="#2）属性操作" class="headerlink" title="2）属性操作"></a>2）属性操作</h4><ul>
<li><p><strong>通用属性操作</strong></p>
<ol>
<li><strong>attr</strong>( )： 获取/设置元素的属性</li>
<li>removeAttr( )：删除属性</li>
<li><strong>prop</strong>( )：获取/设置元素的属性</li>
<li>removeProp( )：删除属性</li>
<li>attr和prop<strong>区别</strong>？<ol start="6">
<li>如果操作的是元素的<strong>固有属性，则建议使用prop</strong></li>
<li>如果操作的是元素<strong>自定义的属性，则建议使用attr</strong></li>
</ol>
</li>
</ol>
</li>
<li><p><strong>对class属性操作</strong></p>
<ol>
<li><strong>addClass</strong>( )：添加class属性值</li>
<li>removeClass( )：删除class属性值</li>
<li><strong>toggleClass</strong>( )：切换class属性<ul>
<li>toggleClass(“one”)： <ul>
<li>判断如果元素对象上存在class=”one”，则将属性值one删除掉。  如果元素对象上不存在    class=”one”，则添加</li>
</ul>
</li>
</ul>
</li>
<li><strong>css</strong>( )：</li>
</ol>
</li>
</ul>
<h4 id="3）CRUD操作："><a href="#3）CRUD操作：" class="headerlink" title="3）CRUD操作："></a>3）CRUD操作：</h4><ul>
<li><strong>append</strong>( )：父元素将子元素追加到末尾<ul>
<li>对象1.append(对象2)： 将对象2添加到对象1元素内部，并且在末尾</li>
</ul>
</li>
<li><strong>prepend</strong>( )：父元素将子元素追加到开头<ul>
<li>对象1.prepend(对象2)：将对象2添加到对象1元素内部，并且在开头</li>
</ul>
</li>
<li>appendTo( )：<ul>
<li>对象1.appendTo(对象2)：将对象1添加到对象2内部，并且在末尾</li>
</ul>
</li>
<li>prependTo( )：<ul>
<li>对象1.prependTo(对象2)：将对象1添加到对象2内部，并且在开头</li>
</ul>
</li>
<li>after( )：添加元素到元素后边<ul>
<li>对象1.after(对象2)： 将对象2添加到对象1后边。对象1和对象2是兄弟关系</li>
</ul>
</li>
<li>before( )：添加元素到元素前边<ul>
<li>对象1.before(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li>
</ul>
</li>
<li>insertAfter( )<ul>
<li>对象1.insertAfter(对象2)：将对象2添加到对象1后边。对象1和对象2是兄弟关系</li>
</ul>
</li>
<li>insertBefore( )<ul>
<li>对象1.insertBefore(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li>
</ul>
</li>
<li><strong>remove</strong>( )：移除元素<ul>
<li>对象.remove( )：将对象删除掉</li>
</ul>
</li>
<li><strong>empty</strong>( )：清空元素的所有后代元素。<ul>
<li>对象.empty( )：将对象的后代元素全部清空，但是保留当前对象以及其属性节点</li>
</ul>
</li>
</ul>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h4 id="全选和全不选"><a href="#全选和全不选" class="headerlink" title="全选和全不选"></a>全选和全不选</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectAll</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">	<span class="comment">//获取下边的复选框</span></span><br><span class="line">	$(<span class="string">".itemSelect "</span>).prop(<span class="string">"checked"</span>,obj.checked);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="下拉菜单，左右移动"><a href="#下拉菜单，左右移动" class="headerlink" title="下拉菜单，左右移动"></a>下拉菜单，左右移动</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">//toRight</span></span><br><span class="line">    $(<span class="string">"#toRight"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"> </span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取右边的下拉列表对象，append(左边下拉列表选中的option)</span></span><br><span class="line">        $(<span class="string">"#rightName"</span>).append($(<span class="string">"#leftName &gt; option:selected"</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//toLeft</span></span><br><span class="line">    $(<span class="string">"#toLeft"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"> </span>) </span>&#123;</span><br><span class="line">        <span class="comment">//appendTo   获取右边选中的option，将其移动到左边下拉列表中</span></span><br><span class="line">        $(<span class="string">"#rightName &gt; option:selected"</span>).appendTo($(<span class="string">"#leftName"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JQ</category>
      </categories>
  </entry>
  <entry>
    <title>List-08_Cookie_Session</title>
    <url>/2021/04/06/JavaWeb/List-08-Cookie-Session/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>会话技术<ul>
<li>Cookie</li>
<li>Session</li>
</ul>
</li>
<li>JSP：入门学习</li>
</ul>
<h3 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h3><ol>
<li>会话：一次会话中包含多次请求和响应。<ul>
<li>一次会话：<strong>浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止</strong></li>
</ul>
</li>
<li>功能：<strong>在一次会话的范围内的多次请求间</strong>，共享数据</li>
<li>方式：<ol>
<li><strong>客户端会话技术：Cookie</strong></li>
<li><strong>服务器端会话技术：Session</strong></li>
</ol>
</li>
</ol>
<h2 id="0-1-Cookie："><a href="#0-1-Cookie：" class="headerlink" title="0.1 Cookie："></a>0.1 Cookie：</h2><ul>
<li>概念：客户端会话技术，<strong>将数据保存到客户端</strong></li>
</ul>
<h4 id="1）快速入门："><a href="#1）快速入门：" class="headerlink" title="1）快速入门："></a>1）快速入门：</h4><ul>
<li><p>使用步骤：</p>
<ol>
<li><strong>创建Cookie对象，绑定数据</strong><ul>
<li>new Cookie(String name, String value) </li>
</ul>
</li>
<li><strong>发送Cookie对象</strong><ul>
<li>response.addCookie(Cookie cookie) </li>
</ul>
</li>
<li><strong>获取Cookie，拿到数据</strong><ul>
<li>Cookie[ ]  request.getCookies()  </li>
</ul>
</li>
</ol>
</li>
<li><p><strong>实现原理</strong></p>
<ul>
<li><strong>基于响应头set-cookie和请求头cookie实现</strong><ul>
<li><img src="https://i.loli.net/2021/01/24/AHTQi3X5kC6z1Rj.png" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2）cookie的细节"><a href="#2）cookie的细节" class="headerlink" title="2）cookie的细节"></a>2）cookie的细节</h4><blockquote>
<h4 id="一次可不可以发送多个cookie"><a href="#一次可不可以发送多个cookie" class="headerlink" title="一次可不可以发送多个cookie?"></a>一次可不可以发送多个cookie?</h4></blockquote>
<ul>
<li>可以<ul>
<li><strong>可以创建多个Cookie对象，使用response调用多次addCookie方法发送cookie即可。</strong></li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="cookie在浏览器中保存多长时间？"><a href="#cookie在浏览器中保存多长时间？" class="headerlink" title="cookie在浏览器中保存多长时间？"></a>cookie在浏览器中保存多长时间？</h4></blockquote>
<ol>
<li><strong>默认情况下</strong>，当浏览器关闭后，Cookie数据被销毁</li>
<li><strong>持久化存储</strong>：<ul>
<li><strong>setMaxAge</strong>(int seconds)<ul>
<li>正数：将Cookie数据写到硬盘的文件中。<strong>持久化存储</strong>。并指定cookie存活时间，时间到后，cookie文件自动失效</li>
<li>负数：默认值</li>
<li>零：删除cookie信息</li>
</ul>
</li>
</ul>
</li>
</ol>
<blockquote>
<h4 id="cookie能不能存中文？"><a href="#cookie能不能存中文？" class="headerlink" title="cookie能不能存中文？"></a>cookie能不能存中文？</h4></blockquote>
<ul>
<li>在tomcat 8 之前 cookie<strong><strong>中不能直接存储中文数据</strong></strong>。<ul>
<li>需要将中文数据转码—一般采用URL编码(%E3)</li>
</ul>
</li>
<li>在tomcat 8 之后，cookie支持中文数据。特殊字符还是不支持，<strong>建议使用URL编码存储，URL解码解析</strong></li>
</ul>
<blockquote>
<h4 id="cookie共享问题"><a href="#cookie共享问题" class="headerlink" title="cookie共享问题"></a>cookie共享问题</h4></blockquote>
<ul>
<li>假设在一个tomcat服务器中，部署了<strong>多个web项目</strong>，那么在这些web项目中cookie<strong>能不能共享</strong>？</li>
</ul>
<ul>
<li><strong>默认情况下cookie不能共享</strong><ul>
<li>setPath(String path)：设置cookie的获取范围。默认情况下，设置当前的虚拟目录</li>
<li>如果要共享，则可以将path设置为”/“</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="不同的tomcat服务器间cookie共享问题？"><a href="#不同的tomcat服务器间cookie共享问题？" class="headerlink" title="不同的tomcat服务器间cookie共享问题？"></a>不同的tomcat服务器间cookie共享问题？</h4></blockquote>
<ul>
<li><strong>setDomain</strong>(String path)：<strong>如果设置一级域名相同</strong>，那么多个服务器之间cookie可以共享<ul>
<li>例如，setDomain(“.baidu.com”)：那么tieba.baidu.com和news.baidu.com中cookie可以共享</li>
</ul>
</li>
</ul>
<h4 id="3）Cookie的特点和作用"><a href="#3）Cookie的特点和作用" class="headerlink" title="3）Cookie的特点和作用"></a>3）Cookie的特点和作用</h4><ul>
<li>特点：<ul>
<li>cookie<strong>存储数据在客户端浏览器</strong></li>
<li>浏览器对于单个cookie <strong>的大小有限制</strong>(4kb) 以及 <strong>对同一个域名下的总</strong>cookie<strong>数量也有限制</strong>(20个)</li>
</ul>
</li>
</ul>
<ul>
<li>作用：<ol>
<li>cookie<strong>一般用于存出少量的不太敏感的数据</strong></li>
<li><strong>在不登录的情况下，完成服务器对客户端的身份识别</strong></li>
</ol>
</li>
</ul>
<h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><blockquote>
<h4 id="记住上一次访问时间"><a href="#记住上一次访问时间" class="headerlink" title="记住上一次访问时间"></a>记住上一次访问时间</h4></blockquote>
<ul>
<li>需求：<ol>
<li>访问一个Servlet，<strong>如果是第一次访问</strong>，则提示：您好，欢迎您首次访问。</li>
<li><strong>如果不是第一次访问</strong>，则提示：欢迎回来，您上次访问时间为:显示时间字符串</li>
</ol>
</li>
<li><img src="https://i.loli.net/2021/01/24/7CdY6MeqaAiryF9.png" alt=""></li>
</ul>
<h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><ol>
<li>可以采用Cookie来完成</li>
<li><strong>在服务器中的Servlet判断是否有一个名为lastTime的cookie</strong><ol>
<li>有：不是第一次访问<ol>
<li>响应数据：欢迎回来，您上次访问时间为:2018年6月10日11:50:20</li>
<li>写回Cookie：lastTime=2018年6月10日11:50:01</li>
</ol>
</li>
<li>没有：是第一次访问<ol>
<li>响应数据：您好，欢迎您首次访问</li>
<li>写回Cookie：lastTime=2018年6月10日11:50:01</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="0-2-JSP入门学习"><a href="#0-2-JSP入门学习" class="headerlink" title="0.2 JSP入门学习"></a>0.2 JSP入门学习</h2><ul>
<li><p><strong>概念：</strong></p>
<ul>
<li>Java Server Pages： java服务器端页面</li>
<li>可以理解为：<strong>一个特殊的页面，其中既可以指定定义html标签，又可以定义java代码</strong></li>
<li><strong>用于简化书写！！！</strong></li>
</ul>
</li>
<li><p><strong>原理</strong></p>
<ul>
<li><strong>JSP本质上就是一个Servlet</strong></li>
<li><img src="https://i.loli.net/2021/01/24/dWTumt1sPGFDrIg.png" alt="JSP原理.png"></li>
</ul>
</li>
</ul>
<h4 id="1）JSP的脚本："><a href="#1）JSP的脚本：" class="headerlink" title="1）JSP的脚本："></a>1）JSP的脚本：</h4><ul>
<li><strong>JSP定义Java代码的方式</strong><ul>
<li><strong>&lt;%  代码 %&gt;</strong>：定义的java代码，在service方法中。<strong>可以在此处使用正常的java代码</strong></li>
<li><strong>&lt;%! 代码 %&gt;</strong>：定义的java代码，在jsp转换后的java类的成员位置。<strong>可以在此处成定义成员变量</strong></li>
<li><strong>&lt;%= 代码 %&gt;</strong>：定义的java代码，会输出到页面上。<strong>可以直接书写要输入的内容</strong></li>
</ul>
</li>
</ul>
<h4 id="2）JSP的内置对象："><a href="#2）JSP的内置对象：" class="headerlink" title="2）JSP的内置对象："></a>2）JSP的内置对象：</h4><ul>
<li>在jsp页面中<strong>不需要获取和创建，可以直接使用的对象</strong></li>
<li>jsp一共有9个内置对象。<ul>
<li>request</li>
<li>response</li>
<li>out：字符输出流对象。可以将数据输出到页面上。和response.getWriter()类似</li>
</ul>
</li>
</ul>
<ul>
<li><strong>response.getWriter()和out.write()的区别：</strong><ul>
<li>在tomcat服务器真正给客户端做出响应之前，会先找response缓冲区数据，再找out缓冲区数据。</li>
<li>response.getWriter()数据输出永远<strong>在out.write()之前</strong></li>
</ul>
</li>
</ul>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例:"></a>案例:</h2><h4 id="改造Cookie案例"><a href="#改造Cookie案例" class="headerlink" title="改造Cookie案例"></a>改造Cookie案例</h4><h2 id="0-3-Session"><a href="#0-3-Session" class="headerlink" title="0.3 Session"></a>0.3 Session</h2><ul>
<li>概念：服务器端会话技术，在一次会话的多次请求间共享数据，<strong>将数据保存在服务器端的对象中</strong>。<strong>HttpSession</strong></li>
</ul>
<h4 id="1）快速入门：-1"><a href="#1）快速入门：-1" class="headerlink" title="1）快速入门："></a>1）快速入门：</h4><ol>
<li><strong>获取HttpSession对象：</strong><ul>
<li>HttpSession session = <strong>request.getSession();</strong></li>
</ul>
</li>
<li><strong>使用HttpSession对象：</strong><ul>
<li>Object <strong>getAttribute</strong>(String name)  </li>
<li>void <strong>setAttribute</strong>(String name, Object value)</li>
<li>void <strong>removeAttribute</strong>(String name)  </li>
</ul>
</li>
</ol>
<ul>
<li><strong>原理</strong><ul>
<li><strong>Session的实现是依赖于Cookie的。</strong></li>
<li><img src="https://i.loli.net/2021/01/24/KVYW5xLmQChsjR4.png" alt=""></li>
</ul>
</li>
</ul>
<h4 id="2）细节："><a href="#2）细节：" class="headerlink" title="2）细节："></a>2）细节：</h4><blockquote>
<h4 id="当客户端关闭后，服务器不关闭，两次获取session是否为同一个？"><a href="#当客户端关闭后，服务器不关闭，两次获取session是否为同一个？" class="headerlink" title="当客户端关闭后，服务器不关闭，两次获取session是否为同一个？"></a>当客户端关闭后，服务器不关闭，两次获取session是否为同一个？</h4></blockquote>
<ul>
<li><strong>默认情况下。不是。</strong></li>
<li>如果需要相同，则可以创建Cookie，键为JSESSIONID，设置最大存活时间，让cookie持久化保存。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cookie c = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>,session.getId());</span><br><span class="line"></span><br><span class="line">c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">response.addCookie(c);</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="客户端不关闭，服务器关闭后，两次获取的session是同一个吗？"><a href="#客户端不关闭，服务器关闭后，两次获取的session是同一个吗？" class="headerlink" title="客户端不关闭，服务器关闭后，两次获取的session是同一个吗？"></a>客户端不关闭，服务器关闭后，两次获取的session是同一个吗？</h4></blockquote>
<ul>
<li><p><strong>不是同一个，但是要确保数据不丢失</strong>。tomcat自动完成以下工作</p>
<ul>
<li><p>session的钝化：</p>
<ul>
<li>在服务器正常关闭之前，将session对象系列化到硬盘上</li>
</ul>
</li>
<li><p>session的活化：</p>
<ul>
<li>在服务器启动后，将session文件转化为内存中的session对象即可。</li>
<li>使用Tomcat可以实现此功能，而使用idea无法实现此功能</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="session什么时候被销毁？"><a href="#session什么时候被销毁？" class="headerlink" title="session什么时候被销毁？"></a>session什么时候被销毁？</h4></blockquote>
<ul>
<li>服务器关闭<ul>
<li>session对象调用invalidate() 。</li>
<li>session默认失效时间 30分钟</li>
</ul>
</li>
<li>选择性配置修改    <session-config>
     <session-timeout>30</session-timeout>
</session-config>

</li>
</ul>
<h4 id="3）特点"><a href="#3）特点" class="headerlink" title="3）特点"></a>3）特点</h4><ul>
<li>session<strong>用于存储一次会话的多次请求的数据</strong>，存在服务器端<ul>
<li>session<strong>可以存储任意类型</strong>，任意大小的数据</li>
</ul>
</li>
</ul>
<ul>
<li><strong>session与Cookie的区别：</strong><ol>
<li>session<strong>存储数据在服务器端</strong>，Cookie在客户端</li>
<li>session<strong>没有数据大小限制</strong>，Cookie有</li>
<li>session<strong>数据安全</strong>，Cookie相对于不安全</li>
</ol>
</li>
</ul>
<h2 id="案例：验证码"><a href="#案例：验证码" class="headerlink" title="案例：验证码"></a>案例：验证码</h2><h4 id="案例需求："><a href="#案例需求：" class="headerlink" title="案例需求："></a>案例需求：</h4><ol>
<li>访问带有验证码的登录页面  login.jsp</li>
<li>用户输入用户名，密码以及验证码。<ul>
<li>如果用户名和密码输入有误，跳转登录页面，提示：用户名或密码错误</li>
<li>如果验证码输入有误，跳转登录页面，提示：验证码错误</li>
<li>如果全部输入正确，则跳转到主页success.jsp，显示：用户名,欢迎您</li>
</ul>
</li>
</ol>
<h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h4><ul>
<li><img src="https://i.loli.net/2021/01/26/py3FJTmzZa1CLD8.png" alt="登录案例.png"></li>
</ul>
<p>​    </p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-07_Response</title>
    <url>/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-07-Response/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>HTTP协议：响应消息</li>
<li>Response对象</li>
<li>ServletContext对象</li>
</ul>
<h2 id="0-1-HTTP协议"><a href="#0-1-HTTP协议" class="headerlink" title="0.1 HTTP协议"></a>0.1 HTTP协议</h2><ul>
<li><strong>响应消息：服务器端发送给客户端的数据</strong></li>
</ul>
<h4 id="数据格式："><a href="#数据格式：" class="headerlink" title="数据格式："></a>数据格式：</h4><ul>
<li><p><strong>响应行</strong></p>
<ul>
<li><p>组成：协议/版本 响应状态码 状态码描述</p>
</li>
<li><p>响应状态码：服务器告诉客户端浏览器<strong>本次请求和响应的一个状态</strong>。<strong>状态码都是3位数字</strong> </p>
<ul>
<li><strong>分类</strong>：<ul>
<li>1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx多状态码</li>
<li>2xx：成功。代表：200</li>
<li>3xx：重定向。代表：302(重定向)，304(访问缓存)</li>
<li>4xx：<strong>客户端错误</strong>。<ul>
<li>代表：<ul>
<li><strong>404（请求路径没有对应的资源）</strong> </li>
<li><strong>405：请求方式没有对应的doXxx方法</strong></li>
</ul>
</li>
</ul>
</li>
<li>5xx：<strong>服务器端错误</strong>。代表：500(服务器内部出现异常)</li>
<li><strong>根据状态码，检索问题的所在之处。</strong></li>
<li>例如：<img src="https%EF%BC%9A%5Ci.loli.net%5C2021%5C04%5C06%5CwJZtMcDiVCN54ug.png" alt="重定向"></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>响应头：</strong></p>
<ol>
<li>格式：<code>响应头名称： 值</code></li>
<li>常见的响应头：<ul>
<li>Content-Type：服务器告诉客户端本次响应体数据格式以及编码格式</li>
<li>Content-disposition：服务器告诉客户端以什么格式打开响应体数据</li>
</ul>
</li>
<li>值：<ul>
<li>in-line：默认值,在当前页面内打开</li>
<li>attachment;filename=xxx：<strong>以附件形式打开响应体</strong>。<strong>文件下载</strong></li>
</ul>
</li>
</ol>
</li>
<li><p><strong>响应空行</strong></p>
</li>
<li><p><strong>响应体：传输的数据</strong></p>
</li>
</ul>
<ul>
<li><strong>响应消息示例</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Content-Type： text&#x2F;html;charset&#x3D;UTF-8</span><br><span class="line">Content-Length： 101</span><br><span class="line">Date： Wed, 06 Jun 2018 07：08：42 GMT</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;$Title$&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  hello , response</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>





<h2 id="0-2-Response对象"><a href="#0-2-Response对象" class="headerlink" title="0.2 Response对象"></a>0.2 Response对象</h2><ul>
<li><p><strong>功能：设置响应消息</strong></p>
<ol>
<li><p>设置响应行</p>
<ul>
<li>格式：HTTP/1.1 200 ok</li>
</ul>
</li>
<li><p><strong>设置状态码：setStatus(int sc)</strong> </p>
</li>
<li><p>设置响应头：<strong>setHeader(String name, String value)</strong> </p>
</li>
<li><p>设置响应体：</p>
</li>
</ol>
</li>
<li><p><strong>示例：完成重定向</strong></p>
<ul>
<li><p>重定向：资源跳转的方式</p>
</li>
<li><p>代码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 设置状态码为302</span></span><br><span class="line">  response.setStatus(<span class="number">302</span>);</span><br><span class="line">  <span class="comment">//2.设置响应头location</span></span><br><span class="line">  response.setHeader(<span class="string">"location"</span>,<span class="string">"/day15/responseDemo2"</span>);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//简单的重定向方法</span></span><br><span class="line">response.sendRedirect(<span class="string">"/day15/responseDemo2"</span>);</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<h4 id="1）使用步骤："><a href="#1）使用步骤：" class="headerlink" title="1）使用步骤："></a>1）使用步骤：</h4><ol>
<li><p>获取输出流</p>
<ul>
<li>字符输出流：PrintWriter getWriter()</li>
<li>字节输出流：ServletOutputStream getOutputStream()</li>
</ul>
<ol start="2">
<li>使用输出流，将数据输出到客户端浏览器</li>
</ol>
</li>
</ol>
<h4 id="2）forward和redirect-区别"><a href="#2）forward和redirect-区别" class="headerlink" title="2）forward和redirect 区别"></a>2）forward和redirect 区别</h4><ul>
<li><p><strong>重定向的特点： redirect</strong></p>
<ul>
<li>地址栏发生变化</li>
<li><strong>重定向可以访问其他站点(服务器)的资源</strong></li>
<li><strong>重定向是两次请求。不能使用request对象来共享数据</strong></li>
</ul>
</li>
<li><p><strong>转发的特点：forward</strong></p>
<ul>
<li>转发地址栏路径不变</li>
<li>转发只能访问当前服务器下的资源</li>
<li><strong>转发是一次请求，可以使用request对象来共享数据</strong></li>
</ul>
</li>
</ul>
<h4 id="3）路径写法："><a href="#3）路径写法：" class="headerlink" title="3）路径写法："></a>3）路径写法：</h4><blockquote>
<h4 id="相对路径："><a href="#相对路径：" class="headerlink" title="相对路径："></a>相对路径：</h4></blockquote>
<ul>
<li><p><strong>通过相对路径不可以确定唯一资源</strong></p>
</li>
<li><p>例如：<code>./index.html</code></p>
</li>
</ul>
<ul>
<li><strong>不以 /  开头，以 . 开头路径</strong></li>
<li>规则：找到当前资源和目标资源之间的相对位置关系<ul>
<li>./  ：当前目录</li>
<li>../  ： 后退一级目录</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="绝对路径："><a href="#绝对路径：" class="headerlink" title="绝对路径："></a>绝对路径：</h4></blockquote>
<ul>
<li><p><strong>通过绝对路径可以确定唯一资源</strong></p>
<ul>
<li>例如：http：//localhost/day15/responseDemo2/day15/responseDemo2</li>
</ul>
</li>
<li><p><strong>以  / 开头的路径</strong></p>
</li>
<li><p>规则：<strong>判断定义的路径是给谁用的</strong>？判断请求将来从哪儿发出</p>
<ul>
<li>给客户端浏览器使用：<strong>需要加虚拟目录</strong>(项目的访问路径)  /day35<ul>
<li>建议虚拟目录动态获取：request.getContextPath()</li>
<li><a> , <form> 重定向…</li>
</ul>
</li>
<li>给服务器使用：不需要加虚拟目录  /responseDemo1<ul>
<li>转发路径</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="4）服务器输出数据到浏览器"><a href="#4）服务器输出数据到浏览器" class="headerlink" title="4）服务器输出数据到浏览器"></a>4）服务器输出数据到浏览器</h4><blockquote>
<h4 id="服务器输出字符数据到浏览器"><a href="#服务器输出字符数据到浏览器" class="headerlink" title="服务器输出字符数据到浏览器"></a>服务器输出字符数据到浏览器</h4></blockquote>
<ul>
<li><p>步骤：</p>
<ol>
<li>获取字符输出流</li>
<li>输出数据</li>
</ol>
</li>
<li><p><strong>注意：乱码问题：</strong></p>
<ol>
<li><p><strong>PrintWriter pw = response.getWriter();</strong>    获取的流的默认编码是ISO-8859-1</p>
</li>
<li><p>设置该流的默认编码</p>
</li>
<li><p>告诉浏览器响应体使用的编码</p>
<ul>
<li><pre><code class="java"><span class="comment">//简单的形式，设置编码，是在获取流之前设置</span>
response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);
&lt;!--￼<span class="number">3</span>--&gt;




</code></pre>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h2 id="03-ServletContext对象："><a href="#03-ServletContext对象：" class="headerlink" title="03.ServletContext对象："></a>03.ServletContext对象：</h2><ul>
<li><p>概念：<strong>代表整个web应用</strong>，可以和程序的容器(服务器)来通信</p>
</li>
<li><p>ServletContext：servlet container。</p>
</li>
</ul>
<h4 id="获取："><a href="#获取：" class="headerlink" title="获取："></a>获取：</h4><ol>
<li>通过request对象获取      request.getServletContext();</li>
<li>通过HttpServlet获取        this.getServletContext();</li>
</ol>
<h4 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h4><ol>
<li><p><strong>获取MIME类型：</strong></p>
<ul>
<li><strong>MIME类型</strong>：在互联网通信过程中定义的一种文件数据类型<ul>
<li>格式： 大类型/小类型   <strong>text/html        image/jpeg</strong></li>
</ul>
</li>
<li>获取：String <strong>getMimeType</strong>(String file)  </li>
</ul>
</li>
<li><p><strong>域对象：共享数据</strong></p>
<ul>
<li><p><strong>setAttribute(String name,Object value)</strong></p>
</li>
<li><p><strong>getAttribute(String name)</strong></p>
</li>
<li><p><strong>removeAttribute(String name)</strong>  </p>
</li>
<li><p>ServletContext对象范围：所有用户所有请求的数据。这个东西代表整个web应用，太大了，<strong>一般不怎么会用到他。</strong></p>
</li>
</ul>
</li>
<li><p><strong>获取文件的真实(服务器)路径</strong>（重点）</p>
<p>方法：String <strong>getRealPath</strong>(String path)  </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">	<span class="built_in">String</span> b = context.getRealPath(<span class="string">"/b.txt"</span>);<span class="comment">//web目录下资源访问</span></span><br><span class="line">	System.out.println(b);</span><br><span class="line">   </span><br><span class="line"><span class="built_in">String</span> c = context.getRealPath(<span class="string">"/WEB-INF/c.txt"</span>);<span class="comment">//WEB-INF目录下的资源访问</span></span><br><span class="line"> 	System.out.println(c);</span><br><span class="line">   </span><br><span class="line"> 	<span class="built_in">String</span> a = context.getRealPath(<span class="string">"/WEB-INF/classes/a.txt"</span>);<span class="comment">//src目录下的资源访问</span></span><br><span class="line"> 	System.out.println(a);</span><br></pre></td></tr></table></figure>





</li>
</ol>
<h2 id="0-4-案例："><a href="#0-4-案例：" class="headerlink" title="0.4 案例："></a>0.4 案例：</h2><blockquote>
<h4 id="文件下载需求："><a href="#文件下载需求：" class="headerlink" title="文件下载需求："></a>文件下载需求：</h4></blockquote>
<ol>
<li>页面显示超链接</li>
<li>点击超链接后弹出下载提示框</li>
<li>完成图片文件下载</li>
</ol>
<blockquote>
<h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4></blockquote>
<ol>
<li>超链接指向的资源如果能够被浏览器解析，则在浏览器中展示，如果不能解析，则弹出下载提示框。不满足需求</li>
<li>任何资源都必须弹出下载提示框</li>
<li><strong>使用响应头设置资源的打开方式：</strong><ul>
<li><strong>content-disposition：attachment;filename=xxx</strong></li>
</ul>
</li>
</ol>
<h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol>
<li><p>定义页面，编辑超链接href属性，指向Servlet，传递资源名称filename</p>
<ol start="2">
<li>定义Servlet<ul>
<li>获取文件名称        </li>
<li>使用字节输入流加载文件进内存</li>
<li><strong>指定response的响应头</strong>： content-disposition：attachment;filename=xxx</li>
<li>将数据写出到response输出流</li>
</ul>
</li>
</ol>
</li>
</ol>
<p><strong>downloadServlet</strong></p>
<h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><ul>
<li>中文文件问题<ul>
<li>解决思路：<ol>
<li>获取客户端使用的浏览器版本信息</li>
<li>根据不同的版本信息，设置filename的编码方式不同</li>
</ol>
</li>
</ul>
</li>
</ul>
<p><strong>DownLoadUtils</strong></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-06_Servlet&amp;HTTP&amp;Request</title>
    <url>/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-06-Servlet&amp;HTTP&amp;Request/</url>
    <content><![CDATA[<h3 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h3><ul>
<li>Servlet</li>
<li>HTTP协议</li>
<li>Request</li>
</ul>
<h2 id="0-1-Servlet："><a href="#0-1-Servlet：" class="headerlink" title="0.1 Servlet："></a>0.1 Servlet：</h2><blockquote>
<h4 id="Servlet的体系结构"><a href="#Servlet的体系结构" class="headerlink" title="Servlet的体系结构"></a>Servlet的体系结构</h4></blockquote>
<ul>
<li><pre><code class="cmd">Servlet -- 接口
    |
GenericServlet -- 抽象类    // 以后不用
    |
HttpServlet  -- 抽象类        //以后用这个
&lt;!--￼<span class="number">0</span>--&gt;
  请求方式 请求url 请求协议/版本

  GET /login.html    HTTP/<span class="number">1</span>.<span class="number">1</span>
  &lt;!--￼<span class="number">1</span>--&gt;


</code></pre>
</li>
</ul>
<ul>
<li>响应消息数据格式    </li>
</ul>
<h2 id="0-3-Request："><a href="#0-3-Request：" class="headerlink" title="0.3 Request："></a>0.3 Request：</h2><ul>
<li><p>request对象和response<strong>对象的原理</strong></p>
<ul>
<li>request和response<strong>对象是由服务器创建的</strong>。我们来使用它们</li>
<li>request<strong>对象是来获取请求消息</strong>，response<strong>对象是来设置响应消息</strong></li>
<li>例如：</li>
<li><img src="https://i.loli.net/2021/04/06/p2xSfETGXoQMw8h.png" alt="request&amp;response对象原理"></li>
</ul>
</li>
<li><p><strong>Request对象继承体系结构：</strong>    </p>
<ul>
<li><pre><code class="cmd">ServletRequest        --    接口
    |    继承
HttpServletRequest    -- 接口
    |    实现
org.apache.catalina.connector.RequestFacade 类(tomcat)
&lt;!--￼<span class="number">2</span>--&gt;
  CREATE DATABASE day14;
  USE day14;
  CREATE TABLE USER(
  id INT PRIMARY KEY AUTO_INCREMENT,
  username VARCHAR(<span class="number">32</span>) UNIQUE <span class="keyword">NOT</span> NULL,
  PASSWORD VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> NULL
  );</code></pre>
</li>
</ul>
</li>
</ul>
<ol start="3">
<li><p>创建包domain,创建类User</p>
</li>
<li><p>创建包util,编写工具类JDBCUtils</p>
</li>
<li><p>创建包dao,创建类UserDao,提供login方法</p>
<ul>
<li><strong>学会使用test检验文件的正确性</strong>（UserDao完成后，即刻开始测试）</li>
</ul>
</li>
<li><p>编写servlet.LoginServlet类</p>
<ul>
<li>编写FailServlet和SuccessServlet类</li>
</ul>
</li>
<li><p>login.html中form表单的action路径的写法</p>
<ul>
<li><strong>虚拟目录+Servlet的资源路径</strong></li>
</ul>
</li>
<li><p>BeanUils工具类，简化数据封装</p>
<ul>
<li><strong>用于封装JavaBean</strong></li>
<li><strong>JavaBean</strong>：标准的Java类</li>
</ul>
</li>
</ol>
<h4 id="4）要求："><a href="#4）要求：" class="headerlink" title="4）要求："></a>4）要求：</h4><ol>
<li><strong>类必须被public修饰</strong></li>
<li><strong>必须提供空参的构造器</strong></li>
<li><strong>成员变量必须使用private修饰</strong></li>
<li><strong>提供公共setter和getter方法</strong></li>
</ol>
<h2 id="0-4-BeanUtils工具类"><a href="#0-4-BeanUtils工具类" class="headerlink" title="0.4 BeanUtils工具类"></a>0.4 BeanUtils工具类</h2><blockquote>
<h4 id="功能：封装数据"><a href="#功能：封装数据" class="headerlink" title="功能：封装数据"></a>功能：封装数据</h4></blockquote>
<ul>
<li><p>概念：</p>
</li>
<li><p>成员变量：</p>
</li>
<li><p>属性：setter和getter方法截取后的产物</p>
<ul>
<li>例如：getUsername() –&gt; Username–&gt; username</li>
</ul>
</li>
<li><p><strong>方法</strong>：</p>
<ul>
<li>setProperty()</li>
<li>getProperty()</li>
<li><strong>populate</strong>(Object obj , Map map)：<strong>将map集合的键值对信息，封装到对应的JavaBean对象中</strong>        </li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-05_Tomcat&amp;Servlet</title>
    <url>/2021/04/06/JavaWeb/Tomcat&amp;Servlet/List-05-Tomcat&amp;Servlet/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>web相关概念回顾</li>
<li>web服务器软件：<strong>Tomcat</strong></li>
<li>Servlet入门学习</li>
</ul>
<h2 id="0-1-web相关概念回顾"><a href="#0-1-web相关概念回顾" class="headerlink" title="0.1 web相关概念回顾"></a>0.1 web相关概念回顾</h2><ol>
<li><p><strong>软件架构</strong></p>
<ol>
<li>C/S：客户端/服务器端</li>
<li>B/S：浏览器/服务器端</li>
</ol>
</li>
<li><p><strong>资源分类</strong></p>
<ol>
<li>静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源.静态资源可以直接被浏览器解析<ul>
<li>如： html,css,JavaScript</li>
</ul>
</li>
<li>动态资源：每个用户访问相同资源后，得到的结果可能不一样。称为动态资源。动态资源被访问后，需要先转换为静态资源，再返回给浏览器<ul>
<li>如：servlet/jsp,php,asp….</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>网络通信三要素</strong></p>
<ol>
<li>IP：电子设备(计算机)在网络中的唯一标识。</li>
<li>端口：应用程序在计算机中的唯一标识。 0~65536</li>
<li>传输协议：规定了数据传输的规则</li>
</ol>
<ul>
<li><strong>基础协议</strong>：<ul>
<li>tcp：安全协议，三次握手。 速度稍慢</li>
<li>udp：不安全协议。 速度快</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="web服务器软件："><a href="#web服务器软件：" class="headerlink" title="web服务器软件："></a>web服务器软件：</h3><ul>
<li>服务器：<strong>安装了服务器软件的计算机</strong></li>
<li>服务器软件：<strong>接收用户的请求，处理请求，做出响应</strong><ul>
<li>web服务器软件：接收用户的请求，处理请求，做出响应。<ul>
<li>在web服务器软件中，可以部署web项目，让用户通过浏览器来访问这些项目</li>
<li>web容器</li>
</ul>
</li>
</ul>
</li>
<li><strong>常见的java相关的web服务器软件</strong>：<ul>
<li>webLogic：oracle公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</li>
<li>webSphere：IBM公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</li>
<li>JBOSS：JBOSS公司的，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</li>
<li>Tomcat：Apache基金组织，中小型的JavaEE服务器，仅仅支持少量的JavaEE规范servlet/jsp。开源的，免费的。</li>
<li>JavaEE：Java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="0-2-Tomcat："><a href="#0-2-Tomcat：" class="headerlink" title="0.2 Tomcat："></a>0.2 Tomcat：</h2><ul>
<li>web服务器软件</li>
</ul>
<h4 id="1）快速入门"><a href="#1）快速入门" class="headerlink" title="1）快速入门"></a>1）快速入门</h4><ol>
<li><p>下载：<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></p>
</li>
<li><p>安装：解压压缩包即可。</p>
<ul>
<li>注意：安装目录建议不要有中文和空格</li>
</ul>
</li>
<li><p>卸载：删除目录就行了</p>
</li>
<li><p><strong>启动</strong>：</p>
<ul>
<li>bin/startup.bat ,双击运行该文件即可</li>
<li><strong>访问</strong>：浏览器输入：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> 回车访问自己<ul>
<li>http://别人的ip:8080 访问别人</li>
</ul>
</li>
</ul>
</li>
</ol>
<ul>
<li><strong>可能遇到的问题</strong>：<ul>
<li>黑窗口一闪而过：<ul>
<li>原因： 没有正确配置JAVA_HOME环境变量</li>
<li>解决方案：正确配置JAVA_HOME环境变量</li>
</ul>
</li>
<li><strong>启动报错</strong>：<ul>
<li>暴力：找到占用的端口号，并且找到对应的进程，杀死该进程<ul>
<li>netstat -ano</li>
</ul>
</li>
<li>温柔：修改自身的端口号<ul>
<li>conf/server.xml</li>
<li>&lt;Connector port=”8888” protocol=”HTTP/1.1”<pre><code>connectionTimeout=&quot;20000&quot;
redirectPort=&quot;8445&quot; /&gt;</code></pre></li>
</ul>
</li>
</ul>
</li>
<li><strong>一般会将tomcat的默认端口号修改为80</strong>。80端口号是http协议的默认端口号。<ul>
<li>好处：在访问时，就不用输入端口号</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol start="5">
<li><p><strong>关闭</strong>：</p>
<ol>
<li>正常关闭：<ul>
<li>bin/shutdown.bat</li>
<li>ctrl+c</li>
</ul>
</li>
<li>强制关闭：<ul>
<li>点击启动窗口的<strong>×</strong></li>
</ul>
</li>
</ol>
</li>
</ol>
<h4 id="2）配置"><a href="#2）配置" class="headerlink" title="2）配置:"></a>2）配置:</h4><ul>
<li><p><strong>部署项目的方式</strong>：</p>
<ul>
<li><p><strong>1、直接将项目放到webapps目录下即可。</strong></p>
<ul>
<li><p>/hello：项目的访问路径</p>
</li>
<li><pre><code class="cmd">--&gt; 虚拟目录
例如：
localhost/hello
&lt;!--￼<span class="number">0</span>--&gt;</code></pre>
</li>
</ul>
</li>
<li><p><strong>3、在conf\Catalina\localhost创建任意名称的xml文件</strong>。在文件中编写</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Context docBase&#x3D;&quot;D:\hello&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>虚拟目录：xml文件的名称</li>
</ul>
</li>
</ul>
</li>
<li></li>
<li><h4 id="静态项目和动态项目："><a href="#静态项目和动态项目：" class="headerlink" title="静态项目和动态项目："></a>静态项目和动态项目：</h4><ul>
<li><p>目录结构</p>
<ul>
<li><p>Java<strong>动态项目</strong>的目录结构：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-- 项目的根目录</span><br><span class="line">		-- WEB-INF目录：</span><br><span class="line">			-- web.xml：web项目的核心配置文件</span><br><span class="line">			-- classes目录：放置字节码文件的目录</span><br><span class="line">			-- lib目录：放置依赖的jar包</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
</li>
</ul>
<pre><code>* 将Tomcat集成到IDEA中，并且创建JavaEE的项目，部署项目。</code></pre><ul>
<li><p><strong>tomcat目录结构</strong></p>
<ul>
<li><img src="https://i.loli.net/2021/04/06/nFoKvpS5iXZHkfm.png" alt="tomcat目录结构"></li>
</ul>
</li>
</ul>
<h2 id="0-3-Servlet：server-applet"><a href="#0-3-Servlet：server-applet" class="headerlink" title="0.3 Servlet：server applet"></a>0.3 Servlet：server applet</h2><ul>
<li><strong>概念：运行在服务器端的小程序</strong><ul>
<li>Servlet就是一个接口，定义了Java类被浏览器访问到    (tomcat 识别)的规则。</li>
<li>将来我们自定义一个类，实现Servlet接口，复写方法。</li>
<li>例如：<img src="https://i.loli.net/2021/04/06/G8vxts6UupIPH1z.png" alt="Servlet"></li>
</ul>
</li>
</ul>
<h4 id="1）快速入门："><a href="#1）快速入门：" class="headerlink" title="1）快速入门："></a>1）快速入门：</h4><ol>
<li><p>创建JavaEE项目</p>
</li>
<li><p>定义一个类，实现Servlet接口</p>
<ul>
<li><pre><code>public class ServletDemo1 implements Servlet
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">3. 实现接口中的抽象方法</span><br><span class="line"></span><br><span class="line">4. 配置Servlet</span><br><span class="line"></span><br><span class="line">   在web.xml中配置：</span><br><span class="line"></span><br><span class="line">   &#96;&#96;&#96;xml</span><br><span class="line">   &lt;!--配置Servlet --&gt;</span><br><span class="line">   &lt;servlet&gt;</span><br><span class="line">   &lt;servlet-name&gt;demo1&lt;&#x2F;servlet-name&gt;</span><br><span class="line">       &lt;servlet-class&gt;cn.itcast.web.servlet.ServletDemo1&lt;&#x2F;servlet-class&gt;</span><br><span class="line">   &lt;&#x2F;servlet&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;servlet-mapping&gt;</span><br><span class="line">       &lt;servlet-name&gt;demo1&lt;&#x2F;servlet-name&gt;</span><br><span class="line">       &lt;url-pattern&gt;&#x2F;demo1&lt;&#x2F;url-pattern&gt;</span><br><span class="line">   &lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure>


</code></pre></li>
</ul>
</li>
</ol>
<h4 id="2）执行原理："><a href="#2）执行原理：" class="headerlink" title="2）执行原理："></a>2）执行原理：</h4><ol>
<li>当服务器接受到客户端浏览器的请求后，会解析请求URL路径，<strong>获取访问的Servlet的资源路径</strong></li>
<li><strong>查找web.xml文件</strong>，是否有对应的<url-pattern>标签体内容。</li>
<li><strong>如果有</strong>，则在找到对应的<servlet-class>全类名</li>
<li><strong>tomcat会将字节码文件加载进内存Class.forName()，并且创建其对象 cls.newInstance()</strong></li>
<li><strong>调用其方法(Service)</strong></li>
</ol>
<h4 id="3）Servlet中的生命周期方法："><a href="#3）Servlet中的生命周期方法：" class="headerlink" title="3）Servlet中的生命周期方法："></a>3）Servlet中的生命周期方法：</h4><ol>
<li><strong>被创建</strong>：执行init方法，只执行一次<ul>
<li>Servlet什么时候被创建？<ul>
<li><strong>默认情况下</strong>，第一次被访问时，Servlet被创建<ul>
<li>可以<strong>配置执行Servlet的创建时机。</strong><ul>
<li>在<servlet>标签下配置<ol>
<li><strong>第一次被访问时，创建</strong><ul>
<li><load-on-startup>的值为负数</li>
</ul>
</li>
<li><strong>在服务器启动时，创建</strong><ul>
<li><load-on-startup>的值为0或正整数</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li>Servlet的 Init 方法，只执行一次，说明一个Servlet在内存中只存在一个对象，<strong>Servlet是单例的</strong></li>
<li>多个用户同时访问时，可能存在线程安全问题。<ul>
<li><strong>解决</strong>：<strong>尽量不要在Servlet中定义成员变量</strong>。即使定义了成员变量，也不要对修改值</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>提供服务</strong>：执行service方法，执行多次<ul>
<li>每次访问Servlet时，Service方法都会被调用一次。</li>
</ul>
</li>
<li><strong>被销毁</strong>：执行destroy方法，只执行一次<ul>
<li>Servlet被销毁时执行。服务器关闭时，Servlet被销毁</li>
<li>只有服务器正常关闭时，才会执行destroy方法。</li>
<li><strong>destroy方法在Servlet被销毁之前执行，一般用于释放资源</strong></li>
</ul>
</li>
</ol>
<h2 id="0-4-Servlet3-0："><a href="#0-4-Servlet3-0：" class="headerlink" title="0.4 Servlet3.0："></a>0.4 Servlet3.0：</h2><ul>
<li><h4 id="好处："><a href="#好处：" class="headerlink" title="好处："></a><strong>好处</strong>：</h4><ul>
<li>支持注解配置。<strong>可以不需要</strong>web.xml了。</li>
</ul>
</li>
</ul>
<h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol>
<li>创建JavaEE项目，选择Servlet的版本3.0以上，可以不创建web.xml</li>
<li>定义一个类，实现Servlet接口</li>
<li>复写方法</li>
<li><strong>在类上使用@WebServlet注解，进行配置</strong></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"资源路径"</span>)</span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> WebServlet &#123;</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;<span class="comment">//相当于&lt;Servlet-name&gt;</span></span><br><span class="line"></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//代表urlPatterns()属性配置</span></span><br><span class="line"></span><br><span class="line">    String[] urlPatterns() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//相当于&lt;url-pattern&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">loadOnStartup</span><span class="params">()</span> <span class="keyword">default</span> -1</span>;<span class="comment">//相当于&lt;load-on-startup&gt;</span></span><br><span class="line"></span><br><span class="line">    WebInitParam[] initParams() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">asyncSupported</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">smallIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">largeIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">displayName</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="0-5-IDEA与tomcat的相关配置"><a href="#0-5-IDEA与tomcat的相关配置" class="headerlink" title="0.5 IDEA与tomcat的相关配置"></a>0.5 IDEA与tomcat的相关配置</h2><ol>
<li><p>IDEA会为每一个tomcat部署的项目单独建立一份配置文件</p>
<ul>
<li>查看控制台的<strong>log</strong>：<strong>Using CATALINA_BASE</strong>:   “C:\Users\fqy.IntelliJIdea2018.1\system\tomcat_itcast”</li>
</ul>
</li>
<li><p><strong>工作空间项目和 tomcat部署的web项目</strong></p>
<ul>
<li><strong>tomcat真正访问的是“tomcat部署的web项目”，</strong></li>
<li>“<strong>tomcat部署的web项目”对应着”工作空间项目” 的web目录下的所有资源</strong></li>
<li><strong>WEB-INF目录下的资源不能被浏览器直接访问。</strong></li>
</ul>
</li>
<li><p><strong>断点调试：使用”小虫子”启动 dubug 启动</strong></p>
</li>
</ol>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-10综合案例</title>
    <url>/2021/04/06/JavaWeb/List-10%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li><p>简单功能</p>
<ul>
<li>列表查询</li>
<li>登录</li>
<li>添加</li>
<li>删除</li>
<li>修改</li>
</ul>
</li>
<li><p>复杂功能</p>
<ul>
<li>删除选中</li>
<li>分页查询<ul>
<li>好处：<ul>
<li>减轻服务器内存的开销</li>
<li>提升用户体验</li>
</ul>
</li>
</ul>
</li>
<li>复杂条件查询</li>
</ul>
</li>
</ul>
<h2 id="0-1-简单功能"><a href="#0-1-简单功能" class="headerlink" title="0.1 简单功能"></a>0.1 简单功能</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ol>
<li>调整页面，加入验证码功能</li>
<li>代码实现</li>
</ol>
<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p><img src="https://i.loli.net/2021/04/06/ouSU7zgOWshtDA8.png" alt="3.添加功能"></p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><img src="https://i.loli.net/2021/04/06/ouSU7zgOWshtDA8.png" alt="4.删除功能"></p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p><img src="https://i.loli.net/2021/04/06/ouSU7zgOWshtDA8.png" alt="5.修改功能"></p>
<h2 id="0-2-复杂功能"><a href="#0-2-复杂功能" class="headerlink" title="0.2 复杂功能"></a>0.2 复杂功能</h2><h3 id="删除选中"><a href="#删除选中" class="headerlink" title="删除选中"></a>删除选中</h3><ul>
<li><img src="https://i.loli.net/2021/03/26/bMwvQxP7iluJLqC.png" alt=""></li>
</ul>
<ul>
<li><strong>提交被选中项的最佳方案是</strong>：数据表格外层，<strong>套上一层form表单</strong></li>
<li>没有成功     <strong>应该是表单没有提交成功</strong>  delServletServlet无法获取到，所选中的项目</li>
</ul>
<h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><ul>
<li><p><strong>解决实际问题的注意事项</strong></p>
<ul>
<li>清楚输入和输出，解决输入和输出之间的转化。也就是设计算法，想好问题的解决思路。</li>
<li>算法的定义：根据输入，运行有限的代码语句，从而得到输出。</li>
</ul>
</li>
<li><p><img src="https://i.loli.net/2021/04/05/U1Yz8WmugT6wi7l.png" alt=""></p>
</li>
<li><p><img src="https://i.loli.net/2021/04/05/Y7sZFBhv2TKHC5n.png" alt=""></p>
<ul>
<li><p><strong>代码实现步骤</strong></p>
<ul>
<li>根据思路，逐步实现各个方法和功能</li>
<li>例如，按照构思思路，先完成PageBean，<strong>servlet</strong>，<strong>然后继续完成</strong>service，dao层的相关方法。</li>
</ul>
</li>
<li><p>分页显示信息，取代了全部信息直接展示。</p>
</li>
</ul>
</li>
</ul>
<h2 id="案例：用户信息列表展示"><a href="#案例：用户信息列表展示" class="headerlink" title="案例：用户信息列表展示"></a>案例：用户信息列表展示</h2><ul>
<li>需求：用户信息的增删改查操作</li>
</ul>
<h4 id="设计："><a href="#设计：" class="headerlink" title="设计："></a>设计：</h4><ol>
<li><p>技术选型：<strong>Servlet+JSP+MySQL+JDBCTempleat+Duird+BeanUtilS+tomcat</strong></p>
</li>
<li><p>数据库设计：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database day12; -- 创建数据库</span><br><span class="line">use day12; 			   -- 使用数据库</span><br><span class="line">create table user(   -- 创建表</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(20) not null,</span><br><span class="line">	gender varchar(5),</span><br><span class="line">	age int,</span><br><span class="line">	address varchar(32),</span><br><span class="line">	qq	varchar(20),</span><br><span class="line">	email varchar(50),</span><br><span class="line">    username varchar(10),</span><br><span class="line">    password varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li><p>开发：</p>
<ul>
<li>环境搭建<ul>
<li>创建数据库环境</li>
<li>创建项目，导入需要的jar包</li>
<li>编码</li>
</ul>
</li>
</ul>
</li>
<li><p>测试</p>
</li>
<li><p>部署运维</p>
</li>
</ol>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-11_Filter&amp;Listener</title>
    <url>/2021/04/06/JavaWeb/List-11-Filter&amp;Listener/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>Filter：过滤器</li>
<li>Listener：监听器</li>
</ul>
<h2 id="0-1-Filter：过滤器"><a href="#0-1-Filter：过滤器" class="headerlink" title="0.1 Filter：过滤器"></a>0.1 Filter：过滤器</h2><ol>
<li><h4 id="概念："><a href="#概念：" class="headerlink" title="概念："></a><strong>概念</strong>：</h4><ul>
<li>生活中的过滤器：净水器,空气净化器，土匪、</li>
<li>web中的过滤器：当访问服务器的资源时，过滤器可以将请求拦截下来，完成一些特殊的功能。</li>
<li><strong>过滤器的作用</strong>：<ul>
<li><strong>一般用于完成通用的操作</strong>。如：<strong>登录验证</strong>、统一编码处理、敏感字符过滤…</li>
</ul>
</li>
<li>例如，<ul>
<li><img src="https://i.loli.net/2021/04/07/G5ZSBs8TFJazA7C.png" alt="1.Filter过滤器"></li>
</ul>
</li>
</ul>
</li>
</ol>
<h4 id="2）快速入门："><a href="#2）快速入门：" class="headerlink" title="2）快速入门："></a>2）快速入门：</h4><ul>
<li><p>步骤：</p>
<ol>
<li><p>定义一个类，实现接口Filter</p>
</li>
<li><p>复写方法</p>
</li>
<li><p>配置拦截路径</p>
<ol>
<li>web.xml</li>
<li>注解(<strong>常用</strong>)</li>
</ol>
</li>
</ol>
</li>
<li><p>代码：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)<span class="comment">//访问所有资源之前，都会执行该过滤器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterDemo1</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"filterDemo1被执行了...."</span>);<span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>​            </p>
<h4 id="3）过滤器细节："><a href="#3）过滤器细节：" class="headerlink" title="3）过滤器细节："></a>3）过滤器细节：</h4><ol>
<li>web.xml配置    <filter>
       <filter-name>demo1</filter-name>
       <filter-class>cn.itcast.web.filter.FilterDemo1</filter-class>
   </filter>
   <filter-mapping>
       <filter-name>demo1</filter-name>
           <!-- 拦截路径 -->
      <url-pattern>/*</url-pattern>
  </filter-mapping></li>
<li><strong>过滤器执行流程</strong><ol>
<li>执行过滤器</li>
<li>执行放行后的资源</li>
<li>回来执行过滤器放行代码下边的代码</li>
</ol>
</li>
<li><strong>过滤器生命周期方法</strong><ul>
<li>init：在服务器启动后，会创建Filter对象，然后调用init方法。只执行一次。<strong>用于加载资源</strong></li>
<li>doFilter：每一次请求被拦截资源时，会执行。执行多次</li>
<li>destroy：在服务器关闭后，Filter对象被销毁。如果服务器是正常关闭，则会执行destroy方法。只执行一次。<strong>用于释放资源</strong></li>
</ul>
</li>
</ol>
<p><strong>4.过滤器配置详解</strong></p>
<ul>
<li><p><strong>拦截路径配置</strong>：</p>
<ul>
<li><p>具体资源路径： /index.jsp   只有访问index.jsp资源时，过滤器才会被执行</p>
</li>
<li><p>拦截目录： /user/*    访问/user下的所有资源时，过滤器都会被执行</p>
</li>
<li><p>后缀名拦截： *.jsp        访问所有后缀名为jsp资源时，过滤器都会被执行</p>
</li>
<li><p>拦截所有资源：/*        访问所有资源时，过滤器都会被执行</p>
</li>
</ul>
</li>
<li><p><strong>拦截方式配置</strong>：资源被访问的方式</p>
<ul>
<li><p><strong>注解配置</strong>：</p>
<ul>
<li><p>设置dispatcherTypes属性</p>
<ol>
<li>REQUEST：默认值。<strong>浏览器直接请求资源</strong></li>
<li>FORWARD：<strong>转发访问资源</strong></li>
<li>INCLUDE：包含访问资源</li>
<li>ERROR：错误跳转资源</li>
<li>ASYNC：异步访问资源</li>
</ol>
</li>
</ul>
</li>
<li><p><strong>web.xml配置</strong></p>
<ul>
<li>设置<dispatcher></dispatcher>标签即可</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>5、<strong>过滤器链</strong>(配置多个过滤器)</p>
<ul>
<li><strong>执行顺序</strong>：如果有两个过滤器：过滤器1和过滤器2<ol>
<li>过滤器1</li>
<li>过滤器2</li>
<li>资源执行</li>
<li>过滤器2</li>
<li>过滤器1 </li>
</ol>
</li>
</ul>
<ul>
<li><strong>过滤器先后顺序问题</strong>：<ol>
<li>注解配置：<strong>按照类名的字符串比较规则比较</strong>，值小的先执行<ul>
<li>例如： AFilter 和 BFilter，AFilter就先执行了。</li>
</ul>
</li>
<li>web.xml配置： <filter-mapping>谁定义在上边，谁先执行</li>
</ol>
</li>
</ul>
<h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><h4 id="1）案例1-登录验证"><a href="#1）案例1-登录验证" class="headerlink" title="1）案例1_登录验证"></a>1）案例1_登录验证</h4><ul>
<li>需求：<ol>
<li>访问day17_case案例的资源。验证其是否登录</li>
<li>如果登录了，则直接放行。</li>
<li>如果没有登录，则跳转到登录页面，提示”您尚未登录，请先登录”。</li>
</ol>
</li>
<li><img src="https://i.loli.net/2021/04/07/Hk61AnxV8JeDGWa.png" alt="2.案例1_登录验证"></li>
</ul>
<h4 id="2）案例2-敏感词汇过滤"><a href="#2）案例2-敏感词汇过滤" class="headerlink" title="2）案例2_敏感词汇过滤"></a>2）案例2_敏感词汇过滤</h4><ul>
<li><p>需求：</p>
<ol>
<li>对day17_case案例录入的数据进行敏感词汇过滤</li>
<li>敏感词汇参考《敏感词汇.txt》</li>
<li>如果是敏感词汇，替换为 *** </li>
</ol>
</li>
<li><p><strong>分析</strong>：</p>
<ol>
<li>对request对象进行增强。增强获取参数相关方法</li>
<li>放行。传递代理对象</li>
<li><img src="https://i.loli.net/2021/04/07/AaySZqpg81veobR.png" alt="3.过滤敏感词汇"></li>
</ol>
</li>
</ul>
<h4 id="3）增强对象的功能："><a href="#3）增强对象的功能：" class="headerlink" title="3）增强对象的功能："></a>3）增强对象的功能：</h4><ul>
<li><p><strong>设计模式</strong>：<strong>一些通用的解决固定问题的方式</strong></p>
<ol>
<li><p>装饰模式</p>
</li>
<li><h4 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h4><ol>
<li>概念：<ul>
<li>真实对象：被代理的对象</li>
<li>代理对象：</li>
<li>代理模式：代理对象代理真实对象，达到增强真实对象功能的目的</li>
<li><img src="https://i.loli.net/2021/04/07/uKYabAjZHEoWTIi.png" alt="4.代理"></li>
</ul>
</li>
<li>实现方式：<pre><code>    1. 静态代理：有一个类文件描述代理模式
2. 动态代理：在内存中形成代理类</code></pre></li>
<li><strong>实现步骤</strong>：<ol>
<li>代理对象和真实对象实现相同的接口</li>
<li>代理对象 = <strong>Proxy.newProxyInstance( );</strong></li>
<li>使用代理对象调用方法。</li>
<li>增强方法</li>
</ol>
</li>
<li><strong>增强方式</strong>：<ul>
<li>增强参数列表</li>
<li>增强返回值类型</li>
<li>增强方法体执行逻辑</li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
</ul>
<h2 id="0-2-Listener：监听器"><a href="#0-2-Listener：监听器" class="headerlink" title="0.2 Listener：监听器"></a>0.2 Listener：监听器</h2><ul>
<li><p><strong>概念</strong>：web的三大组件之一。</p>
<ul>
<li><h4 id="事件监听机制"><a href="#事件监听机制" class="headerlink" title="事件监听机制"></a>事件监听机制</h4><ul>
<li>事件    ：一件事情</li>
<li>事件源 ：事件发生的地方</li>
<li>监听器 ：一个对象</li>
<li>注册监听：将事件、事件源、监听器绑定在一起。 当事件源上发生某个事件后，执行监听器代码</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="ServletContextListener："><a href="#ServletContextListener：" class="headerlink" title="ServletContextListener："></a>ServletContextListener：</h3><blockquote>
<h4 id="监听ServletContext对象的创建和销毁"><a href="#监听ServletContext对象的创建和销毁" class="headerlink" title="监听ServletContext对象的创建和销毁"></a>监听ServletContext对象的创建和销毁</h4></blockquote>
<ul>
<li><p>方法：</p>
<ul>
<li>void <strong>contextDestroyed</strong>(ServletContextEvent sce) ：ServletContext<strong>对象被销毁之前会调用该方法</strong></li>
<li>void <strong>contextInitialized</strong>(ServletContextEvent sce) ：ServletContext<strong>对象创建后会调用该方法</strong></li>
</ul>
</li>
<li><p><strong>步骤</strong>：</p>
<ol>
<li><p>定义一个类，实现ServletContextListener接口</p>
</li>
<li><p>复写方法</p>
</li>
<li><p><strong>配置</strong></p>
<ol>
<li><p>web.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;listener&gt;</span><br><span class="line">	&lt;listener-class&gt;cn.itcast.web.listener.ContextLoaderListener&lt;&#x2F;listener-class&gt;   &lt;&#x2F;listener&gt;	</span><br><span class="line"></span><br><span class="line">* 指定初始化参数&lt;context-param&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注解：</p>
<ul>
<li>@<strong>WebListener</strong></li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>List-09_EL&amp;JSTL笔记</title>
    <url>/2021/04/05/JavaWeb/JSP/List-09_EL&amp;JSTL%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li><p><strong>JSP入门</strong></p>
<ul>
<li>指令</li>
<li>注释</li>
<li>内置对象</li>
</ul>
</li>
<li><p>MVC开发模式</p>
</li>
<li><p>EL表达式</p>
</li>
<li><p><strong>JSTL标签</strong></p>
</li>
<li><p>三层架构</p>
</li>
</ul>
<h2 id="0-1-JSP"><a href="#0-1-JSP" class="headerlink" title="0.1 JSP"></a>0.1 JSP</h2><h4 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h4><ul>
<li>作用：<strong>用于配置JSP页面，导入资源文件</strong></li>
<li>格式：<ul>
<li><strong>&lt;%@ 指令名称 属性名1=属性值1 属性名2=属性值2 … %&gt;</strong></li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>分类</strong>：</p>
<ul>
<li><p><strong>page： 配置JSP页面的</strong></p>
<ul>
<li><strong>contentType</strong>：<strong>等同于response.setContentType()</strong><ul>
<li>设置响应体的mime类型以及字符集</li>
<li>设置当前JSP页面的编码（<strong>只能是高级的IDE才能生效</strong>，如果使用低级工具，则需要设置pageEncoding属性设置当前页面的字符集）</li>
</ul>
</li>
<li><strong>import</strong>：导包</li>
<li><strong>errorPage</strong>：<strong>当前页面发生异常后，会自动跳转到指定的错误页面</strong><ul>
<li><strong>isErrorPage</strong>：<strong>标识当前页面是否是错误页面</strong>。<strong>和 errorPage 配套使用</strong><ul>
<li><strong>true</strong>：是，可以使用内置对象exception；<strong>false</strong>：<strong>否。默认值。不可以使用内置对象exception</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>include    ： 页面包含的。导入页面的资源文件</strong></p>
<ul>
<li>&lt;%@include file=”top.jsp”%&gt;</li>
</ul>
</li>
<li><p><strong>taglib ： 导入资源</strong></p>
<ul>
<li>&lt;%@ taglib prefix=”c” uri=”<a href="http://java.sun.com/jsp/jstl/core&quot;" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/core&quot;</a> %&gt;</li>
<li><strong>prefix：前缀，自定义的</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="注释"><a href="#注释" class="headerlink" title="注释:"></a>注释:</h4><ol>
<li><p>html注释：</p>
<!-- -->:只能注释html代码片段
</li>
<li><p><strong>JSP注释：推荐使用</strong><br><strong>&lt;%– –%&gt;：可以注释所有</strong></p>
</li>
</ol>
<ul>
<li>*<em>使用快捷键即可生成相应的注释方式。    Ctrl + Shift + / *</em></li>
</ul>
<h4 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h4><ul>
<li><p><strong>在JSP页面中不需要创建，直接使用的对象</strong></p>
</li>
<li><p>一共有9个：</p>
<ul>
<li>​    <strong>变量名                    真实类型                            作用</strong></li>
<li><strong>pageContext            PageContext                       当前页面共享数据，还可以获取其他八个内置对象</strong></li>
<li><strong>request                     HttpServletRequest             一次请求访问的多个资源(转发)</strong></li>
<li><strong>session                    HttpSession                         一次会话的多个请求间</strong></li>
<li><strong>application               ServletContext                     所有用户间共享数据</strong></li>
<li><strong>response                  HttpServletResponse          响应对象</strong></li>
</ul>
</li>
</ul>
<ul>
<li><strong>page                        Object                                  当前页面(Servlet)的对象  this</strong></li>
<li><strong>out                           JspWriter                              输出对象，数据输出到页面上</strong></li>
<li><strong>config                      ServletConfig                       Servlet的配置对象</strong></li>
<li><strong>exception                 Throwable                           异常对象</strong></li>
</ul>
<p>​    </p>
<h2 id="0-2-MVC：开发模式"><a href="#0-2-MVC：开发模式" class="headerlink" title="0.2 MVC：开发模式"></a>0.2 MVC：开发模式</h2><ul>
<li>JSP演变历史<ul>
<li>早期只有servlet，只能使用response输出标签数据，非常麻烦</li>
<li>后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作</li>
<li><strong>再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性</strong></li>
</ul>
</li>
</ul>
<h4 id="MVC："><a href="#MVC：" class="headerlink" title="MVC："></a>MVC：</h4><ol>
<li><strong>M：Model，模型。JavaBean</strong><ul>
<li><strong>完成具体的业务操作，如：查询数据库，封装对象</strong></li>
</ul>
</li>
<li><strong>V：View，视图。JSP</strong><ul>
<li><strong>展示数据</strong></li>
</ul>
</li>
<li><strong>C：Controller，控制器。Servlet</strong><ul>
<li><strong>获取用户的输入</strong></li>
<li><strong>调用模型</strong></li>
<li><strong>将数据交给视图进行展示</strong></li>
</ul>
</li>
</ol>
<ul>
<li><strong>优缺点：</strong><ul>
<li>优点：<ul>
<li>耦合性低，方便维护，可以利于分工协作</li>
<li>重用性高</li>
</ul>
</li>
<li>缺点：<ul>
<li>使得项目架构变得复杂，对开发人员要求高</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="03-EL表达式"><a href="#03-EL表达式" class="headerlink" title="03.EL表达式"></a>03.EL表达式</h2><ul>
<li><p>概念：Expression Language 表达式语言</p>
</li>
<li><p>作用：<strong>替换和简化</strong>jsp页面中java代码的编写</p>
</li>
<li><p><strong>语法：${表达式}</strong>,例如 ${user.id}</p>
</li>
<li><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><ul>
<li><strong>JSP默认支持el表达式的</strong>。如果要忽略el表达式<ul>
<li>忽略当前jsp页面中所有的el表达式 设置jsp中page指令中：<strong>isELIgnored=”true”</strong>    </li>
<li>忽略单个el表达式  ${表达式} ：</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><blockquote>
<h4 id="运算："><a href="#运算：" class="headerlink" title="运算："></a>运算：</h4></blockquote>
<ul>
<li>运算符：<ul>
<li>算数运算符： <strong>+ - *    /(div)    %(mod)</strong></li>
<li>比较运算符： &gt; &lt; &gt;= &lt;= == !=</li>
<li>逻辑运算符： <strong>&amp;&amp; (and)     || (or)    ! (not)</strong></li>
<li><strong>空运算符： empty</strong><ul>
<li><strong>功能</strong>：用于判断字符串、集合、数组对象是否为null或者长度是否为0<ul>
<li><strong>${empty list}</strong>：判断字符串、集合、数组对象是否为null或者长度为0</li>
<li><strong>${not empty str}</strong>：表示判断字符串、集合、数组对象是否不为null 并且 长度&gt;0</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="获取值"><a href="#获取值" class="headerlink" title="获取值"></a>获取值</h4></blockquote>
<ul>
<li>el表达式<strong>只能从域对象中获取值</strong></li>
</ul>
<p><strong>语法</strong>：</p>
<ul>
<li><p><strong>1.${域名称.键名}：从指定域中获取指定键的值</strong></p>
<ul>
<li><strong>域名称：</strong><ul>
<li>pageScope        –&gt; pageContext</li>
<li>requestScope     –&gt; request</li>
<li>sessionScope     –&gt; session</li>
<li>applicationScope –&gt; application（ServletContext）</li>
</ul>
</li>
</ul>
<p>例如：在request域中存储了name=张三，获取name对应的value值</p>
<p>​    获取：${requestScope.name}</p>
</li>
<li><p><strong>2. ${ 键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。</strong></p>
</li>
<li><p><strong>3.获取对象、List集合、Map集合的值</strong></p>
<ul>
<li>对象：${域名称.键名.属性名}    本质上会去调用对象的getter方法</li>
<li>List集合：${域名称.键名[索引]}</li>
<li>Map集合：<ul>
<li>${域名称.键名.key名称}</li>
<li>${域名称.键名[“key名称”]}</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>注意：</strong></p>
<ul>
<li><p><strong>对象的属性</strong></p>
<ul>
<li><p>setter或getter方法，去掉set或get，在将剩余部分，首字母变为小写。</p>
<p>例如，<strong>setName –&gt; Name –&gt; name</strong>；<strong>getBirStr –&gt; BirStr –&gt; birStr</strong></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="隐式对象："><a href="#隐式对象：" class="headerlink" title="隐式对象："></a>隐式对象：</h4><ul>
<li><p>el表达式中有11个隐式对象</p>
<ul>
<li><p><strong>pageContext：</strong></p>
<ul>
<li><p><strong>获取JSP其他八个内置对象</strong></p>
<p><strong>例如</strong>，常用方法，<strong>${pageContext.request.contextPath}：动态获取虚拟目录</strong>                </p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>​    </p>
<h2 id="04-JSTL"><a href="#04-JSTL" class="headerlink" title="04.JSTL"></a>04.JSTL</h2><ul>
<li><p>概念：JavaServer Pages Tag Library  <strong>JSP标准标签库</strong></p>
<ul>
<li>是由Apache组织提供的开源的免费的jsp标签   &lt;标签&gt;</li>
</ul>
</li>
<li><p><strong>作用</strong>：用于<strong>简化和替换</strong>jsp页面上的java代码        </p>
</li>
</ul>
<h4 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h4><ol>
<li>导入jstl相关jar包</li>
<li>引入标签库：taglib指令：  &lt;%@ taglib %&gt;</li>
<li>使用标签</li>
</ol>
<h4 id="常用的JSTL标签"><a href="#常用的JSTL标签" class="headerlink" title="常用的JSTL标签"></a>常用的JSTL标签</h4><ul>
<li><p><strong>if：相当于java代码的if语句</strong></p>
<ul>
<li>属性：<ul>
<li>test 属性，接受boolean表达式<ul>
<li>如果表达式为true，则显示  if  标签体内容；如果为false，则不显示标签体内容</li>
</ul>
</li>
<li>一般情况下，test属性值会<strong>结合el表达式一起使用</strong></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>注意：</strong></p>
<ul>
<li>c：<strong>if  标签没有else情况</strong>，想要else情况，则可以在定义一个c：if标签</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>choose：相当于java代码的switch语句</strong></p>
<ul>
<li><p>使用choose标签声明                     相当于switch声明</p>
</li>
<li><p>使用when标签做判断                     相当于case</p>
</li>
<li><p>使用otherwise标签做其他情况的声明        相当于default</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>foreach：相当于java代码的for语句</strong></p>
<ul>
<li><p><strong>完成重复的操作</strong></p>
<ul>
<li><p>类似C++中的for循环 <code>for(int i=0; i&lt;n; i++) {}</code></p>
</li>
<li><p><strong>属性：</strong></p>
<p>begin：开始值</p>
<p>end：结束值</p>
<p><strong>var</strong>：临时变量</p>
<p>step：步长</p>
<p>varStatus：循环状态对象</p>
<p>index：容器中元素的索引，从0开始</p>
<p>count：循环次数，从1开始</p>
</li>
</ul>
</li>
<li><p><strong>遍历容器</strong></p>
<ul>
<li><p>类似Java中的一种遍历方式 <code>for(User user : list) {}</code></p>
</li>
<li><p><strong>属性：</strong></p>
<p>items：容器对象</p>
<p><strong>var</strong>：容器中元素的临时变量</p>
<p>varStatus：循环状态对象</p>
<p>index：容器中元素的索引，从0开始</p>
<p>count：循环次数，从1开始</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h2><h4 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h4><p>在request域中有一个存有User对象的List集合。需要使用  jstl+el  将list集合数据展示到jsp页面的表格table中</p>
<h2 id="三层架构：软件设计架构"><a href="#三层架构：软件设计架构" class="headerlink" title="三层架构：软件设计架构"></a>三层架构：软件设计架构</h2><ol>
<li>界面层(表示层)：用户看的得界面。用户可以通过界面上的组件和服务器进行交互</li>
<li>业务逻辑层：处理业务逻辑的。</li>
<li>数据访问层：操作数据存储文件。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>List-04_xml笔记</title>
    <url>/2021/04/05/JavaWeb/List-04-xml%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li><strong>XML</strong><ul>
<li>概念</li>
<li>语法</li>
<li>解析</li>
</ul>
</li>
<li>jsoup解析器</li>
<li>xpath路径语言</li>
</ul>
<h2 id="0-1-XML："><a href="#0-1-XML：" class="headerlink" title="0.1 XML："></a>0.1 XML：</h2><ul>
<li><strong>概念</strong>：Extensible Markup Language 可扩展标记语言</li>
</ul>
<ul>
<li><strong>可扩展</strong>：标签都是自定义的。 <user>  <student></li>
<li><strong>功能</strong><ul>
<li>存储数据<ol>
<li>配置文件</li>
<li>在网络中传输</li>
</ol>
</li>
</ul>
</li>
<li><strong>xml与html的区别</strong><ol>
<li>xml标签都是自定义的，html标签是预定义。</li>
<li><strong>xml的语法严格，html语法松散</strong></li>
<li>xml是存储数据的，html是展示数据</li>
</ol>
</li>
<li>w3c：万维网联盟</li>
</ul>
<h4 id="1）语法："><a href="#1）语法：" class="headerlink" title="1）语法："></a>1）语法：</h4><ul>
<li><strong>基本语法</strong>：<ol>
<li>xml文档的后缀名 .xml</li>
<li>xml<strong>第一行必须定义为文档声明</strong></li>
<li>xml文档中<strong>有且仅有一个根标签</strong></li>
<li>属性值必须使用引号(单双都可)引起来</li>
<li>标签必须正确关闭</li>
<li>xml标签名称区分大小写</li>
</ol>
</li>
</ul>
<ul>
<li><p><strong>快速入门</strong>：</p>
<ul>
<li><pre><code class="xml"><span class="meta">&lt;?xml version='1.0' ?&gt;</span>
      <span class="tag">&lt;<span class="name">users</span>&gt;</span>
          <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'1'</span>&gt;</span>
              <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span>
              <span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span>
              <span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span>
              <span class="tag">&lt;<span class="name">br</span>/&gt;</span>
          <span class="tag">&lt;/<span class="name">user</span>&gt;</span>

          <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'2'</span>&gt;</span>
              <span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span>
              <span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span>
              <span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span>
          <span class="tag">&lt;/<span class="name">user</span>&gt;</span>
      <span class="tag">&lt;/<span class="name">users</span>&gt;</span>
<span class="comment"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">#### 2）组成部分：</span><br><span class="line"></span><br><span class="line">- **文档声明**</span><br><span class="line">  - 格式：&lt;?xml 属性列表 ?&gt;</span><br><span class="line">  - 属性列表：</span><br><span class="line">    - version：版本号，必须的属性</span><br><span class="line">    - encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1</span><br><span class="line">    - standalone：是否独立</span><br><span class="line">      - 取值：yes：不依赖其他文件；no：依赖其他文件</span><br><span class="line"></span><br><span class="line">- **指令**(了解)：结合css的</span><br><span class="line">  - &lt;?xml-stylesheet type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;a.css&quot; ?&gt;</span><br><span class="line"></span><br><span class="line">- **标签**：标签名称自定义的</span><br><span class="line">  - **规则**：</span><br><span class="line">    - 名称可以包含字母、数字以及其他的字符 </span><br><span class="line">    - 名称不能以数字或者标点符号开始 </span><br><span class="line">    - 名称不能以字母 xml（或者 XML、Xml 等等）开始 </span><br><span class="line">    - 名称不能包含空格 </span><br><span class="line"></span><br><span class="line">  - 属性：id属性值唯一</span><br><span class="line">  - 文本：</span><br><span class="line">    - CDATA区：在该区域中的数据会被原样展示</span><br><span class="line">    - 格式：  &lt;![CDATA[ 数据 ]]&gt;</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;xml</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;students&gt;</span><br><span class="line">	&lt;student number&#x3D;&quot;heima_0001&quot;&gt;</span><br><span class="line">		&lt;name id&#x3D;&quot;itcast&quot;&gt;</span><br><span class="line">			&lt;xing&gt;张&lt;&#x2F;xing&gt;</span><br><span class="line">			&lt;ming&gt;三&lt;&#x2F;ming&gt;</span><br><span class="line">		&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;age&gt;18&lt;&#x2F;age&gt;</span><br><span class="line">		&lt;sex&gt;male&lt;&#x2F;sex&gt;</span><br><span class="line">	&lt;&#x2F;student&gt;</span><br><span class="line">	&lt;student number&#x3D;&quot;heima_0002&quot;&gt;</span><br><span class="line">		&lt;name&gt;jack&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;age&gt;18&lt;&#x2F;age&gt;</span><br><span class="line">		&lt;sex&gt;female&lt;&#x2F;sex&gt;</span><br><span class="line">	&lt;&#x2F;student&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;students&gt;</span><br></pre></td></tr></table></figure></span>


</code></pre>
</li>
</ul>
</li>
</ul>
<h4 id="3）约束："><a href="#3）约束：" class="headerlink" title="3）约束："></a>3）约束：</h4><p><strong>规定xml文档的书写规则</strong></p>
<ul>
<li><p><strong>作为框架的使用者</strong>(程序员)：</p>
<ol>
<li>能够在xml中引入约束文档</li>
<li>能够简单的读懂约束文档</li>
</ol>
</li>
<li><p>分类：</p>
<ol>
<li><strong>DTD</strong>：一种简单的约束技术</li>
<li><strong>Schema</strong>：一种复杂的约束技术</li>
</ol>
</li>
</ul>
<blockquote>
<h4 id="DTD："><a href="#DTD：" class="headerlink" title="DTD："></a>DTD：</h4></blockquote>
<ul>
<li><strong>引入dtd文档到xml文档中</strong><ul>
<li>内部dtd：将约束规则定义在xml文档中</li>
<li>外部dtd：将约束的规则定义在外部的dtd文件中<ul>
<li>本地：<!DOCTYPE 根标签名 SYSTEM "dtd文件的位置"></li>
<li>网络：<!DOCTYPE 根标签名 PUBLIC "dtd文件名字" "dtd文件的位置URL"></li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">students</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"student.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure>



<blockquote>
<h4 id="Schema"><a href="#Schema" class="headerlink" title="Schema:"></a>Schema:</h4></blockquote>
<ul>
<li><strong>引入</strong>：<ol>
<li>填写xml文档的根元素</li>
<li>引入xsi前缀.  xmlns:xsi=”<a href="http://www.w3.org/2001/XMLSchema-instance&quot;" target="_blank" rel="noopener">http://www.w3.org/2001/XMLSchema-instance&quot;</a></li>
<li>引入xsd文件命名空间.  xsi:schemaLocation=”<a href="http://www.itcast.cn/xml" target="_blank" rel="noopener">http://www.itcast.cn/xml</a>  student.xsd”</li>
<li>为每一个xsd约束声明一个前缀,作为标识  xmlns=”<a href="http://www.itcast.cn/xml&quot;" target="_blank" rel="noopener">http://www.itcast.cn/xml&quot;</a> </li>
</ol>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">students</span>   <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">xmlns</span>=<span class="string">"http://www.itcast.cn/xml"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.itcast.cn/xml  student.xsd"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure>


<p>​    </p>
<h4 id="4）解析："><a href="#4）解析：" class="headerlink" title="4）解析："></a>4）解析：</h4><p><strong>操作xml文档，将文档中的数据读取到内存中</strong></p>
<ul>
<li><p><strong>操作xml文档</strong></p>
<ul>
<li>解析(读取)：将文档中的数据读取到内存中</li>
<li>写入：将内存中的数据保存到xml文档中。持久化的存储</li>
</ul>
</li>
<li><p><strong>解析xml的方式：</strong></p>
<ul>
<li><strong>DOM</strong>：将标记语言文档一次性加载进内存，在内存中形成一颗dom树<ul>
<li>优点：操作方便，可以对文档进行CRUD的所有操作</li>
<li>缺点：占内存</li>
</ul>
</li>
<li><strong>SAX</strong>：逐行读取，基于事件驱动的。<ul>
<li>优点：不占内存。</li>
<li>缺点：只能读取，不能增删改</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="xml常见的解析器："><a href="#xml常见的解析器：" class="headerlink" title="xml常见的解析器："></a>xml常见的解析器：</h4></blockquote>
<ol>
<li><strong>JAXP</strong>：sun公司提供的解析器，支持dom和sax两种思想</li>
<li><strong>DOM4J</strong>：一款非常优秀的解析器</li>
<li><strong>Jsoup</strong>：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。<ul>
<li>它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</li>
</ul>
</li>
<li><strong>PULL</strong>：Android操作系统内置的解析器，sax方式的。</li>
</ol>
<h2 id="0-2-Jsoup解析器"><a href="#0-2-Jsoup解析器" class="headerlink" title="0.2 Jsoup解析器"></a>0.2 Jsoup解析器</h2><ul>
<li><strong>概况</strong>：<ul>
<li><strong>jsoup</strong> 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。</li>
<li>它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</li>
</ul>
</li>
</ul>
<h4 id="快速入门："><a href="#快速入门：" class="headerlink" title="快速入门："></a>快速入门：</h4><ul>
<li><strong>步骤：</strong><ol>
<li>导入jar包</li>
<li>获取Document对象</li>
<li>获取对应的标签Element对象</li>
<li>获取数据</li>
</ol>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//2.1获取student.xml的path</span></span><br><span class="line">  String path = JsoupDemo1.class.getClassLoader().getResource("student.xml").getPath();</span><br><span class="line">  <span class="comment">//2.2解析xml文档，加载文档进内存，获取dom树---&gt;Document</span></span><br><span class="line">  Document document = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">"utf-8"</span>);</span><br><span class="line">  <span class="comment">//3.获取元素对象 Element</span></span><br><span class="line">  Elements elements = document.getElementsByTag(<span class="string">"name"</span>);</span><br><span class="line"></span><br><span class="line">  System.out.println(elements.size());  </span><br><span class="line">  <span class="comment">//3.1获取第一个name的Element对象</span></span><br><span class="line">  Element element = elements.get(<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//3.2获取数据</span></span><br><span class="line">  String name = element.text();</span><br><span class="line">  System.out.println(name);</span><br></pre></td></tr></table></figure>



<h4 id="对象的使用："><a href="#对象的使用：" class="headerlink" title="对象的使用："></a>对象的使用：</h4><blockquote>
<h4 id="Jsoup："><a href="#Jsoup：" class="headerlink" title="Jsoup："></a>Jsoup：</h4></blockquote>
<ul>
<li><strong>工具类</strong>，可以解析html或xml文档，<strong>返回Document</strong></li>
</ul>
<ul>
<li>parse：解析html或xml文档，返回Document<ul>
<li><strong>parse(File in, String charsetName)</strong>：解析xml或html文件的。</li>
<li><strong>parse(String html)</strong>：解析xml或html字符串</li>
<li><strong>parse(URL url, int timeoutMillis)</strong>：通过<strong>网络路径</strong>获取指定的html或xml的文档对象</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="Document："><a href="#Document：" class="headerlink" title="Document："></a>Document：</h4></blockquote>
<p>文档对象。<strong>代表内存中的dom树</strong></p>
<ul>
<li><strong>获取Element对象</strong><ul>
<li>getElementById(String id)：根据id属性值获取唯一的element对象</li>
<li>getElementsByTag(String tagName)：根据标签名称获取元素对象集合</li>
<li>getElementsByAttribute(String key)：根据属性名称获取元素对象集合</li>
<li>getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="Elements："><a href="#Elements：" class="headerlink" title="Elements："></a>Elements：</h4></blockquote>
<p>元素Element对象的集合。可以当做 ArrayList<Element>来使用</p>
<blockquote>
<h4 id="Element：元素对象"><a href="#Element：元素对象" class="headerlink" title="Element：元素对象"></a>Element：元素对象</h4></blockquote>
<ol>
<li><p>获取子元素对象</p>
<ul>
<li>getElementById(String id)：根据id属性值获取唯一的element对象</li>
<li>getElementsByTag(String tagName)：根据标签名称获取元素对象集合</li>
<li>getElementsByAttribute(String key)：根据属性名称获取元素对象集合</li>
<li>getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</li>
</ul>
</li>
<li><p>获取属性值</p>
<ul>
<li>String attr(String key)：根据属性名称获取属性值</li>
</ul>
</li>
<li><p>获取文本内容</p>
<ul>
<li>String text():获取文本内容</li>
<li>String html():获取标签体的所有内容(包括字标签的字符串内容)</li>
</ul>
</li>
</ol>
<blockquote>
<h4 id="Node："><a href="#Node：" class="headerlink" title="Node："></a>Node：</h4></blockquote>
<p>节点对象</p>
<ul>
<li>是Document和Element的父类</li>
</ul>
<h4 id="快捷查询方式："><a href="#快捷查询方式：" class="headerlink" title="快捷查询方式："></a>快捷查询方式：</h4><p>selector：选择器</p>
<p>使用的方法：<strong>Elements select​(String cssQuery)</strong></p>
<p>语法：参考Selector类中定义的语法</p>
<h2 id="0-3-XPath"><a href="#0-3-XPath" class="headerlink" title="0.3 XPath"></a>0.3 XPath</h2><p>XPath即为XML<strong>路径语言</strong>，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言</p>
<h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ol>
<li>使用Jsoup的Xpath需要额外导入jar包。</li>
<li>查询w3cshool参考手册，使用xpath的语法完成查询</li>
<li>代码：</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.获取student.xml的path</span></span><br><span class="line"><span class="built_in">String</span> path = JsoupDemo6.class.getClassLoader().getResource(<span class="string">"student.xml"</span>).getPath();</span><br><span class="line"><span class="comment">//2.获取Document对象</span></span><br><span class="line">Document <span class="built_in">document</span> = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.根据document对象，创建JXDocument对象</span></span><br><span class="line">JXDocument jxDocument = <span class="keyword">new</span> JXDocument(<span class="built_in">document</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.结合xpath语法查询</span></span><br><span class="line"><span class="comment">//4.1查询所有student标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes = jxDocument.selN(<span class="string">"//student"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.2查询所有student标签下的name标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes2 = jxDocument.selN(<span class="string">"//student/name"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes2) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.3查询student标签下带有id属性的name标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes3 = jxDocument.selN(<span class="string">"//student/name[@id]"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes3) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"><span class="comment">//4.4查询student标签下带有id属性的name标签 并且id属性值为itcast</span></span><br><span class="line"></span><br><span class="line">List&lt;JXNode&gt; jxNodes4 = jxDocument.selN(<span class="string">"//student/name[@id='itcast']"</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes4) &#123;</span><br><span class="line">    System.out.println(jxNode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>XML</category>
      </categories>
  </entry>
  <entry>
    <title>List-03_BootStrap基础</title>
    <url>/2021/04/05/JavaWeb/JavaScript/List-03-BootStrap%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>Bootstrap概况</li>
<li>Boostrap入门</li>
<li>Boostrap布局</li>
<li>Boostrap样式</li>
</ul>
<h2 id="01-Bootstrap："><a href="#01-Bootstrap：" class="headerlink" title="01.Bootstrap："></a>01.Bootstrap：</h2><ul>
<li><p><strong>概念</strong>： 一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。</p>
<p>Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。</p>
</li>
<li><p><strong>框架</strong>:一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。</p>
</li>
<li><p><strong>好处</strong>：</p>
<ol>
<li>定义了很多的css样式和js插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。</li>
<li><strong>响应式布局</strong>。<ul>
<li>同一套页面可以兼容不同分辨率的设备。</li>
</ul>
</li>
</ol>
</li>
</ul>
<h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><ol>
<li>下载Bootstrap</li>
<li>在项目中将这三个文件夹复制</li>
<li>创建html页面，引入必要的资源文件</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;Bootstrap HelloWorld&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;!-- Bootstrap --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;link href="css/</span>bootstrap.min.css<span class="string">" rel="</span>stylesheet<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>js/jquery<span class="number">-3.2</span><span class="number">.1</span>.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>js/bootstrap.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;你好，世界！&lt;/h1&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="02-响应式布局"><a href="#02-响应式布局" class="headerlink" title="02.响应式布局"></a>02.响应式布局</h2><p><strong>同一套页面可以兼容不同分辨率的设备。</strong></p>
<ul>
<li><p><strong>实现</strong>：依赖于栅格系统：<strong>将一行平均分成12个格子，可以指定元素占几个格子</strong></p>
</li>
<li><p><strong>步骤</strong>：</p>
<ol>
<li><p><strong>定义容器</strong>。相当于之前的table</p>
<ul>
<li><strong>容器分类</strong>：<ul>
<li>container：两边留白</li>
<li>container-fluid：每一种设备都是100%宽度</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>定义行</strong>。相当于之前的 tr   <strong>样式</strong>：row</p>
</li>
<li><p><strong>定义元素</strong>。指定该元素在不同的设备上，所占的格子数目。<strong>样式</strong>：col-设备代号-格子数目</p>
<ul>
<li>设备代号：<ul>
<li>xs：超小屏幕 手机 (&lt;768px)：col-xs-12</li>
<li>sm：小屏幕 平板 (≥768px)</li>
<li>md：中等屏幕 桌面显示器 (≥992px)</li>
<li>lg：大屏幕 大桌面显示器 (≥1200px)</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<ul>
<li><strong>注意</strong>：<ol>
<li>一行中如果格子<strong>数目超过12</strong>，则超出部分自动换行。</li>
<li>栅格类属性可以<strong>向上兼容</strong>。栅格类适用于与屏幕宽度<strong>大于或等于分界点大小</strong>的设备。</li>
<li>如果<strong>真实设备宽度</strong>小于了设置栅格类属性的<strong>设备代码的最小值</strong>，会一个元素沾满一整行。</li>
</ol>
</li>
</ul>
<h2 id="03-CSS样式和JS插件"><a href="#03-CSS样式和JS插件" class="headerlink" title="03.CSS样式和JS插件"></a>03.CSS样式和JS插件</h2><h3 id="全局CSS样式："><a href="#全局CSS样式：" class="headerlink" title="全局CSS样式："></a>全局CSS样式：</h3><ul>
<li><p><strong>按钮</strong>：<strong>class=”btn btn-default”</strong></p>
</li>
<li><p><strong>图片</strong>：</p>
<ul>
<li><p>class=”img-responsive”：图片在任意尺寸都占100%</p>
</li>
<li><p>图片形状</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-rounded"</span>&gt;：方形</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-circle"</span>&gt; ： 圆形</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-thumbnail"</span>&gt; ：相框</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><strong>表格</strong></p>
</li>
</ul>
<pre><code>* table
     * table-bordered
       * table-hover</code></pre><ul>
<li><p>表单</p>
<ul>
<li>给表单项添加：class=”form-control” </li>
</ul>
</li>
</ul>
<ul>
<li><p>组件：</p>
<ul>
<li>导航条</li>
<li>分页条</li>
</ul>
</li>
<li><p>插件：</p>
<ul>
<li>轮播图</li>
</ul>
</li>
</ul>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3>]]></content>
      <categories>
        <category>JS-Boostrap</category>
      </categories>
  </entry>
  <entry>
    <title>List-02_JavaScript高级</title>
    <url>/2021/04/04/JavaWeb/JavaScript/List-02-JavaScript%E9%AB%98%E7%BA%A7/</url>
    <content><![CDATA[<h3 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h3><ul>
<li><p>DOM对象</p>
</li>
<li><p>BOM对象</p>
</li>
<li><p>HTML DOM对象</p>
</li>
<li><p>事件监听机制</p>
</li>
</ul>
<h2 id="0-1-DOM简单学习："><a href="#0-1-DOM简单学习：" class="headerlink" title="0.1 DOM简单学习："></a>0.1 DOM简单学习：</h2><p><strong>功能</strong>：控制html文档的内容</p>
<ul>
<li><p><strong>获取页面标签(元素)对象</strong>：Element</p>
<ul>
<li><pre><code>document.getElementById(&quot;id值&quot;)    通过元素的id获取元素对象
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- **操作Element对象**：</span><br><span class="line">  - **修改属性值**：</span><br><span class="line">  - 明确获取的对象是哪一个？</span><br><span class="line">  - 查看API文档，找其中有哪些属性可以设置</span><br><span class="line">- **修改标签体内容**：</span><br><span class="line">  - 属性：innerHTML</span><br><span class="line">    - 获取元素对象</span><br><span class="line">    - 使用**innerHTML**属性**修改标签体内容**</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &#x2F;&#x2F;通过id获取元素对象</span><br><span class="line">    var light &#x3D; document.getElementById(&quot;light&quot;);</span><br><span class="line">    alert(&quot;我要换图片了。。。&quot;);</span><br><span class="line">    light.src &#x3D; &quot;img&#x2F;on.gif&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;1.获取h1标签对象</span><br><span class="line">    var title &#x3D; document.getElementById(&quot;title&quot;);</span><br><span class="line">    alert(&quot;我要换内容了。。。&quot;);</span><br><span class="line">    &#x2F;&#x2F;2.修改内容</span><br><span class="line">    title.innerHTML &#x3D; &quot;不识妻美刘强东&quot;;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>


</code></pre></li>
</ul>
</li>
</ul>
<h2 id="0-2-事件简单学习"><a href="#0-2-事件简单学习" class="headerlink" title="0.2 事件简单学习"></a>0.2 事件简单学习</h2><p><strong>功能</strong>： 某些组件被执行了某些操作后，触发某些代码的执行。</p>
<ul>
<li>造句：  xxx被xxx,我就xxx<ul>
<li>我方水晶被摧毁后，我就责备对友。</li>
<li>敌方水晶被摧毁后，我就夸奖自己。</li>
</ul>
</li>
</ul>
<h3 id="如何绑定事件"><a href="#如何绑定事件" class="headerlink" title="如何绑定事件"></a>如何绑定事件</h3><ol>
<li><strong>直接在html标签上</strong>，指定事件的属性(操作)，属性值就是js代码<ul>
<li>事件：onclick— 单击事件</li>
</ul>
</li>
<li>通过js获取元素对象，指定事件属性，设置一个函数</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">		&lt;img id=<span class="string">"light"</span> src=<span class="string">"img/off.gif"</span>  onclick=<span class="string">"fun( );"</span>&gt;</span><br><span class="line">		&lt;img id=<span class="string">"light2"</span> src=<span class="string">"img/off.gif"</span>&gt;</span><br><span class="line">	&lt;script&gt;</span><br><span class="line">	    <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">	        alert(<span class="string">'我被点了'</span>);</span><br><span class="line">	        alert(<span class="string">'我又被点了'</span>);</span><br><span class="line">	    &#125;</span><br><span class="line">	</span><br><span class="line">	    <span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">	        alert(<span class="string">'咋老点我？'</span>);</span><br><span class="line">	    &#125;</span><br><span class="line">	</span><br><span class="line">	    <span class="comment">//1.获取light2对象</span></span><br><span class="line">	    <span class="keyword">var</span> light2 = <span class="built_in">document</span>.getElementById(<span class="string">"light2"</span>);</span><br><span class="line">	    <span class="comment">//2.绑定事件</span></span><br><span class="line">    	light2.onclick = fun2;</span><br><span class="line">	&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure>



<h3 id="案例1：电灯开关"><a href="#案例1：电灯开关" class="headerlink" title="案例1：电灯开关"></a>案例1：电灯开关</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取图片对象</span></span><br><span class="line">    <span class="keyword">var</span> light = <span class="built_in">document</span>.getElementById(<span class="string">"light"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">false</span>;<span class="comment">//代表灯是灭的。 off图片</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.绑定单击事件</span></span><br><span class="line">    light.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;<span class="comment">//判断如果灯是开的，则灭掉</span></span><br><span class="line">            light.src = <span class="string">"img/off.gif"</span>;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//如果灯是灭的，则打开</span></span><br><span class="line">            light.src = <span class="string">"img/on.gif"</span>;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="0-3-BOM对象"><a href="#0-3-BOM对象" class="headerlink" title="0.3 BOM对象"></a>0.3 BOM对象</h2><p><strong>概念</strong>：Browser Object Model <strong>浏览器对象模型</strong></p>
<ul>
<li>将浏览器的各个组成部分封装成对象。</li>
</ul>
<p><strong>组成</strong>：</p>
<ul>
<li><strong>Window</strong>：窗口对象</li>
<li>Navigator：浏览器对象</li>
<li>Screen：显示器屏幕对象</li>
<li>History：历史记录对象</li>
<li>Location：地址栏对象</li>
</ul>
<h3 id="Window：窗口对象"><a href="#Window：窗口对象" class="headerlink" title="Window：窗口对象"></a>Window：窗口对象</h3><ol>
<li><p>创建</p>
</li>
<li><p><strong>方法</strong></p>
<ul>
<li><strong>与弹出框有关的方法</strong>：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">alert( )	显示带有一段消息和一个确认按钮的警告框。</span><br><span class="line"></span><br><span class="line">confirm( )	显示带有一段消息以及确认按钮和取消按钮的对话框。</span><br><span class="line"></span><br><span class="line">   * 如果用户点击确定按钮，则方法返回<span class="keyword">true</span></span><br><span class="line">   * 如果用户点击取消按钮，则方法返回<span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">prompt( )	显示可提示用户输入的对话框。</span><br><span class="line"></span><br><span class="line">- 返回值：获取用户输入的值</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ul>
<li><p><strong>与打开关闭有关的方法</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">close( )	关闭浏览器窗口。</span><br><span class="line">    * 谁调用我 ，我关谁</span><br><span class="line">open( )	打开一个新的浏览器窗口</span><br><span class="line">    * 返回新的Window对象</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//关闭新窗口</span></span><br><span class="line">   <span class="keyword">var</span> closeBtn = <span class="built_in">document</span>.getElementById(<span class="string">"closeBtn"</span>);</span><br><span class="line">   closeBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 关闭新窗口</span></span><br><span class="line">        newWindow.close( );</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p><strong>与定时器有关的方式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setTimeout( )	在指定的毫秒数后调用函数或计算表达式。</span><br><span class="line">    </span><br><span class="line">参数：</span><br><span class="line">    <span class="number">1</span>. js代码或者方法对象</span><br><span class="line">	<span class="number">2</span>. 毫秒值</span><br><span class="line">  	 	返回值：唯一标识，用于取消定时器</span><br><span class="line"></span><br><span class="line">clearTimeout( )	取消由 setTimeout( ) 方法设置的 timeout。</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">setInterval( )	按照指定的周期（以毫秒计）来调用函数或计算表达式。</span><br><span class="line"></span><br><span class="line">clearInterval( )	 取消由 setInterval( ) 设置的 timeout。</span><br></pre></td></tr></table></figure>

</li>
</ul>
<ol start="3">
<li><p><strong>属性</strong>：</p>
<ol>
<li><strong>获取其他BOM对象</strong>：<br>history<br>location<br>Navigator<br>Screen:</li>
<li><strong>获取DOM对象</strong><br>document</li>
</ol>
</li>
<li><p><strong>特点</strong></p>
<ul>
<li>Window对象不需要创建可以直接使用 window使用。 <strong>window.方法名( );</strong></li>
<li>window引用可以省略。  <strong>方法名( );</strong></li>
</ul>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取history</span></span><br><span class="line"><span class="keyword">var</span> h1 = <span class="built_in">window</span>.history;</span><br><span class="line"><span class="keyword">var</span> h2 = history;</span><br><span class="line">alert(h1);</span><br><span class="line">alert(h2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> openBtn = <span class="built_in">window</span>.document.getElementById(<span class="string">"openBtn"</span>);</span><br><span class="line"><span class="keyword">var</span> openBtn2 = <span class="built_in">document</span>.getElementById(<span class="string">"openBtn"</span>);</span><br><span class="line">alert(openBtn2);</span><br></pre></td></tr></table></figure>



<h4 id="案例二-轮播图"><a href="#案例二-轮播图" class="headerlink" title="案例二_轮播图"></a>案例二_轮播图</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//修改图片src属性</span></span><br><span class="line">    <span class="keyword">var</span> number = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">fun</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        number++;</span><br><span class="line">        <span class="comment">//判断number是否大于3</span></span><br><span class="line">        <span class="keyword">if</span> (number &gt; <span class="number">3</span>) &#123;</span><br><span class="line">            number = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取img对象</span></span><br><span class="line">        <span class="keyword">var</span> img = document.getElementById(<span class="string">"img"</span>);</span><br><span class="line">        img.src = <span class="string">"img/banner_"</span> + number + <span class="string">".jpg"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.定义定时器</span></span><br><span class="line">    setInterval(fun, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="Location：地址栏对象"><a href="#Location：地址栏对象" class="headerlink" title="Location：地址栏对象"></a>Location：地址栏对象</h3><ol>
<li><p>创建(获取)：</p>
<ol>
<li>window.location</li>
<li>location</li>
</ol>
</li>
<li><p><strong>方法</strong>：</p>
<ul>
<li><strong>reload</strong>( )    重新加载当前文档。刷新</li>
</ul>
</li>
<li><p>属性</p>
<ul>
<li><strong>href</strong>    设置或返回完整的 URL。</li>
</ul>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line"><span class="comment">//2.绑定单击事件</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">    <span class="comment">//3.刷新页面</span></span><br><span class="line">    location.reload( );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击按钮，去访问www.itcast.cn官网</span></span><br><span class="line"><span class="comment">//1.获取按钮</span></span><br><span class="line"><span class="keyword">var</span> goItcast = <span class="built_in">document</span>.getElementById(<span class="string">"goItcast"</span>);</span><br><span class="line"><span class="comment">//2.绑定单击事件</span></span><br><span class="line">goItcast.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">    <span class="comment">//3.去访问www.itcast.cn官网</span></span><br><span class="line">    location.href = <span class="string">"https://www.chanwillian.github.io"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="案例三-自动调整"><a href="#案例三-自动调整" class="headerlink" title="案例三_自动调整"></a>案例三_自动调整</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 2.倒计时读秒效果实现</span></span><br><span class="line">    <span class="keyword">var</span> second = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">var</span> time = document.getElementById(<span class="string">"time"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，获取span标签，修改span标签体内容，时间--</span></span><br><span class="line">    <span class="function">function <span class="title">showTime</span><span class="params">( )</span></span>&#123;</span><br><span class="line">        second -- ;</span><br><span class="line">        <span class="comment">//判断时间如果&lt;= 0 ，则跳转到首页</span></span><br><span class="line">        <span class="keyword">if</span>(second &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//跳转到首页</span></span><br><span class="line">            location.href = <span class="string">"https://www.baidu.com"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        time.innerHTML = second +<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置定时器，1秒执行一次该方法</span></span><br><span class="line">    setInterval(showTime,<span class="number">1000</span>);</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="History：历史记录对象"><a href="#History：历史记录对象" class="headerlink" title="History：历史记录对象"></a>History：历史记录对象</h3><ol>
<li><p>创建(获取)：</p>
<ol>
<li>window.history</li>
<li>history</li>
</ol>
</li>
<li><p><strong>方法</strong>：</p>
<ul>
<li><strong>back</strong>( )    加载 history 列表中的前一个 URL。</li>
<li><strong>forward</strong>( )    加载 history 列表中的下一个 URL。</li>
<li><strong>go(参数)</strong>    加载 history 列表中的某个具体页面。<ul>
<li>参数：<ul>
<li>正数：前进几个历史记录</li>
<li>负数：后退几个历史记录</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>属性：</p>
<ul>
<li><strong>length</strong>    返回当前窗口历史列表中的 URL 数量。</li>
</ul>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.获取按钮</span></span><br><span class="line">    <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单机事件</span></span><br><span class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">//3.获取当前窗口历史记录个数</span></span><br><span class="line">        <span class="keyword">var</span> length = history.length;</span><br><span class="line">        alert(length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//1.获取按钮</span></span><br><span class="line">    <span class="keyword">var</span> forward = <span class="built_in">document</span>.getElementById(<span class="string">"forward"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单机事件</span></span><br><span class="line">    forward.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">       <span class="comment">//前进</span></span><br><span class="line">       <span class="comment">// history.forward( );</span></span><br><span class="line">        history.go(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="0-4-DOM对象"><a href="#0-4-DOM对象" class="headerlink" title="0.4 DOM对象"></a>0.4 DOM对象</h2><p><strong>概念</strong>： Document Object Model 文档对象模型</p>
<ul>
<li>将标记语言文档的各个组成部分，封装为对象。</li>
<li>可以使用这些对象，对标记语言文档进行CRUD的动态操作</li>
</ul>
<p><strong>W3C DOM 标准被分为 3 个不同的部分：</strong></p>
<ul>
<li><p><strong>核心 DOM</strong> - 针对任何结构化文档的标准模型</p>
<ul>
<li><p>Document：文档对象</p>
</li>
<li><p>Element：元素对象</p>
</li>
<li><p>Attribute：属性对象</p>
</li>
<li><p>Text：文本对象</p>
</li>
<li><p>Comment:注释对象</p>
</li>
<li><p>Node：节点对象，其他5个的父对象</p>
</li>
</ul>
</li>
<li><p><strong>XML DOM</strong> - 针对 XML 文档的标准模型</p>
</li>
<li><p><strong>HTML DOM</strong> - 针对 HTML 文档的标准模型</p>
</li>
</ul>
<h3 id="核心DOM模型："><a href="#核心DOM模型：" class="headerlink" title="核心DOM模型："></a>核心DOM模型：</h3><h4 id="1）Document：文档对象"><a href="#1）Document：文档对象" class="headerlink" title="1）Document：文档对象"></a>1）Document：文档对象</h4><ul>
<li><strong>创建</strong>(获取)：在html dom模型中可以使用window对象来获取<ul>
<li>window.document</li>
<li>document</li>
</ul>
</li>
<li><strong>方法</strong>：<ul>
<li><strong>获取Element对象</strong>：<ul>
<li><strong>getElementById</strong>( )    ： 根据id属性值获取元素对象。id属性值一般唯一</li>
<li><strong>getElementsByTagName</strong>( )：根据元素名称获取元素对象们。返回值是一个数组</li>
<li><strong>getElementsByClassName</strong>( ):根据Class属性值获取元素对象们。返回值是一个数组</li>
<li><strong>getElementsByName</strong>( ): 根据name属性值获取元素对象们。返回值是一个数组</li>
</ul>
</li>
<li><strong>创建其他DOM对象</strong>：<ul>
<li><strong>createAttribute(name)</strong></li>
<li><strong>createComment( )</strong></li>
<li><strong>createElement( )</strong></li>
<li><strong>createTextNode( )</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2.根据元素名称获取元素对象们。返回值是一个数组</span></span><br><span class="line"><span class="keyword">var</span> divs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span><br><span class="line">alert(divs.length);</span><br><span class="line"><span class="comment">// 3.根据Class属性值获取元素对象们。返回值是一个数组</span></span><br><span class="line"><span class="keyword">var</span> div_cls = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"cls1"</span>);</span><br><span class="line">alert(div_cls.length);</span><br><span class="line"><span class="comment">// 4.根据name属性值获取元素对象们。返回值是一个数组</span></span><br><span class="line"><span class="keyword">var</span> ele_username = <span class="built_in">document</span>.getElementsByName(<span class="string">"username"</span>);</span><br><span class="line">alert(ele_username.length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> table = <span class="built_in">document</span>.createElement(<span class="string">"table"</span>);</span><br><span class="line">alert(table);</span><br></pre></td></tr></table></figure>



<h4 id="2）Element：元素对象"><a href="#2）Element：元素对象" class="headerlink" title="2）Element：元素对象"></a>2）Element：元素对象</h4><ul>
<li>获取/创建：通过document来获取和创建</li>
</ul>
<ul>
<li><strong>方法</strong>：<ul>
<li><strong>removeAttribute</strong>( )：删除属性</li>
<li><strong>setAttribute</strong>( )：设置属性</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//获取btn</span></span><br><span class="line">    <span class="keyword">var</span> btn_set =<span class="built_in">document</span>.getElementById(<span class="string">"btn_set"</span>);</span><br><span class="line">    btn_set.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">//1.获取a标签</span></span><br><span class="line">        <span class="keyword">var</span> element_a = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>];</span><br><span class="line">        element_a.setAttribute(<span class="string">"href"</span>,<span class="string">"https://www.baidu.com"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取btn</span></span><br><span class="line">    <span class="keyword">var</span> btn_remove =<span class="built_in">document</span>.getElementById(<span class="string">"btn_remove"</span>);</span><br><span class="line">    btn_remove.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="comment">//1.获取a标签</span></span><br><span class="line">        <span class="keyword">var</span> element_a = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>];</span><br><span class="line">        element_a.removeAttribute(<span class="string">"href"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>





<h4 id="3）Node：节点对象"><a href="#3）Node：节点对象" class="headerlink" title="3）Node：节点对象"></a>3）Node：节点对象</h4><p>，其他5个的父对象</p>
<ul>
<li><p><strong>特点</strong>：所有dom对象都可以被认为是一个节点</p>
</li>
<li><p><strong>方法</strong>：</p>
<ul>
<li>CRUD dom树：<ul>
<li><strong>appendChild</strong>( )：向节点的子节点列表的结尾添加新的子节点。</li>
<li><strong>removeChild</strong>( )    ：删除（并返回）当前节点的指定子节点。</li>
<li><strong>replaceChild</strong>( )：用新节点替换一个子节点。</li>
</ul>
</li>
</ul>
</li>
<li><p>属性：</p>
<ul>
<li><strong>parentNode</strong> 返回节点的父节点。</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取超链接</span></span><br><span class="line">    <span class="keyword">var</span> element_a = <span class="built_in">document</span>.getElementById(<span class="string">"del"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单击事件</span></span><br><span class="line">    element_a.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">        <span class="keyword">var</span> div2 = <span class="built_in">document</span>.getElementById(<span class="string">"div2"</span>);</span><br><span class="line">        div1.removeChild(div2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.获取超链接</span></span><br><span class="line">    <span class="keyword">var</span> element_add = <span class="built_in">document</span>.getElementById(<span class="string">"add"</span>);</span><br><span class="line">    <span class="comment">//2.绑定单击事件</span></span><br><span class="line">    element_add.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"> </span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">        <span class="comment">//给div1添加子节点</span></span><br><span class="line">        <span class="comment">//创建div节点</span></span><br><span class="line">        <span class="keyword">var</span> div3 = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        div3.setAttribute(<span class="string">"id"</span>, <span class="string">"div3"</span>);</span><br><span class="line"></span><br><span class="line">        div1.appendChild(div3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        超链接功能：</span></span><br><span class="line"><span class="comment">            1.可以被点击：样式</span></span><br><span class="line"><span class="comment">            2.点击后跳转到href指定的url</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        需求：保留1功能，去掉2功能</span></span><br><span class="line"><span class="comment">        实现：href="javascript:void(0);"</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> div2 = <span class="built_in">document</span>.getElementById(<span class="string">"div2"</span>);</span><br><span class="line">    <span class="keyword">var</span> div1 = div2.parentNode;</span><br><span class="line">    alert(div1);</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="案例四—动态表格"><a href="#案例四—动态表格" class="headerlink" title="案例四—动态表格"></a>案例四—动态表格</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        分析：</span></span><br><span class="line"><span class="comment">            1.添加：</span></span><br><span class="line"><span class="comment">                1. 给添加按钮绑定单击事件</span></span><br><span class="line"><span class="comment">                2. 获取文本框的内容</span></span><br><span class="line"><span class="comment">                3. 创建td，设置td的文本为文本框的内容。</span></span><br><span class="line"><span class="comment">                4. 创建tr</span></span><br><span class="line"><span class="comment">                5. 将td添加到tr中</span></span><br><span class="line"><span class="comment">                6. 获取table，将tr添加到table中</span></span><br><span class="line"><span class="comment">            2.删除：</span></span><br><span class="line"><span class="comment">                1.确定点击的是哪一个超链接</span></span><br><span class="line"><span class="comment">                    &lt;a href="javascript:void(0);" onclick="delTr(this);" &gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="comment">                2.怎么删除？</span></span><br><span class="line"><span class="comment">                    removeChild( ):通过父节点删除子节点</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">//使用innerHTML添加</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"btn_add"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"> </span>) </span>&#123;</span><br><span class="line">        <span class="comment">//2.获取文本框的内容</span></span><br><span class="line">        <span class="keyword">var</span> id = <span class="built_in">document</span>.getElementById(<span class="string">"id"</span>).value;</span><br><span class="line">        <span class="keyword">var</span> name = <span class="built_in">document</span>.getElementById(<span class="string">"name"</span>).value;</span><br><span class="line">        <span class="keyword">var</span> gender = <span class="built_in">document</span>.getElementById(<span class="string">"gender"</span>).value;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取table</span></span><br><span class="line">        <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"table"</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//追加一行</span></span><br><span class="line">        table.innerHTML += <span class="string">"&lt;tr&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;"</span>+id+<span class="string">"&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;"</span>+name+<span class="string">"&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;"</span>+gender+<span class="string">"&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"        &lt;td&gt;&lt;a href=\"javascript:void(0);\" onclick=\"delTr(this);\" &gt;删除&lt;/a&gt;&lt;/td&gt;\n"</span> +</span><br><span class="line">            <span class="string">"    &lt;/tr&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">delTr</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> table = obj.parentNode.parentNode.parentNode;</span><br><span class="line">        <span class="keyword">var</span> tr = obj.parentNode.parentNode;</span><br><span class="line"></span><br><span class="line">        table.removeChild(tr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="0-5-HTML-DOM"><a href="#0-5-HTML-DOM" class="headerlink" title="0.5 HTML DOM"></a>0.5 HTML DOM</h2><ol>
<li><p><strong>标签体的设置和获取</strong>：innerHTML</p>
</li>
<li><p>使用html元素对象的属性</p>
</li>
<li><p>控制元素样式</p>
<ol>
<li><p>使用元素的style属性来设置<br>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改样式方式1</span></span><br><span class="line">   div1.style.border = <span class="string">"1px solid red"</span>;</span><br><span class="line">   div1.style.width = <span class="string">"200px"</span>;</span><br><span class="line">   <span class="comment">//font-size--&gt; fontSize</span></span><br><span class="line">   div1.style.fontSize = <span class="string">"20px"</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>提前定义好类选择器的样式，通过元素的className属性来设置其class属性值。</p>
</li>
</ol>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">    <span class="keyword">var</span> innerHTML = div.innerHTML;</span><br><span class="line">    alert(innerHTML);</span><br><span class="line">    <span class="comment">// div标签中替换一个文本输入框</span></span><br><span class="line">    div.innerHTML = <span class="string">"&lt;input type='text'&gt;"</span>;</span><br><span class="line">    <span class="comment">// div标签中追加一个文本输入框</span></span><br><span class="line">    div.innerHTML += <span class="string">"&lt;input type='text'&gt;"</span>;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>




<h2 id="0-6-事件监听机制："><a href="#0-6-事件监听机制：" class="headerlink" title="0.6 事件监听机制："></a>0.6 事件监听机制：</h2><p><strong>概念</strong>：某些组件被执行了某些操作后，触发某些代码的执行。    </p>
<ul>
<li><strong>事件</strong>：某些操作。如： 单击，双击，键盘按下了，鼠标移动了</li>
<li><strong>事件源</strong>：组件。如： 按钮 文本输入框…</li>
<li><strong>监听器</strong>：代码。</li>
<li><strong>注册监听</strong>：将事件，事件源，监听器结合在一起。 当事件源上发生了某个事件，则触发执行某个监听器代码。</li>
</ul>
<h4 id="常见的事件："><a href="#常见的事件：" class="headerlink" title="常见的事件："></a>常见的事件：</h4><ol>
<li><p><strong>点击事件</strong>：</p>
<ol>
<li>onclick：单击事件</li>
<li>ondblclick：双击事件</li>
</ol>
</li>
<li><p><strong>焦点事件</strong></p>
<ol>
<li>onblur：失去焦点<ul>
<li>一般用于表单校验</li>
</ul>
</li>
<li>onfocus:元素获得焦点。</li>
</ol>
</li>
<li><p><strong>加载事件</strong>：</p>
<ol>
<li>onload：一张页面或一幅图像完成加载。</li>
</ol>
</li>
<li><p><strong>鼠标事件</strong>：</p>
<ol>
<li>onmousedown    鼠标按钮被按下。<ul>
<li>定义方法时，定义一个形参，接受event对象</li>
<li>event对象的button属性，可以判断哪个鼠标被点击了</li>
</ul>
</li>
<li>onmouseup    鼠标按键被松开。</li>
<li>onmousemove    鼠标被移动。</li>
<li>onmouseover    鼠标移到某元素之上。</li>
<li>onmouseout    鼠标从某元素移开。</li>
</ol>
</li>
<li><p><strong>键盘事件</strong>：</p>
<ol>
<li>onkeydown    某个键盘按键被按下。    <ol start="2">
<li>onkeyup        某个键盘按键被松开。</li>
<li>onkeypress    某个键盘按键被按下并松开。</li>
</ol>
</li>
</ol>
</li>
<li><p><strong>选择和改变</strong></p>
<ol>
<li>onchange    域的内容被改变。</li>
<li>onselect    文本被选中。</li>
</ol>
</li>
<li><p><strong>表单事件</strong>：</p>
<ol>
<li>onsubmit    确认按钮被点击。<ul>
<li>返回false时，表单被阻止提交</li>
</ul>
</li>
<li>onreset    重置按钮被点击。</li>
</ol>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;常见事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2.加载完成事件  onload</span></span><br><span class="line"><span class="regexp">        window.onload = function( )&#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/1.失去焦点事件</span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onblur = function( )&#123;</span></span><br><span class="line"><span class="regexp">                alert("失去焦点了...");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/3.绑定鼠标移动到元素之上事件</span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onmouseover = function( )&#123;</span></span><br><span class="line"><span class="regexp">                alert("鼠标来了....");</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/3.绑定鼠标点击事件</span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onmousedown = function(event)&#123;</span></span><br><span class="line"><span class="regexp">               /</span><span class="regexp">/ alert("鼠标点击了....");</span></span><br><span class="line"><span class="regexp">                alert(event.button);</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onkeydown = function(event)&#123;</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ alert("鼠标点击了....");</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ alert(event.button);</span></span><br><span class="line"><span class="regexp">                if(event.keyCode == 13)&#123;</span></span><br><span class="line"><span class="regexp">                    alert("提交表单");</span></span><br><span class="line"><span class="regexp">                &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            document.getElementById("username").onchange = function(event)&#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                alert("改变了...")</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            document.getElementById("city").onchange = function(event)&#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                alert("改变了...")</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            document.getElementById("form").onsubmit = function( )&#123;</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/校验用户名格式是否正确</span></span><br><span class="line"><span class="regexp">                var flag = false;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                return flag;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        function checkForm( )&#123;</span></span><br><span class="line"><span class="regexp">            return true;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!--</span></span><br><span class="line"><span class="regexp">    function fun( )&#123;</span></span><br><span class="line"><span class="regexp">       return  checkForm( );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"> --&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;form action="#" id="form" onclick="return  checkForm( );"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input name="username" id="username"&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &lt;select id="city"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;option&gt;--请选择--&lt;/</span>option&gt;</span><br><span class="line">            &lt;option&gt;北京&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">            &lt;option&gt;上海&lt;/</span>option&gt;</span><br><span class="line">            &lt;option&gt;西安&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>select&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/form&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS</category>
      </categories>
  </entry>
  <entry>
    <title>List-01_JavaScript基础</title>
    <url>/2021/04/04/JavaWeb/JavaScript/List-01-JavaScript%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li>JavaScript概况</li>
<li>JS数据类型</li>
<li>JS基本语法</li>
<li>JS基本对象</li>
</ul>
<h2 id="0-1-JavaScript："><a href="#0-1-JavaScript：" class="headerlink" title="0.1 JavaScript："></a>0.1 JavaScript：</h2><blockquote>
<h5 id="概念：-一门客户端脚本语言"><a href="#概念：-一门客户端脚本语言" class="headerlink" title="概念：    一门客户端脚本语言"></a>概念：    一门客户端脚本语言</h5></blockquote>
<ul>
<li>运行在客户端浏览器中的。每一个浏览器都有JavaScript的解析引擎</li>
<li>脚本语言：不需要编译，直接就可以被浏览器解析执行了</li>
</ul>
<blockquote>
<h5 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h5></blockquote>
<ul>
<li>可以来增<strong>强用户和html页面的交互过程</strong>，可以来控制html元素，让页面有一些动态的效果，增强用户的体验。</li>
</ul>
<blockquote>
<h5 id="JavaScript发展史："><a href="#JavaScript发展史：" class="headerlink" title="JavaScript发展史："></a>JavaScript发展史：</h5></blockquote>
<ol>
<li>1992年，Nombase公司，开发出第一门客户端脚本语言，专门用于表单的校验。命名为 ： C–    ，后来更名为：ScriptEase</li>
<li>1995年，Netscape(网景)公司，开发了一门客户端脚本语言：LiveScript。后来，请来SUN公司的专家，修改LiveScript，命名为JavaScript</li>
<li>1996年，微软抄袭JavaScript开发出JScript语言</li>
<li>1997年，ECMA(欧洲计算机制造商协会)，制定出客户端脚本语言的标准：ECMAScript，就是统一了所有客户端脚本语言的编码方式。</li>
</ol>
<ul>
<li><strong>JavaScript</strong> = ECMAScript + JavaScript自己特有的东西(BOM+DOM)</li>
</ul>
<h2 id="0-2-JavaScript基础"><a href="#0-2-JavaScript基础" class="headerlink" title="0.2 JavaScript基础"></a>0.2 JavaScript基础</h2><p><strong>客户端脚本语言的标准</strong></p>
<h3 id="基本语法："><a href="#基本语法：" class="headerlink" title="基本语法："></a>基本语法：</h3><blockquote>
<h4 id="与html结合方式"><a href="#与html结合方式" class="headerlink" title="与html结合方式"></a>与html结合方式</h4></blockquote>
<ol>
<li>内部JS：<ul>
<li>定义<script>，标签体内容就是js代码</li>
</ul>
</li>
<li>外部JS：<ul>
<li>定义<script>，通过src属性引入外部的js文件</li>
</ul>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    内部JS--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"helloWorld"</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    外部JS--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/a.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：</p>
<script>可以定义在html页面的任何地方。但是定义的位置会影响执行顺序。

<script>可以定义多个。


**注释**

1. 单行注释：//注释内容
2. 多行注释：/*注释内容*/



### 数据类型：

1. 原始数据类型(基本数据类型)：
   1. **number**：数字。 整数/小数/     **NaN**    (not a number 一个不是数字的数字类型)
   2. **string**：字符串。 字符串  "abc" "a" 'abc'
   3. **boolean**: true和false
   4. **null**：一个对象为空的占位符
   5. **undefined**：未定义。**如果一个变量没有给初始化值，则会被默认赋值为undefined**
2. 引用数据类型：**对象**

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    定义变量</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a  = <span class="number">3</span>;</span></span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    a = <span class="string">"abc"</span>;</span></span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num=<span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num2=<span class="number">1.2</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> num3=<span class="literal">NaN</span>;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//输出到页面上</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num3+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str2=<span class="string">"world"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str3=<span class="string">"I"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(str+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(str2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(str3+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag=<span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag2=<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj=<span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj2=<span class="literal">undefined</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj3;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(obj+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(obj2+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(obj3+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



### 变量

变量：一小块存储数据的内存空间

Java语言是强类型语言，而JavaScript是弱类型语言。

* **强类型**：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。**只能存储固定类型的数据**
* **弱类型**：在开辟变量存储空间时，不定义空间将来的存储数据类型，**可以存放任意类型的数据。**

**语法**：

* **var 变量名 = 初始化值;**

**typeof运算符**：获取变量的类型。

* 注：**null运算后得到的是object**



<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义变量</span></span><br><span class="line">    <span class="keyword">var</span> a  = <span class="number">3</span>;</span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line">    a = <span class="string">"abc"</span>;</span><br><span class="line">    alert(a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> num2=<span class="number">1.2</span>;</span><br><span class="line">    <span class="keyword">var</span> num3=NaN;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出到页面上</span></span><br><span class="line">    document.write(num+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(num2+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(num3+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> str=<span class="string">"hello"</span>;</span><br><span class="line">    <span class="keyword">var</span> str2=<span class="string">"world"</span>;</span><br><span class="line">    <span class="keyword">var</span> str3=<span class="string">"I"</span>;</span><br><span class="line"></span><br><span class="line">    document.write(str+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(str2+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(str3+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> flag=<span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">var</span> flag2=<span class="keyword">false</span>;</span><br><span class="line">    document.write(flag+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(flag2+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> obj=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">var</span> obj2=undefined;</span><br><span class="line">    <span class="keyword">var</span> obj3;</span><br><span class="line"></span><br><span class="line">    document.write(obj+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    document.write(obj2+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span><br><span class="line">    document.write(obj3+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//undefined</span></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">     </span><br><span class="line">document.write(num+<span class="string">"---"</span>+typeof(num)+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">      document.write(num2+<span class="string">"---"</span>+typeof(num2)+<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">      document.write(num3+<span class="string">"---"</span>+typeof(num3)+<span class="string">"&lt;br&gt;"</span>);</span><br></pre></td></tr></table></figure>



### 2.4    运算符

**一元运算符**：只有一个运算数的运算符

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">++，-- ，+(-)：正负号</span><br></pre></td></tr></table></figure>

* ++ --: 自增(自减)
  * ++(--) **在前**，先自增(自减)，再运算
  * ++(--) **在后**，先运算，再自增(自减)
* +(-)：正负号

**注意**：在JS中，如果运算数不是运算符所要求的类型，那么js引擎会**自动的将运算数进行类型转换**

> #### 其他类型转number：

* string转number：按照字面值转换。如果字面值不是数字，则转为NaN（不是数字的数字）
* boolean转number：true转为1，false转为0

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = ++ num ;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(num+<span class="string">"&lt;br&gt;"</span>);<span class="comment">// 4</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(a+<span class="string">"&lt;br&gt;"</span>);<span class="comment">// 4</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b= +<span class="string">"123hello"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="keyword">typeof</span> (b)+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(b+<span class="number">1</span>+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag= + <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag2= + <span class="literal">false</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="keyword">typeof</span> (flag) + <span class="string">"&lt;br&gt;"</span>);<span class="comment">//number</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag + <span class="string">"&lt;br&gt;"</span>);<span class="comment">// 1</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag2 + <span class="string">"&lt;br&gt;"</span>);<span class="comment">// 0</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

**算数运算符**

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ - * % &#x2F;</span><br></pre></td></tr></table></figure>

**赋值运算符**

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x3D; +&#x3D; -+....</span><br></pre></td></tr></table></figure>

**比较运算符**

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;  &gt;&#x3D;  &lt;&#x3D;  &#x3D;&#x3D;  &#x3D;&#x3D;&#x3D;(全等于)</span><br></pre></td></tr></table></figure>

**比较方式**

1. **类型相同**：直接比较
   - 字符串：按照字典顺序比较。按位逐一比较，直到得出大小为止。
2. **类型不同**：先进行类型转换，再比较
   - ===：全等于。在比较之前，先判断类型，**如果类型不一样**，则直接返回false



**逻辑运算符**

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;&amp; || !</span><br></pre></td></tr></table></figure>

> #### 其他类型转boolean：

1. **number**：0或NaN为假，其他为真
2. **string**：除了空字符串("")，其他都是true
3. **null&undefined**:都是false
4. **对象**：所有对象都为true

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(flag+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!flag);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//number</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num2 = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> num3 = <span class="literal">NaN</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!num+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!num2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!num3+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//string</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str2=<span class="string">""</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!str+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!str2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// null &amp; undefined</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj=<span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj2=;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!obj+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!obj2+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// date</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!!date+<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">"&lt;hr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>	</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">	obj = <span class="string">"123"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(obj != <span class="literal">null</span> &amp;&amp; obj.length &gt; <span class="number">0</span>)&#123;<span class="comment">//防止空指针异常</span></span></span><br><span class="line">        alert(123);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//js中可以这样定义，简化书写。</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(obj)&#123;<span class="comment">//防止空指针异常</span></span></span><br><span class="line">        alert(111);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



**三元运算符**
? : 表达式

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var a &#x3D; 3;</span><br><span class="line">var b &#x3D; 4;</span><br><span class="line"></span><br><span class="line">var c &#x3D; a &gt; b ? 1:0;</span><br></pre></td></tr></table></figure>

**语法**：

* 表达式? 值1:值2;
* 判断表达式的值，如果是true则取值1，如果是false则取值2；



### 2.5    流程控制语句：

if...else...

**switch**:

- 在java中，
  - switch语句可以接受的数据类型： byte    int    shor    char,    枚举(1.5) ,    String(1.7)

- 在JS中,
  - switch语句可以接受**任意的原始数据类型**

while

do...while

for

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    <span class="keyword">switch</span>(a)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            alert(<span class="string">"number"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"abc"</span>:</span><br><span class="line">            alert(<span class="string">"string"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">true</span>:</span><br><span class="line">            alert(<span class="string">"true"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">null</span>:</span><br><span class="line">            alert(<span class="string">"null"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">undefined</span>:</span><br><span class="line">            alert(<span class="string">"undefined"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

### 2.6    JS特殊语法：

1. **语句以    ;    结尾**，如果一行只有一条语句则 ;可以省略 (不建议)
2. 变量的定义**使用var关键字**，也可以不使用
   1. 用： 定义的变量是局部变量
   2. 不用：定义的变量是全局变量(不建议)



##  练习：99乘法表

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;<span class="number">99</span>乘法表&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        td&#123;</span></span><br><span class="line"><span class="regexp">            border: 1px solid;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">"&lt;table  align='center'&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;tr&gt;"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;=i ; j++) &#123;</span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"&lt;td&gt;"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.write(i+<span class="string">"x"</span>+j+<span class="string">"="</span>+(i*j)+<span class="string">"&amp;nbsp;&amp;nbsp;&amp;nbsp"</span>)</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"&lt;/td&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;/tr&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">"&lt;/table&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure>



## 0.3    基本对象：

### Function：函数(方法)对象

**创建**：

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="built_in">Function</span>(形式参数列表,方法体);  <span class="comment">//忘掉吧</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> 方法名称(<span class="params">形式参数列表</span>)</span>&#123;</span><br><span class="line">	      方法体</span><br><span class="line">	  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> 方法名 = <span class="function"><span class="keyword">function</span>(<span class="params">形式参数列表</span>)</span>&#123;</span><br><span class="line">        方法体</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

**属性**：
    **length**:代表形参的个数

#### 特点：

1. 方法定义是，**形参的类型不用写,返回值类型也不写。**
2. 方法是一个对象，如果**定义名称相同的方法，会覆盖**
3. 在JS中，方法的**调用只与方法的名称有关**，和参数列表无关
4. 在方法声明中有一个隐藏的内置对象（数组），arguments,封装所有的实际参数

**调用**：

方法名称(实际参数列表);

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;</span><br><span class="line">            sum += <span class="built_in">arguments</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> sum = add(<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line">    alert(sum);</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>



### Array:数组对象

**创建**：

1. var arr = new Array(元素列表);
2. var arr = new Array(默认长度);
3. var arr = [元素列表];

- **方法**
  - **join(参数)**：将数组中的元素按照指定的分隔符拼接为字符串
  - **push()**：向数组的末尾添加一个或更多元素，并返回新的长度。

**属性**
**length**：数组的长度

**特点**：

- **JS中，数组元素的类型可变的。**
- **JS中，数组长度可变的。**

1. Boolean



### Date：日期对象

1. 创建：
   var date = new Date();

1. 方法：
       **toLocaleString**()：返回当前date对象对应的时间本地字符串格式

   ​    **getTime**():获取毫秒值。返回当前如期对象描述的时间到1970年1月1日零点的毫秒值差





### 3.4    Math：数学对象

1. 创建：
   - 特点：Math对象不用创建，直接使用。  Math.方法名();

2. 方法：

   **random**():返回 0 ~ 1 之间的随机数。 含0不含1

   **ceil**(x)：对数进行上舍入。

   **floor**(x)：对数进行下舍入。

   **round**(x)：把数四舍五入为最接近的整数。

3. 属性：
- **PI**
4. Number

5. String



### 3.5    RegExp：正则表达式对象

1. **正则表达式**：定义字符串的组成规则。

   - **单个字符**:[ ]

      - 如： [a] [ab] [a-zA-Z0-9_]

      - ```cmd
         特殊符号代表特殊含义的单个字符:

         \d:单个数字字符 [0-9]

         \w:单个单词字符[a-zA-Z0-9_]
         <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- **量词符号**：</span><br><span class="line"></span><br><span class="line">  - &#96;&#96;&#96;cmd</span><br><span class="line">    ?：表示出现0次或1次</span><br><span class="line">    </span><br><span class="line">    *：表示出现0次或多次</span><br><span class="line">    </span><br><span class="line">    +：出现1次或多次</span><br><span class="line">    </span><br><span class="line">    &#123;m,n&#125;:表示 m&lt;&#x3D; 数量 &lt;&#x3D; n</span><br><span class="line">    </span><br><span class="line">     * m如果缺省： &#123;,n&#125;:最多n次</span><br><span class="line">    </span><br><span class="line">     * n如果缺省：&#123;m,&#125; 最少m次</span><br></pre></td></tr></table></figure>

   - **开始结束符号**
     - ^: 开始
     - $: 结束

2. **正则对象**：

   1. 创建

      **var reg = new RegExp("正则表达式");**

      **var reg = /正则表达式/;**

   2. 方法    

      **test(参数)：验证指定的字符串是否符合正则定义的规范**    



### 3.6    Global

1. **特点**：全局对象，这个Global中封装的方法不需要对象就可以直接调用。  方法名():

2. **方法**：

   **encodeURI**():url编码

   **decodeURI**():url解码



   **encodeURIComponent**():url编码,编码的字符更多  

   **decodeURIComponent():**url解码



   **parseInt():**将字符串转为数字

   - 逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number
     - isNaN():判断一个值是否是NaN
     - NaN六亲不认，连自己都不认。NaN参与的 “ ==    ”比较全部返回**false**

   **eval():**    分析JavaScript 字符串，并把它作为**脚本代码来执行。**


   ​    

  3. **URL编码**
     传智播客 =  %E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2

* BOM

* DOM







​    ]]></content>
      <categories>
        <category>JS</category>
      </categories>
  </entry>
  <entry>
    <title>Others/乒乓球学习</title>
    <url>/2021/04/04/Others/%E4%B9%92%E4%B9%93%E7%90%83%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h2><blockquote>
<h4 id="打法选择"><a href="#打法选择" class="headerlink" title="打法选择"></a>打法选择</h4></blockquote>
<p>主要分为进攻性打法和防守型打法</p>
<p>进攻性打法：横版两面弧圈结合快攻，以及直板横打等等</p>
<p>防守型打法：削球等等</p>
<p><strong>打法和器材有关，</strong>现今，进攻性打法，一般选择两面反胶的比较多</p>
<blockquote>
<h4 id="握板方式"><a href="#握板方式" class="headerlink" title="握板方式"></a>握板方式</h4></blockquote>
<p><strong>横握球拍：</strong></p>
<ol>
<li>横握球拍原则上，要让两面都能发得上力</li>
<li>横握球拍时，不要握紧，用放松</li>
<li>拇指在胶皮与拍柄旁边，食指在球拍的侧面</li>
</ol>
<p><strong>实战中手指的应用：</strong></p>
<p><strong>两面均衡发力的技巧</strong></p>
<blockquote>
<h4 id="准备姿势"><a href="#准备姿势" class="headerlink" title="准备姿势"></a>准备姿势</h4></blockquote>
<p>进攻性准备姿势</p>
<p>防守型准备姿势</p>
<blockquote>
<h4 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h4></blockquote>
<p>还原的注意事项：</p>
<blockquote>
<h4 id="预判"><a href="#预判" class="headerlink" title="预判"></a>预判</h4></blockquote>
<p>落点的预判技巧：</p>
<h2 id="2-准备训练"><a href="#2-准备训练" class="headerlink" title="2.准备训练"></a>2.准备训练</h2><blockquote>
<h4 id="横版正手攻球"><a href="#横版正手攻球" class="headerlink" title="横版正手攻球"></a>横版正手攻球</h4></blockquote>
<p>攻球要点：</p>
<p>注意事项：</p>
]]></content>
  </entry>
  <entry>
    <title>XYplorer使用教程</title>
    <url>/2021/03/26/Others/XYplorer%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="7-设置"><a href="#7-设置" class="headerlink" title="7.设置"></a>7.设置</h2><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="外壳集成"><a href="#外壳集成" class="headerlink" title="外壳集成"></a>外壳集成</h4><p><strong>64-windows</strong></p>
<ul>
<li>显示64位右键菜单</li>
</ul>
<h2 id="右键"><a href="#右键" class="headerlink" title="右键"></a>右键</h2><ul>
<li>选中文件，然后右键</li>
</ul>
<h4 id="特殊重命名"><a href="#特殊重命名" class="headerlink" title="特殊重命名"></a>特殊重命名</h4><ul>
<li>选择 <strong>搜索与替换</strong><ul>
<li>例如 test 快捷方式.ink </li>
<li>输入 “快捷方式 ”，查看预览即可 </li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>XYplorer</tag>
      </tags>
  </entry>
  <entry>
    <title>List-03多表查询&amp;事务&amp;DCL</title>
    <url>/2021/03/26/MySQL/List-03%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2&amp;%E4%BA%8B%E5%8A%A1&amp;DCL/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ol>
<li><p>多表查询</p>
</li>
<li><p>事务</p>
</li>
<li><p>DCL</p>
</li>
</ol>
<h2 id="01-多表查询："><a href="#01-多表查询：" class="headerlink" title="01.多表查询："></a>01.多表查询：</h2><p><strong>查询语法</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">	列名列表</span><br><span class="line">from</span><br><span class="line">	表名列表</span><br><span class="line">where....</span><br></pre></td></tr></table></figure>

<p><strong>准备sql</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建部门表</span><br><span class="line">CREATE TABLE dept(</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">	NAME VARCHAR(20)</span><br><span class="line">);</span><br><span class="line">INSERT INTO dept (NAME) VALUES (&#39;开发部&#39;),(&#39;市场部&#39;),(&#39;财务部&#39;);</span><br><span class="line"></span><br><span class="line"># 创建员工表</span><br><span class="line">CREATE TABLE emp (</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">	NAME VARCHAR(10),</span><br><span class="line">	gender CHAR(1), -- 性别</span><br><span class="line">	salary DOUBLE, -- 工资</span><br><span class="line">	join_date DATE, -- 入职日期</span><br><span class="line">	dept_id INT,</span><br><span class="line">	FOREIGN KEY (dept_id) REFERENCES dept(id) -- 外键，关联部门表(部门表的主键)</span><br><span class="line">);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;孙悟空&#39;,&#39;男&#39;,7200,&#39;2013-02-24&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;猪八戒&#39;,&#39;男&#39;,3600,&#39;2010-12-02&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;唐僧&#39;,&#39;男&#39;,9000,&#39;2008-08-08&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;白骨精&#39;,&#39;女&#39;,5000,&#39;2015-10-07&#39;,3);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;蜘蛛精&#39;,&#39;女&#39;,4500,&#39;2011-03-14&#39;,1);</span><br></pre></td></tr></table></figure>

<p><strong>笛卡尔积</strong>：</p>
<p>有两个集合A,B .取这两个集合的所有组成情况。</p>
<p><strong>要完成多表查询，需要消除无用的数据</strong></p>
<h3 id="多表查询的分类："><a href="#多表查询的分类：" class="headerlink" title="多表查询的分类："></a>多表查询的分类：</h3><h4 id="内连接查询："><a href="#内连接查询：" class="headerlink" title="内连接查询："></a>内连接查询：</h4><p><strong>隐式内连接</strong>：</p>
<p>使用where条件消除无用数据</p>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询所有员工信息和对应的部门信息</span><br><span class="line"></span><br><span class="line">SELECT * FROM emp,dept WHERE emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br><span class="line"></span><br><span class="line">-- 查询员工表的名称，性别。部门表的名称</span><br><span class="line">SELECT emp.name,emp.gender,dept.name FROM emp,dept WHERE emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">	t1.name, -- 员工表的姓名</span><br><span class="line">	t1.gender,-- 员工表的性别</span><br><span class="line">	t2.name -- 部门表的名称</span><br><span class="line">FROM</span><br><span class="line">	emp t1,</span><br><span class="line">	dept t2</span><br><span class="line">WHERE </span><br><span class="line">	t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>



<p><strong>显式内连接：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法： select 字段列表 from 表名1 [inner] join 表名2 on 条件</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">SELECT * FROM emp INNER JOIN dept ON emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;	</span><br><span class="line"></span><br><span class="line">SELECT * FROM emp JOIN dept ON emp.&#96;dept_id&#96; &#x3D; dept.&#96;id&#96;;</span><br></pre></td></tr></table></figure>



<p><strong>注意事项</strong></p>
<ol>
<li>从哪些表中查询数据</li>
<li>条件是什么</li>
<li>哪些字段</li>
</ol>
<h4 id="外链接查询："><a href="#外链接查询：" class="headerlink" title="外链接查询："></a>外链接查询：</h4><p><strong>左外连接</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：select 字段列表 from 表1 left [outer] join 表2 on 条件；</span><br><span class="line"></span><br><span class="line">查询的是左表所有数据以及其交集部分。</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">-- 查询所有员工信息，如果员工有部门，则查询部门名称，没有部门，则不显示部门名称</span><br><span class="line">SELECT 	t1.*,t2.&#96;name&#96; FROM emp t1 LEFT JOIN dept t2 ON t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>

<p><strong>右外连接</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：select 字段列表 from 表1 right [outer] join 表2 on 条件；</span><br><span class="line"></span><br><span class="line">查询的是右表所有数据以及其交集部分。</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">SELECT 	* FROM dept t2 RIGHT JOIN emp t1 ON t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>



<h4 id="子查询："><a href="#子查询：" class="headerlink" title="子查询："></a>子查询：</h4><p><strong>概念</strong>：<strong>查询中嵌套查询</strong>，称嵌套查询为子查询。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询工资最高的员工信息</span><br><span class="line">-- 1 查询最高的工资是多少 9000</span><br><span class="line">SELECT MAX(salary) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2 查询员工信息，并且工资等于9000的</span><br><span class="line">SELECT * FROM emp WHERE emp.&#96;salary&#96; &#x3D; 9000;</span><br><span class="line"></span><br><span class="line">-- 一条sql就完成这个操作。子查询</span><br><span class="line">SELECT * FROM emp WHERE emp.&#96;salary&#96; &#x3D; (SELECT MAX(salary) FROM emp);</span><br></pre></td></tr></table></figure>



<h5 id="子查询不同情况"><a href="#子查询不同情况" class="headerlink" title="子查询不同情况"></a>子查询不同情况</h5><ol>
<li><p><strong>子查询的结果是单行单列的</strong>：</p>
<p>子查询可以作为条件，使用运算符去判断。 <strong>运算符： &gt; &gt;= &lt; &lt;= =</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询员工工资小于平均工资的人</span><br><span class="line">SELECT * FROM emp WHERE emp.salary &lt; (SELECT AVG(salary) FROM emp);</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p><strong>子查询的结果是多行单列的</strong>：</p>
<p>子查询可以作为条件，使用<strong>运算符in</strong>来判断</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询&#39;财务部&#39;和&#39;市场部&#39;所有的员工信息</span><br><span class="line">SELECT id FROM dept WHERE NAME &#x3D; &#39;财务部&#39; OR NAME &#x3D; &#39;市场部&#39;;</span><br><span class="line">SELECT * FROM emp WHERE dept_id &#x3D; 3 OR dept_id &#x3D; 2;</span><br><span class="line">-- 子查询</span><br><span class="line">SELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE NAME &#x3D; &#39;财务部&#39; OR NAME &#x3D; &#39;市场部&#39;);</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li><p><strong>子查询的结果是多行多列的</strong>：</p>
<p>子查询可以<strong>作为一张虚拟表参与查询</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询员工入职日期是2011-11-11日之后的员工信息和部门信息</span><br><span class="line">-- 子查询</span><br><span class="line">SELECT * FROM dept t1 ,(SELECT * FROM emp WHERE emp.&#96;join_date&#96; &gt; &#39;2011-11-11&#39;) t2</span><br><span class="line">WHERE t1.id &#x3D; t2.dept_id;</span><br><span class="line"></span><br><span class="line">-- 普通内连接</span><br><span class="line">SELECT * FROM emp t1,dept t2 WHERE t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96; AND t1.&#96;join_date&#96; &gt;  &#39;2011-11-11&#39;;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="多表查询练习"><a href="#多表查询练习" class="headerlink" title="多表查询练习"></a>多表查询练习</h2><p><strong>创建多个表格</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 部门表</span><br><span class="line">   CREATE TABLE dept (</span><br><span class="line">   id INT PRIMARY KEY PRIMARY KEY, -- 部门id</span><br><span class="line">   dname VARCHAR(50), -- 部门名称</span><br><span class="line">   loc VARCHAR(50) -- 部门所在地</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   -- 添加4个部门</span><br><span class="line">   INSERT INTO dept(id,dname,loc) VALUES</span><br><span class="line">   (10,&#39;教研部&#39;,&#39;北京&#39;),</span><br><span class="line">   (20,&#39;学工部&#39;,&#39;上海&#39;),</span><br><span class="line">   (30,&#39;销售部&#39;,&#39;广州&#39;),</span><br><span class="line">   (40,&#39;财务部&#39;,&#39;深圳&#39;);</span><br><span class="line"></span><br><span class="line">   -- 职务表，职务名称，职务描述</span><br><span class="line">   CREATE TABLE job (</span><br><span class="line">   id INT PRIMARY KEY,</span><br><span class="line">   jname VARCHAR(20),</span><br><span class="line">   description VARCHAR(50)</span><br><span class="line">   );</span><br><span class="line">   -- 添加4个职务</span><br><span class="line">   INSERT INTO job (id, jname, description) VALUES</span><br><span class="line">   (1, &#39;董事长&#39;, &#39;管理整个公司，接单&#39;),</span><br><span class="line">   (2, &#39;经理&#39;, &#39;管理部门员工&#39;),</span><br><span class="line">   (3, &#39;销售员&#39;, &#39;向客人推销产品&#39;),</span><br><span class="line">   (4, &#39;文员&#39;, &#39;使用办公软件&#39;);</span><br><span class="line"></span><br><span class="line">   -- 员工表</span><br><span class="line">   CREATE TABLE emp (</span><br><span class="line">   id INT PRIMARY KEY, -- 员工id</span><br><span class="line">   ename VARCHAR(50), -- 员工姓名</span><br><span class="line">   job_id INT, -- 职务id</span><br><span class="line">   mgr INT , -- 上级领导</span><br><span class="line">   joindate DATE, -- 入职日期</span><br><span class="line">   salary DECIMAL(7,2), -- 工资</span><br><span class="line">   bonus DECIMAL(7,2), -- 奖金</span><br><span class="line">   dept_id INT, -- 所在部门编号</span><br><span class="line">   CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),</span><br><span class="line">   CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   -- 添加员工</span><br><span class="line">   INSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES</span><br><span class="line">   (1001,&#39;孙悟空&#39;,4,1004,&#39;2000-12-17&#39;,&#39;8000.00&#39;,NULL,20),</span><br><span class="line">   (1002,&#39;卢俊义&#39;,3,1006,&#39;2001-02-20&#39;,&#39;16000.00&#39;,&#39;3000.00&#39;,30),</span><br><span class="line">   (1003,&#39;林冲&#39;,3,1006,&#39;2001-02-22&#39;,&#39;12500.00&#39;,&#39;5000.00&#39;,30),</span><br><span class="line">   (1004,&#39;唐僧&#39;,2,1009,&#39;2001-04-02&#39;,&#39;29750.00&#39;,NULL,20),</span><br><span class="line">   (1005,&#39;李逵&#39;,4,1006,&#39;2001-09-28&#39;,&#39;12500.00&#39;,&#39;14000.00&#39;,30),</span><br><span class="line">   (1006,&#39;宋江&#39;,2,1009,&#39;2001-05-01&#39;,&#39;28500.00&#39;,NULL,30),</span><br><span class="line">   (1007,&#39;刘备&#39;,2,1009,&#39;2001-09-01&#39;,&#39;24500.00&#39;,NULL,10),</span><br><span class="line">   (1008,&#39;猪八戒&#39;,4,1004,&#39;2007-04-19&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">   (1009,&#39;罗贯中&#39;,1,NULL,&#39;2001-11-17&#39;,&#39;50000.00&#39;,NULL,10),</span><br><span class="line">   (1010,&#39;吴用&#39;,3,1006,&#39;2001-09-08&#39;,&#39;15000.00&#39;,&#39;0.00&#39;,30),</span><br><span class="line">   (1011,&#39;沙僧&#39;,4,1004,&#39;2007-05-23&#39;,&#39;11000.00&#39;,NULL,20),</span><br><span class="line">   (1012,&#39;李逵&#39;,4,1006,&#39;2001-12-03&#39;,&#39;9500.00&#39;,NULL,30),</span><br><span class="line">   (1013,&#39;小白龙&#39;,4,1004,&#39;2001-12-03&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">   (1014,&#39;关羽&#39;,4,1007,&#39;2002-01-23&#39;,&#39;13000.00&#39;,NULL,10)</span><br><span class="line">   -- 工资等级表</span><br><span class="line">   CREATE TABLE salarygrade (</span><br><span class="line">   grade INT PRIMARY KEY,   -- 级别</span><br><span class="line">   losalary INT,  -- 最低工资</span><br><span class="line">   hisalary INT -- 最高工资</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   -- 添加5个工资等级</span><br><span class="line">   INSERT INTO salarygrade(grade,losalary,hisalary) VALUES</span><br><span class="line">   (1,7000,12000),</span><br><span class="line">   (2,12010,14000),</span><br><span class="line">   (3,14010,20000),</span><br><span class="line">   (4,20010,30000),</span><br><span class="line">   (5,30010,99990);</span><br></pre></td></tr></table></figure>

<p><strong>需求</strong>：</p>
<p>1.查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	分析：</span><br><span class="line">		1.员工编号，员工姓名，工资，需要查询emp表  职务名称，职务描述 需要查询job表</span><br><span class="line">		2.查询条件 emp.job_id &#x3D; job.id</span><br><span class="line"></span><br><span class="line">*&#x2F;</span><br><span class="line">SELECT </span><br><span class="line">	t1.&#96;id&#96;, -- 员工编号</span><br><span class="line">	t1.&#96;ename&#96;, -- 员工姓名</span><br><span class="line">	t1.&#96;salary&#96;,-- 工资</span><br><span class="line">	t2.&#96;jname&#96;, -- 职务名称</span><br><span class="line">	t2.&#96;description&#96; -- 职务描述</span><br><span class="line">FROM </span><br><span class="line">	emp t1, job t2</span><br><span class="line">WHERE </span><br><span class="line">	t1.&#96;job_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>



<p>2.查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	分析：</span><br><span class="line">		1. 员工编号，员工姓名，工资 emp  职务名称，职务描述 job  部门名称，部门位置 dept</span><br><span class="line">		2. 条件： emp.job_id &#x3D; job.id and emp.dept_id &#x3D; dept.id</span><br><span class="line">*&#x2F;</span><br><span class="line">				</span><br><span class="line">				SELECT </span><br><span class="line">					t1.&#96;id&#96;, -- 员工编号</span><br><span class="line">					t1.&#96;ename&#96;, -- 员工姓名</span><br><span class="line">					t1.&#96;salary&#96;,-- 工资</span><br><span class="line">					t2.&#96;jname&#96;, -- 职务名称</span><br><span class="line">					t2.&#96;description&#96;, -- 职务描述</span><br><span class="line">					t3.&#96;dname&#96;, -- 部门名称</span><br><span class="line">					t3.&#96;loc&#96; -- 部门位置</span><br><span class="line">				FROM </span><br><span class="line">					emp t1, job t2,dept t3</span><br><span class="line">				WHERE </span><br><span class="line">					t1.&#96;job_id&#96; &#x3D; t2.&#96;id&#96; AND t1.&#96;dept_id&#96; &#x3D; t3.&#96;id&#96;;</span><br></pre></td></tr></table></figure>

<p> 3.查询员工姓名，工资，工资等级</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	分析：</span><br><span class="line">		1.员工姓名，工资 emp  工资等级 salarygrade</span><br><span class="line">		2.条件 emp.salary &gt;&#x3D; salarygrade.losalary and emp.salary &lt;&#x3D; salarygrade.hisalary</span><br><span class="line">				emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary</span><br><span class="line">*&#x2F;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			SELECT </span><br><span class="line">				t1.ename ,</span><br><span class="line">				t1.&#96;salary&#96;,</span><br><span class="line">				t2.*</span><br><span class="line">			FROM emp t1, salarygrade t2</span><br><span class="line">			WHERE t1.&#96;salary&#96; BETWEEN t2.&#96;losalary&#96; AND t2.&#96;hisalary&#96;;</span><br></pre></td></tr></table></figure>

<p>4.查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">   分析：</span><br><span class="line">        1. 员工姓名，工资 emp ， 职务名称，职务描述 job 部门名称，部门位置，dept  工资等级 salarygrade</span><br><span class="line">        2. 条件： emp.job_id &#x3D; job.id </span><br><span class="line">        			and emp.dept_id &#x3D; dept.id </span><br><span class="line">        			and emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary</span><br><span class="line">              </span><br><span class="line">*&#x2F;</span><br><span class="line">        SELECT</span><br><span class="line">        t1.&#96;ename&#96;,</span><br><span class="line">        t1.&#96;salary&#96;,</span><br><span class="line">        t2.&#96;jname&#96;,</span><br><span class="line">        t2.&#96;description&#96;,</span><br><span class="line">        t3.&#96;dname&#96;,</span><br><span class="line">        t3.&#96;loc&#96;,</span><br><span class="line">        t4.&#96;grade&#96;</span><br><span class="line">        FROM</span><br><span class="line">        emp t1,job t2,dept t3,salarygrade t4</span><br><span class="line">        WHERE</span><br><span class="line">        t1.&#96;job_id&#96; &#x3D; t2.&#96;id&#96;</span><br><span class="line">        AND t1.&#96;dept_id&#96; &#x3D; t3.&#96;id&#96;</span><br><span class="line">        AND t1.&#96;salary&#96; BETWEEN t4.&#96;losalary&#96; AND t4.&#96;hisalary&#96;;</span><br></pre></td></tr></table></figure>

<p>5.查询出部门编号、部门名称、部门位置、部门人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">   分析：</span><br><span class="line">      1.部门编号、部门名称、部门位置 dept 表。 	部门人数 emp表</span><br><span class="line">      </span><br><span class="line">      2.使用分组查询。 按照emp.dept_id完成分组，查询count(id)</span><br><span class="line">      </span><br><span class="line">      3.使用子查询将第2步的查询结果和dept表进行关联查询</span><br><span class="line">*&#x2F;</span><br><span class="line">  SELECT</span><br><span class="line">     t1.&#96;id&#96;,t1.&#96;dname&#96;,t1.&#96;loc&#96; , t2.total</span><br><span class="line">  FROM</span><br><span class="line">     dept t1,</span><br><span class="line">     (SELECT</span><br><span class="line">        dept_id,COUNT(id) total</span><br><span class="line">     FROM</span><br><span class="line">        emp</span><br><span class="line">     GROUP BY dept_id) t2</span><br><span class="line">  WHERE t1.&#96;id&#96; &#x3D; t2.dept_id;</span><br></pre></td></tr></table></figure>

<p>6.查询所有员工的姓名及其直接上级的姓名,没有领导的员工也需要查询</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	分析：</span><br><span class="line">		1.姓名 emp， 直接上级的姓名 emp</span><br><span class="line">			* emp表的id 和 mgr 是自关联</span><br><span class="line">                            </span><br><span class="line">		2.条件 emp.id &#x3D; emp.mgr</span><br><span class="line">     					</span><br><span class="line">		3.查询左表的所有数据，和 交集数据</span><br><span class="line">			* 使用左外连接查询</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    SELECT</span><br><span class="line">                    t1.ename,</span><br><span class="line">                    t1.mgr,</span><br><span class="line">                    t2.&#96;id&#96;,</span><br><span class="line">                    t2.&#96;ename&#96;</span><br><span class="line">                    FROM emp t1</span><br><span class="line">                    LEFT JOIN emp t2</span><br><span class="line">                    ON t1.&#96;mgr&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>




<h2 id="02-事务"><a href="#02-事务" class="headerlink" title="02.事务"></a>02.事务</h2><p><strong>概念</strong>：</p>
<p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ol>
<li>开启事务： start transaction;</li>
<li>回滚：rollback;</li>
<li>提交：commit;</li>
</ol>
<h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE account (</span><br><span class="line">   	id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">   	NAME VARCHAR(10),</span><br><span class="line">   	balance DOUBLE</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">INSERT INTO account (NAME, balance) VALUES (&#39;zhangsan&#39;, 1000), (&#39;lisi&#39;, 1000);</span><br><span class="line"></span><br><span class="line">SELECT * FROM account;</span><br><span class="line"></span><br><span class="line">UPDATE account SET balance &#x3D; 1000;</span><br><span class="line">-- 张三给李四转账 500 元</span><br><span class="line"></span><br><span class="line">-- 0. 开启事务</span><br><span class="line">START TRANSACTION;</span><br><span class="line">-- 1. 张三账户 -500</span><br><span class="line"></span><br><span class="line">UPDATE account SET balance &#x3D; balance - 500 WHERE NAME &#x3D; &#39;zhangsan&#39;;</span><br><span class="line">-- 2. 李四账户 +500</span><br><span class="line">-- 出错了...</span><br><span class="line">UPDATE account SET balance &#x3D; balance + 500 WHERE NAME &#x3D; &#39;lisi&#39;;</span><br><span class="line"></span><br><span class="line">-- 发现执行没有问题，提交事务</span><br><span class="line">COMMIT;</span><br><span class="line"></span><br><span class="line">-- 发现出问题了，回滚事务</span><br><span class="line">ROLLBACK;</span><br></pre></td></tr></table></figure>



<h3 id="事务提交的两种方式："><a href="#事务提交的两种方式：" class="headerlink" title="事务提交的两种方式："></a>事务提交的两种方式：</h3><h4 id="自动提交："><a href="#自动提交：" class="headerlink" title="自动提交："></a>自动提交：</h4><p><strong>MySQL</strong>数据库中事务默认自动提交</p>
<ul>
<li>一条DML(增删改)语句会自动提交一次事务。</li>
</ul>
<h4 id="手动提交："><a href="#手动提交：" class="headerlink" title="手动提交："></a><strong>手动提交</strong>：</h4><p><strong>Oracle</strong> 数据库默认是手动提交事务</p>
<p>需要先开启事务，再提交</p>
<ul>
<li>查看事务的默认提交方式：SELECT @@autocommit; – 1  代表自动提交  0 代表手动提交<ul>
<li>修改默认提交方式： set @@autocommit = 0;</li>
</ul>
</li>
</ul>
<h3 id="事务的四大特征："><a href="#事务的四大特征：" class="headerlink" title="事务的四大特征："></a>事务的四大特征：</h3><ol>
<li>原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。</li>
<li>持久性：当事务提交或回滚后，数据库会持久化的保存数据。</li>
<li>隔离性：多个事务之间。相互独立。</li>
<li>一致性：事务操作前后，数据总量不变</li>
</ol>
<h3 id="事务的隔离级别（了解）"><a href="#事务的隔离级别（了解）" class="headerlink" title="事务的隔离级别（了解）"></a>事务的隔离级别（了解）</h3><p><strong>概念</strong>：多个事务之间隔离的，相互独立的。</p>
<ul>
<li>但是如果多个事务<strong>操作同一批数据</strong>，则会引发一些问题，<strong>设置不同的隔离级别</strong>就可以解决这些问题。</li>
</ul>
<h4 id="存在问题："><a href="#存在问题：" class="headerlink" title="存在问题："></a><strong>存在问题</strong>：</h4><ol>
<li>脏读：一个事务，读取到另一个事务中没有提交的数据</li>
<li>不可重复读(虚读)：在同一个事务中，两次读取到的数据不一样。</li>
<li>幻读：一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。</li>
</ol>
<h4 id="隔离级别："><a href="#隔离级别：" class="headerlink" title="隔离级别："></a><strong>隔离级别</strong>：</h4><ol>
<li>read uncommitted：读未提交<ul>
<li>产生的问题：脏读、不可重复读、幻读</li>
</ul>
</li>
<li>read committed：读已提交 （Oracle）<ul>
<li>产生的问题：不可重复读、幻读</li>
</ul>
</li>
<li>repeatable read：可重复读 （MySQL默认）<ul>
<li>产生的问题：幻读</li>
</ul>
</li>
<li>serializable：串行化<ul>
<li>可以解决所有的问题</li>
</ul>
</li>
</ol>
<p><strong>注意</strong>：</p>
<p>隔离级别从小到大安全性越来越高，但是效率越来越低</p>
<p><strong>数据库查询隔离级别</strong>：</p>
<p>select @@tx_isolation;</p>
<p><strong>数据库设置隔离级别</strong>：</p>
<p>set global transaction isolation level  级别字符串;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set global transaction isolation level read uncommitted;</span><br><span class="line"></span><br><span class="line">start transaction;</span><br><span class="line">-- 转账操作</span><br><span class="line">update account set balance &#x3D; balance - 500 where id &#x3D; 1;</span><br><span class="line">update account set balance &#x3D; balance + 500 where id &#x3D; 2;</span><br></pre></td></tr></table></figure>


<p>​    </p>
<h2 id="03-DCL："><a href="#03-DCL：" class="headerlink" title="03.DCL："></a>03.DCL：</h2><p><strong>SQL</strong>分类：</p>
<pre><code>1. DDL：操作数据库和表
2. DML：增删改表中数据
3. DQL：查询表中数据
4. DCL：管理用户，授权</code></pre><p><strong>DBA</strong>：数据库管理员</p>
<p><strong>DCL</strong>：管理用户，授权</p>
<h3 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h3><p>添加用户：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</span><br></pre></td></tr></table></figure>

<p>删除用户：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</span><br></pre></td></tr></table></figure>

<p>修改用户密码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE USER SET PASSWORD &#x3D; PASSWORD(&#39;新密码&#39;) WHERE USER &#x3D; &#39;用户名&#39;;</span><br><span class="line">UPDATE USER SET PASSWORD &#x3D; PASSWORD(&#39;abc&#39;) WHERE USER &#x3D; &#39;lisi&#39;;</span><br><span class="line"></span><br><span class="line">SET PASSWORD FOR &#39;用户名&#39;@&#39;主机名&#39; &#x3D; PASSWORD(&#39;新密码&#39;);</span><br><span class="line">SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; &#x3D; PASSWORD(&#39;123&#39;);</span><br></pre></td></tr></table></figure>

<h4 id="忘记root用户的密码"><a href="#忘记root用户的密码" class="headerlink" title="忘记root用户的密码"></a>忘记root用户的密码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. cmd -- &gt; net stop mysql 停止mysql服务</span><br><span class="line">	* 需要管理员运行该cmd</span><br><span class="line"></span><br><span class="line">2. 使用无验证方式启动mysql服务： mysqld --skip-grant-tables</span><br><span class="line">3. 打开新的cmd窗口,直接输入mysql命令，敲回车。就可以登录成功</span><br><span class="line">4. use mysql;</span><br><span class="line">5. update user set password &#x3D; password(&#39;你的新密码&#39;) where user &#x3D; &#39;root&#39;;</span><br><span class="line">6. 关闭两个窗口</span><br><span class="line">7. 打开任务管理器，手动结束mysqld.exe 的进程</span><br><span class="line">8. 启动mysql服务</span><br><span class="line">9. 使用新密码登录。</span><br></pre></td></tr></table></figure>


<h3 id="查询用户："><a href="#查询用户：" class="headerlink" title="查询用户："></a>查询用户：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 1. 切换到mysql数据库</span><br><span class="line">USE myql;</span><br><span class="line">-- 2. 查询user表</span><br><span class="line">SELECT * FROM USER;</span><br><span class="line"></span><br><span class="line">* 通配符： % 表示可以在任意主机使用用户登录数据库</span><br></pre></td></tr></table></figure>



<h3 id="权限管理："><a href="#权限管理：" class="headerlink" title="权限管理："></a>权限管理：</h3><h4 id="查询权限："><a href="#查询权限：" class="headerlink" title="查询权限："></a>查询权限：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询权限</span><br><span class="line">SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">SHOW GRANTS FOR &#39;lisi&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>



<h4 id="授予权限："><a href="#授予权限：" class="headerlink" title="授予权限："></a>授予权限：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 授予权限</span><br><span class="line">grant 权限列表 on 数据库名.表名 to &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">-- 给张三用户授予所有权限，在任意数据库任意表上</span><br><span class="line"></span><br><span class="line">GRANT ALL ON *.* TO &#39;zhangsan&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>



<h4 id="撤销权限："><a href="#撤销权限：" class="headerlink" title="撤销权限："></a>撤销权限：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql-- 撤销权限：mysql</span><br><span class="line">revoke 权限列表 on 数据库名.表名 from &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">REVOKE UPDATE ON db3.&#96;account&#96; FROM &#39;lisi&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>List-02_DQL&amp;约束</title>
    <url>/2021/03/26/MySQL/List-02_DQL&amp;%E7%BA%A6%E6%9D%9F/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ul>
<li><p>DQL:查询语句</p>
<ul>
<li>排序查询</li>
<li>聚合函数</li>
<li>分组查询</li>
<li>分页查询</li>
</ul>
</li>
<li><p>约束</p>
</li>
<li><p>多表之间的关系</p>
</li>
<li><p>范式</p>
</li>
<li><p>数据库的备份和还原</p>
</li>
</ul>
<h2 id="0-1-DQL-查询语句"><a href="#0-1-DQL-查询语句" class="headerlink" title="0.1 DQL:查询语句"></a>0.1 DQL:查询语句</h2><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><ul>
<li><p>语法：order by 子句</p>
<ul>
<li>order by 排序字段1 排序方式1 ，  排序字段2 排序方式2…</li>
</ul>
</li>
<li><p>排序方式：</p>
<ul>
<li>ASC：升序，默认的。</li>
<li>DESC：降序。</li>
</ul>
</li>
<li><p>注意：</p>
<ul>
<li>如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。</li>
</ul>
</li>
</ul>
<h4 id="聚合函数："><a href="#聚合函数：" class="headerlink" title="聚合函数："></a>聚合函数：</h4><ul>
<li>将一列数据作为一个整体，进行纵向的计算。</li>
</ul>
<ul>
<li><p><strong>count：计算个数</strong></p>
<ol>
<li>一般选择非空的列：主键</li>
<li>count(*)</li>
</ol>
</li>
<li><p><strong>max：计算最大值</strong></p>
</li>
<li><p><strong>min：计算最小值</strong></p>
</li>
<li><p><strong>sum：计算和</strong></p>
</li>
<li><p><strong>avg：计算平均值</strong></p>
</li>
<li><p><strong>注意：聚合函数的计算，排除null值。</strong></p>
<ul>
<li><strong>解决方案：</strong><ul>
<li>选择不包含非空的列进行计算</li>
<li>IFNULL函数</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询:"></a>分组查询:</h4><ul>
<li>语法：group by 分组字段；</li>
</ul>
<ul>
<li>分组之后查询的字段：<strong>分组字段、聚合函数</strong>。分组查询通常和聚合函数，一同使用。</li>
</ul>
<ul>
<li><p><strong>where 和 having 的区别？</strong></p>
<ul>
<li>where <strong>在分组之前进行限定</strong>，如果不满足条件，则不参与分组。</li>
<li>having<strong>在分组之后进行限定</strong>，如果不满足结果，则不会被查询出来</li>
<li><strong>where 后不可以跟聚合函数，having可以进行聚合函数的判断。</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. -- 按照性别分组。分别查询男、女同学的平均分</span><br><span class="line"></span><br><span class="line">   SELECT sex , AVG(math) FROM student GROUP BY sex;</span><br><span class="line"></span><br><span class="line">   -- 按照性别分组。分别查询男、女同学的平均分,人数</span><br><span class="line"></span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) FROM student GROUP BY sex;</span><br><span class="line"></span><br><span class="line">   --  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组</span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex;</span><br><span class="line"></span><br><span class="line">   --  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组,分组之后。人数要大于2个人</span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex HAVING COUNT(id) &gt; 2;</span><br><span class="line"></span><br><span class="line">   SELECT sex , AVG(math),COUNT(id) 人数 FROM student WHERE math &gt; 70 GROUP BY sex HAVING 人数 &gt; 2;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><ul>
<li><p><strong>语法</strong>：limit 开始的索引 , 每页查询的条数；</p>
</li>
<li><p><strong>公式</strong>：<strong>开始的索引</strong> = （当前的页码 - 1） *  每页显示的条数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 每页显示3条记录 </span><br><span class="line"></span><br><span class="line">SELECT * FROM student LIMIT 0,3; -- 第1页</span><br><span class="line"></span><br><span class="line">SELECT * FROM student LIMIT 3,3; -- 第2页</span><br><span class="line"></span><br><span class="line">SELECT * FROM student LIMIT 6,3; -- 第3页</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><strong>limit 是一个MySQL”方言”</strong></li>
</ul>
<h2 id="0-2-约束"><a href="#0-2-约束" class="headerlink" title="0.2 约束"></a>0.2 约束</h2><ul>
<li>概念： 对表中的数据进行限定，保证数据的正确性、有效性和完整性。    </li>
</ul>
<h4 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h4><ol>
<li>主键约束：primary key</li>
<li>非空约束：not null</li>
<li>唯一约束：unique</li>
<li>外键约束：foreign key</li>
</ol>
<h4 id="非空约束：not-null"><a href="#非空约束：not-null" class="headerlink" title="非空约束：not null"></a>非空约束：not null</h4><p>值不能为null</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 创建表时添加约束</span><br><span class="line"></span><br><span class="line">   CREATE TABLE stu(</span><br><span class="line">   	id INT,</span><br><span class="line">   	NAME VARCHAR(20) NOT NULL -- name为非空</span><br><span class="line">   );</span><br><span class="line">   </span><br><span class="line">2. 创建表完后，添加非空约束</span><br><span class="line">   ALTER TABLE stu MODIFY NAME VARCHAR(20) NOT NULL;</span><br><span class="line"></span><br><span class="line">3. 删除name的非空约束</span><br><span class="line">   ALTER TABLE stu MODIFY NAME VARCHAR(20);</span><br></pre></td></tr></table></figure>


<p>​    </p>
<h4 id="唯一约束：unique"><a href="#唯一约束：unique" class="headerlink" title="唯一约束：unique"></a>唯一约束：unique</h4><p>值不能重复</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 创建表时，添加唯一约束</span><br><span class="line"></span><br><span class="line">2. CREATE TABLE stu(</span><br><span class="line">   id INT,</span><br><span class="line">   	phone_number VARCHAR(20) UNIQUE -- 添加了唯一约束</span><br><span class="line"></span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   * 注意mysql中，唯一约束限定的列的值可以有多个null</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">3. 删除唯一约束</span><br><span class="line"></span><br><span class="line">   ALTER TABLE stu DROP INDEX phone_number;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 在创建表后，添加唯一约束</span><br><span class="line">   ALTER TABLE stu MODIFY phone_number VARCHAR(20) UNIQUE;</span><br></pre></td></tr></table></figure>

<h4 id="主键约束：primary-key"><a href="#主键约束：primary-key" class="headerlink" title="主键约束：primary key"></a>主键约束：primary key</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 注意：</span><br><span class="line"></span><br><span class="line">   1. 含义：非空且唯一</span><br><span class="line">   2. 一张表只能有一个字段为主键</span><br><span class="line">   3. 主键就是表中记录的唯一标识</span><br><span class="line"></span><br><span class="line">2. 在创建表时，添加主键约束</span><br><span class="line"></span><br><span class="line">   create table stu(</span><br><span class="line">   	id int primary key,-- 给id添加主键约束</span><br><span class="line">   	name varchar(20)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">3. 删除主键</span><br><span class="line">   -- 错误 alter table stu modify id int ;</span><br><span class="line">     ALTER TABLE stu DROP PRIMARY KEY;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 创建完表后，添加主键</span><br><span class="line">   ALTER TABLE stu MODIFY id INT PRIMARY KEY;</span><br></pre></td></tr></table></figure>





<h4 id="自动增长："><a href="#自动增长：" class="headerlink" title="自动增长："></a>自动增长：</h4><p><strong>概念：</strong></p>
<p>如果某一列是数值类型的，使用 <strong>auto_increment</strong> 可以来完成值得自动增长</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 在创建表时，添加主键约束，并且完成主键自增长</span><br><span class="line"></span><br><span class="line">  create table stu(</span><br><span class="line">  id int primary key auto_increment,-- 给id添加主键约束</span><br><span class="line">  name varchar(20)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 删除自动增长</span><br><span class="line">   ALTER TABLE stu MODIFY id INT;</span><br><span class="line"></span><br><span class="line">3. 添加自动增长</span><br><span class="line">   ALTER TABLE stu MODIFY id INT AUTO_INCREMENT;</span><br></pre></td></tr></table></figure>



<h4 id="外键约束：foreign-key"><a href="#外键约束：foreign-key" class="headerlink" title="外键约束：foreign key"></a>外键约束：foreign key</h4><p>让表于表产生关系，从而保证数据的正确性。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 在创建表时，可以添加外键</span><br><span class="line"></span><br><span class="line">   * 语法：</span><br><span class="line"></span><br><span class="line">     create table 表名(</span><br><span class="line">     	....</span><br><span class="line">     	外键列</span><br><span class="line">     constraint 外键名称 foreign key (外键列名称) references 主表名称(主表列名称)</span><br><span class="line">     );</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">2. 删除外键</span><br><span class="line">   ALTER TABLE 表名 DROP FOREIGN KEY 外键名称;</span><br><span class="line"></span><br><span class="line">3. 创建表之后，添加外键</span><br><span class="line"></span><br><span class="line">  ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称);</span><br></pre></td></tr></table></figure>



<h4 id="级联操作"><a href="#级联操作" class="headerlink" title="级联操作"></a>级联操作</h4><p>添加级联操作</p>
<p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 </span><br><span class="line">FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称) ON UPDATE CASCADE ON DELETE CASCADE  ;</span><br></pre></td></tr></table></figure>

<p>分类：</p>
<ol>
<li>级联更新：ON UPDATE CASCADE </li>
<li>级联删除：ON DELETE CASCADE </li>
</ol>
<h2 id="0-3-数据库的设计"><a href="#0-3-数据库的设计" class="headerlink" title="0.3 数据库的设计"></a>0.3 数据库的设计</h2><h4 id="多表之间的关系"><a href="#多表之间的关系" class="headerlink" title="多表之间的关系"></a>多表之间的关系</h4><ul>
<li><h4 id="分类：-1"><a href="#分类：-1" class="headerlink" title="分类："></a>分类：</h4></li>
</ul>
<ul>
<li><p>一对一(了解)：</p>
<ul>
<li>如：人和身份证</li>
<li>分析：一个人只有一个身份证，一个身份证只能对应一个人</li>
</ul>
</li>
<li><p>一对多(多对一)：</p>
<ul>
<li>如：部门和员工</li>
<li>分析：一个部门有多个员工，一个员工只能对应一个部门</li>
</ul>
</li>
<li><p>多对多：</p>
<ul>
<li>如：学生和课程</li>
<li>分析：一个学生可以选择很多门课程，一个课程也可以被很多学生选择</li>
</ul>
</li>
</ul>
<h4 id="实现关系："><a href="#实现关系：" class="headerlink" title="实现关系："></a>实现关系：</h4><ul>
<li><p><strong>一对多</strong>(多对一)：</p>
<ul>
<li>如：部门和员工</li>
<li>实现方式：在   <strong>多的一方</strong>   建立外键，指向  <strong>一的一方</strong>    的主键。</li>
</ul>
</li>
<li><p><strong>多对多</strong>：</p>
<ul>
<li>如：学生和课程</li>
<li>实现方式：多对多关系实现需要借助<strong>第三张中间表</strong>。<ul>
<li><strong>中间表至少包含两个字段</strong>，这两个字段作为第三张表的外键，分别指向两张表的主键</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>一对一</strong>(了解)：</p>
<ul>
<li>如：人和身份证</li>
<li>实现方式：一对一关系实现，可以在<strong>任意一方添加唯一外键</strong>指向另一方的主键。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3. 案例</span><br><span class="line">	-- 创建旅游线路分类表 tab_category</span><br><span class="line">	-- cid 旅游线路分类主键，自动增长</span><br><span class="line">	-- cname 旅游线路分类名称非空，唯一，字符串 100</span><br><span class="line">	CREATE TABLE tab_category (</span><br><span class="line">		cid INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">		cname VARCHAR(100) NOT NULL UNIQUE</span><br><span class="line">	);</span><br><span class="line">	</span><br><span class="line">	-- 创建旅游线路表 tab_route</span><br><span class="line">	&#x2F;*</span><br><span class="line">	rid 旅游线路主键，自动增长</span><br><span class="line">	rname 旅游线路名称非空，唯一，字符串 100</span><br><span class="line">	price 价格</span><br><span class="line">	rdate 上架时间，日期类型</span><br><span class="line">	cid 外键，所属分类</span><br><span class="line">	*&#x2F;</span><br><span class="line">	CREATE TABLE tab_route(</span><br><span class="line">		rid INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">		rname VARCHAR(100) NOT NULL UNIQUE,</span><br><span class="line">		price DOUBLE,</span><br><span class="line">		rdate DATE,</span><br><span class="line">		cid INT,</span><br><span class="line">		FOREIGN KEY (cid) REFERENCES tab_category(cid)</span><br><span class="line">	);</span><br><span class="line">	</span><br><span class="line">	&#x2F;*创建用户表 tab_user</span><br><span class="line">	uid 用户主键，自增长</span><br><span class="line">	username 用户名长度 100，唯一，非空</span><br><span class="line">	password 密码长度 30，非空</span><br><span class="line">	name 真实姓名长度 100</span><br><span class="line">	birthday 生日</span><br><span class="line">	sex 性别，定长字符串 1</span><br><span class="line">	telephone 手机号，字符串 11</span><br><span class="line">	email 邮箱，字符串长度 100</span><br><span class="line">	*&#x2F;</span><br><span class="line">	CREATE TABLE tab_user (</span><br><span class="line">		uid INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">		username VARCHAR(100) UNIQUE NOT NULL,</span><br><span class="line">		PASSWORD VARCHAR(30) NOT NULL,</span><br><span class="line">		NAME VARCHAR(100),</span><br><span class="line">		birthday DATE,</span><br><span class="line">		sex CHAR(1) DEFAULT &#39;男&#39;,</span><br><span class="line">		telephone VARCHAR(11),</span><br><span class="line">		email VARCHAR(100)</span><br><span class="line">	);</span><br><span class="line">	</span><br><span class="line">	&#x2F;*</span><br><span class="line">	创建收藏表 tab_favorite</span><br><span class="line">	rid 旅游线路 id，外键</span><br><span class="line">	date 收藏时间</span><br><span class="line">	uid 用户 id，外键</span><br><span class="line">	rid 和 uid 不能重复，设置复合主键，同一个用户不能收藏同一个线路两次</span><br><span class="line">	*&#x2F;</span><br><span class="line">	CREATE TABLE tab_favorite (</span><br><span class="line">		rid INT, -- 线路id</span><br><span class="line">		DATE DATETIME,</span><br><span class="line">		uid INT, -- 用户id</span><br><span class="line">		-- 创建复合主键</span><br><span class="line">		PRIMARY KEY(rid,uid), -- 联合主键</span><br><span class="line">		FOREIGN KEY (rid) REFERENCES tab_route(rid),</span><br><span class="line">		FOREIGN KEY(uid) REFERENCES tab_user(uid)</span><br><span class="line">	);</span><br></pre></td></tr></table></figure>


<p>​        </p>
<h2 id="0-4-数据库设计的范式"><a href="#0-4-数据库设计的范式" class="headerlink" title="0.4 数据库设计的范式"></a>0.4 数据库设计的范式</h2><h4 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h4><ul>
<li>设计数据库时，需要遵循的一些<strong>规范</strong>。</li>
<li>要遵循后边的范式要求，<strong>必须先遵循前边的</strong>所有范式要求</li>
<li>设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库</li>
<li>这些不同的规范要求被称为不同的范式</li>
<li>各种范式呈递次规范，越高的范式数据库冗余越小。</li>
</ul>
<h4 id="六种范式："><a href="#六种范式：" class="headerlink" title="六种范式："></a>六种范式：</h4><ul>
<li>第一范式（1NF）、第二范式（2NF）、第三范式（3NF）</li>
<li>巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。</li>
</ul>
<blockquote>
<h4 id="分类：-2"><a href="#分类：-2" class="headerlink" title="分类："></a>分类：</h4></blockquote>
<p>第一范式（1NF）：<strong>每一列都是不可分割的原子数据项</strong></p>
<p>第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于码（在1NF<strong>基础上消除非主属性对主码的部分函数依赖</strong>）</p>
<p>第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF<strong>基础上消除传递依赖</strong>）</p>
<h4 id="几个概念："><a href="#几个概念：" class="headerlink" title="几个概念："></a>几个概念：</h4><blockquote>
<h4 id="函数依赖："><a href="#函数依赖：" class="headerlink" title="函数依赖："></a>函数依赖：</h4></blockquote>
<p>A–&gt;B,如果通过A属性(属性组)的值，可以<strong>确定唯一</strong>B属性的值。则称B依赖于A</p>
<p>例如：学号–&gt;姓名。  （学号，课程名称） –&gt; 分数</p>
<blockquote>
<h4 id="完全函数依赖："><a href="#完全函数依赖：" class="headerlink" title="完全函数依赖："></a>完全函数依赖：</h4></blockquote>
<p>A–&gt;B， 如果A是一个属性组，则B属性值得确定需要依赖于A属性组中<strong>所有的属性值</strong>。</p>
<p>例如：（学号，课程名称） –&gt; 分数</p>
<blockquote>
<h4 id="部分函数依赖："><a href="#部分函数依赖：" class="headerlink" title="部分函数依赖："></a>部分函数依赖：</h4></blockquote>
<p>A–&gt;B， 如果A是一个属性组，则B属性值得确定只需要依赖于A属性组中<strong>某一些值</strong>即可。</p>
<p>例如：（学号，课程名称） – &gt; 姓名</p>
<blockquote>
<h4 id="传递函数依赖："><a href="#传递函数依赖：" class="headerlink" title="传递函数依赖："></a>传递函数依赖：</h4></blockquote>
<p>A–&gt;B, B – &gt;C . 如果通过A属性(属性组)的值，可以确定唯一B属性的值，在通过B属性（属性组）的值可以确定唯一C属性的值，则称 C 传递函数依赖于A<br>例如：学号–&gt;系名，系名–&gt;系主任</p>
<blockquote>
<h4 id="码："><a href="#码：" class="headerlink" title="码："></a>码：</h4></blockquote>
<p>如果在一张表中，一个属性或属性组，<strong>被其他所有属性所完全依赖</strong>，则称这个属性(属性组)为该表的码<br>例如：该表中码为：（学号，课程名称）</p>
<ul>
<li>主属性：<strong>码属性组中</strong>的所有属性</li>
<li>非主属性：<strong>除过</strong>码属性组的属性</li>
</ul>
<h2 id="0-5-数据库的备份和还原"><a href="#0-5-数据库的备份和还原" class="headerlink" title="0.5 数据库的备份和还原"></a>0.5 数据库的备份和还原</h2><h4 id="命令行："><a href="#命令行：" class="headerlink" title="命令行："></a>命令行：</h4><ul>
<li>备份： </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqldump -u用户名 -p密码 数据库名称 &gt; 保存的路径</span><br></pre></td></tr></table></figure>

<ul>
<li><p>还原：</p>
<ol>
<li>登录数据库</li>
<li>创建数据库</li>
<li>使用数据库</li>
<li>执行文件。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source 文件路径</span><br></pre></td></tr></table></figure>



</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>List-01_DDL&amp;DML&amp;DQL</title>
    <url>/2021/03/26/MySQL/List-01_DDL&amp;DML&amp;DQL/</url>
    <content><![CDATA[<h3 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h3><ol>
<li>数据库的基本概念</li>
</ol>
<ol start="2">
<li>MySQL数据库软件<ol>
<li>安装</li>
<li>卸载</li>
<li>配置</li>
</ol>
</li>
<li>SQL</li>
</ol>
<h2 id="01-数据库的基本概念"><a href="#01-数据库的基本概念" class="headerlink" title="01.数据库的基本概念"></a>01.数据库的基本概念</h2><ol>
<li>数据库的英文单词： DataBase 简称 ： DB</li>
<li>什么数据库？</li>
</ol>
<ul>
<li>用于存储和管理数据的仓库。</li>
</ul>
<ol start="3">
<li><p>数据库的特点：</p>
<ol>
<li>持久化存储数据的。其实数据库就是一个文件系统</li>
<li>方便存储和管理数据</li>
<li>使用了统一的方式操作数据库 – SQL</li>
</ol>
</li>
</ol>
<h2 id="02-MySQL配置"><a href="#02-MySQL配置" class="headerlink" title="02.MySQL配置"></a>02.MySQL配置</h2><h5 id="MySQL启动"><a href="#MySQL启动" class="headerlink" title="MySQL启动"></a>MySQL启动</h5><ol>
<li>cmd–&gt; services.msc 打开服务的窗口</li>
<li>需要使用管理员权限打开cmd命令行窗口</li>
</ol>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql		启动mysql的服务</span><br><span class="line"><span class="built_in">net</span> stop mysql		关闭mysql服务</span><br></pre></td></tr></table></figure>



<h5 id="MySQL登录"><a href="#MySQL登录" class="headerlink" title="MySQL登录"></a>MySQL登录</h5><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p密码</span><br><span class="line"></span><br><span class="line">mysql -hip -uroot -p连接目标的密码</span><br><span class="line"></span><br><span class="line">mysql --host=ip --user=root --password=连接目标的密码</span><br></pre></td></tr></table></figure>



<h5 id="MySQL退出"><a href="#MySQL退出" class="headerlink" title="MySQL退出"></a>MySQL退出</h5><ol>
<li>exit</li>
<li>quit</li>
</ol>
<h5 id="MySQL目录结构"><a href="#MySQL目录结构" class="headerlink" title="MySQL目录结构"></a>MySQL目录结构</h5><ol>
<li>MySQL<strong>安装目录</strong>：basedir=”D:/develop/MySQL/“ <ul>
<li>配置文件 my.ini</li>
</ul>
</li>
<li>MySQL<strong>数据目录</strong>：datadir=”C:/ProgramData/MySQL/MySQL Server 5.5/Data/“<ul>
<li>几个概念<ul>
<li>数据库：文件夹</li>
<li>表：文件</li>
<li>数据：数据</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="03-SQL"><a href="#03-SQL" class="headerlink" title="03.SQL"></a>03.SQL</h2><h5 id="什么是SQL？"><a href="#什么是SQL？" class="headerlink" title="什么是SQL？"></a>什么是SQL？</h5><p>​    Structured Query Language：结构化查询语言，其实就是定义了操作所有关系型数据库的规则。</p>
<p>每一种数据库操作的方式存在不一样的地方，称为“方言”。</p>
<h4 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h4><ul>
<li>SQL 语句可以<strong>单行或多行书写，以分号结尾。</strong></li>
</ul>
<ul>
<li><p><strong>可使用空格和缩进来增强语句的可读性</strong>。</p>
</li>
<li><p>MySQL 数据库的 SQL 语句<strong>不区分大小写，关键字建议使用大写。</strong></p>
</li>
</ul>
<ul>
<li><p>3 种注释</p>
<ul>
<li>单行注释: –  注释内容 或 #  注释内容(mysql 特有) </li>
<li>多行注释: /* 注释 */</li>
</ul>
</li>
</ul>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES</span><br><span class="line">SHOW DATABASES; -- 查询所有数据库的名称</span><br><span class="line">SHOW DATABASES;#HELLOWORLD</span><br></pre></td></tr></table></figure>

<h4 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h4><p>1) DDL        (Data Definition Language)</p>
<p>​        <strong>数据定义语言</strong></p>
<p>​    <strong>操作数据库，表</strong></p>
<p>​    关键字：create, drop,alter 等</p>
<p>2) DML        (Data Manipulation Language)</p>
<p>​        <strong>数据操作语言</strong></p>
<p>​    <strong>增删改表中的数据</strong></p>
<p>​    关键字：insert, delete, update 等</p>
<p>3) DQL        (Data Query Language)</p>
<p>​        <strong>数据查询语言</strong></p>
<p>​    <strong>查询表中的数据</strong></p>
<p>​    关键字：select, where 等</p>
<p>4) DCL        (Data Control Language)</p>
<p>​    <strong>数据控制语言(了解)</strong></p>
<p>​    <strong>授权</strong></p>
<p>关键字：GRANT， REVOKE 等</p>
<h2 id="04-DDL-操作数据库、表"><a href="#04-DDL-操作数据库、表" class="headerlink" title="04.DDL:操作数据库、表"></a>04.DDL:操作数据库、表</h2><h4 id="操作数据库：CRUD"><a href="#操作数据库：CRUD" class="headerlink" title="操作数据库：CRUD"></a>操作数据库：CRUD</h4><p><strong>C(Create)：创建</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE 数据库名称;						//创建数据库</span><br><span class="line">CREATE DATABASE <span class="keyword">IF</span> <span class="keyword">NOT</span> EXISTS 数据库名称;		//先判断是否存在，再创建</span><br><span class="line">CREATE DATABASE 数据库名称 CHARACTER <span class="built_in">SET</span> GBK;				//创建数据库，并指定字符集</span><br><span class="line"></span><br><span class="line">CREATE DATABASE <span class="keyword">IF</span> <span class="keyword">NOT</span> EXISTS DB4 CHARACTER <span class="built_in">SET</span> GBK;	//综合</span><br></pre></td></tr></table></figure>

<p><strong>R(Retrieve)：查询</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;						查询所有数据库的名称</span><br><span class="line">SHOW CREATE DATABASE 数据库名称;		 查询某个数据库的字符集</span><br></pre></td></tr></table></figure>



<p><strong>U(Update):修改</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE 数据库名称 CHARACTER <span class="built_in">SET</span> UTF8;</span><br></pre></td></tr></table></figure>

<p><strong>D(Delete):删除</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">DROP DATABASE DA2;</span><br><span class="line">DROP DATABASE <span class="keyword">IF</span> EXISTS DA2;</span><br></pre></td></tr></table></figure>



<h4 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">USE 数据库名称;						//使用数据库</span><br><span class="line">SELECT DATABASE();					//查询当前正在使用的数据库名称</span><br></pre></td></tr></table></figure>

<p><strong>注意：最后一列，不需要加逗号（,）</strong></p>
<h4 id="操作表"><a href="#操作表" class="headerlink" title="操作表"></a>操作表</h4><p><strong>C(Create):创建</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">	列名1 数据类型1,</span><br><span class="line">	列名2 数据类型2,</span><br><span class="line">	....</span><br><span class="line">	列名n 数据类型n</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	CREATE TABLE STUDENT(				&#x2F;&#x2F;创建表</span><br><span class="line">			ID INT,</span><br><span class="line">			NAME VARCHAR(32),</span><br><span class="line">			AGE INT,</span><br><span class="line">			SCORE DOUBLE(4,1),</span><br><span class="line">			BIRTHDAY DATE,</span><br><span class="line">			INSERT_TIME TIMESTAMP</span><br><span class="line">	);</span><br><span class="line">	</span><br><span class="line">	CREATE TABLE 表名 LIKE 被复制的表名		&#x2F;&#x2F;复制表</span><br></pre></td></tr></table></figure>

<p><strong>R(Retrieve)：查询</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW TABLES;				  &#x2F;&#x2F;查询某个数据库中所有的表名称</span><br><span class="line">DESC 表名;			   		&#x2F;&#x2F;查询表结构</span><br><span class="line">SHOW CREATE TABLES 表名;		&#x2F;&#x2F;查询某个表的字符集</span><br></pre></td></tr></table></figure>

<p><strong>U(Update):修改</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 RENAME TO 新的表名;</span><br><span class="line">ALTER TABLE 表名 CHARACTER SET 字符集名称;</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 ADD 列名 数据类型;</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 CHANGE 列名 新列名 新数据类型;</span><br><span class="line">ALTER TABLE 表名 MODIFY 列名 新数据类型;</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 DROP 列名;</span><br></pre></td></tr></table></figure>

<p><strong>D(Delete):删除</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">DROP TABLE 表名;</span><br><span class="line">DROP TABLE <span class="keyword">IF</span> EXISTS 表名;</span><br></pre></td></tr></table></figure>



<h4 id="数据库数据类型："><a href="#数据库数据类型：" class="headerlink" title="数据库数据类型："></a>数据库数据类型：</h4><p><strong>int</strong>：整数类型</p>
<ul>
<li>age int,</li>
</ul>
<p><strong>double</strong>:小数类型</p>
<ul>
<li>score double(5,2)</li>
</ul>
<p><strong>date</strong>:日期，只包含年月日，yyyy-MM-dd</p>
<p><strong>datetime</strong>:日期，包含年月日时分秒     yyyy-MM-dd HH:mm:ss</p>
<p><strong>timestamp</strong>:时间错类型    包含年月日时分秒     yyyy-MM-dd HH:mm:ss    </p>
<ol>
<li>如果将来不给这个字段赋值，或赋值为null，则默认使用当前的系统时间，来自动赋值</li>
</ol>
<p><strong>varchar</strong>：字符串</p>
<ol>
<li>name varchar(20):姓名最大20个字符</li>
<li>zhangsan 8个字符  张三 2个字符</li>
</ol>
<h2 id="05-DML：增删改表中数据"><a href="#05-DML：增删改表中数据" class="headerlink" title="05.DML：增删改表中数据"></a>05.DML：增删改表中数据</h2><h4 id="添加数据："><a href="#添加数据：" class="headerlink" title="添加数据："></a>添加数据：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名(列名1,列名2,...列名n) VALUES(值1,值2,...值n);</span><br></pre></td></tr></table></figure>

<ul>
<li>注意：<ol>
<li>列名和值要一一对应。</li>
<li>如果表名后，不定义列名，则默认给所有列添加值<br>insert into 表名 values(值1,值2,…值n);</li>
<li>除了数字类型，其他类型需要使用引号(单双都可以)引起来</li>
</ol>
</li>
</ul>
<h4 id="删除数据："><a href="#删除数据：" class="headerlink" title="删除数据："></a>删除数据：</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">DELETE FROM 表名 WHERE 条件;</span><br><span class="line"></span><br><span class="line">DELETE FROM 表名 ;				//删除所有记录,不推荐使用</span><br><span class="line">TRUNCATE TABLE 表名;					//删除所有记录,然后再创建一张新表</span><br></pre></td></tr></table></figure>

<h4 id="修改数据："><a href="#修改数据：" class="headerlink" title="修改数据："></a>修改数据：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE 表名 SET 列名1&#x3D;值1,列名2&#x3D;值2,...[WHERE 条件]</span><br><span class="line">UPDATE 表名 SET 列名1&#x3D;值1,列名2&#x3D;值2,...</span><br></pre></td></tr></table></figure>

<ul>
<li>注意：<ol>
<li>如果不加任何条件，则会将表中所有记录全部修改。</li>
</ol>
</li>
</ul>
<h2 id="06-DQL：查询表中的记录"><a href="#06-DQL：查询表中的记录" class="headerlink" title="06.DQL：查询表中的记录"></a>06.DQL：查询表中的记录</h2><h4 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">	字段列表</span><br><span class="line">from</span><br><span class="line">	表名列表</span><br><span class="line">where</span><br><span class="line">	条件列表</span><br><span class="line">group by</span><br><span class="line">	分组字段</span><br><span class="line">having</span><br><span class="line">	分组之后的条件</span><br><span class="line">order by</span><br><span class="line">	排序</span><br><span class="line">limit</span><br><span class="line">	分页限定</span><br></pre></td></tr></table></figure>



<h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><ol>
<li>多个字段的查询</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select 字段名1，字段名2... from 表名;</span><br><span class="line">SELECT * FROM 表名;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>去除重复：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT 字段名 FROM 表名;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>计算列</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT AGE,MONEY,AGE+MONEY FROM STU;</span><br><span class="line"></span><br><span class="line">SELECT AGE,MONEY,AGE+IFNULL(MONEY,0) FROM STU;</span><br></pre></td></tr></table></figure>

<ul>
<li>ifnull(表达式1,表达式2)：null参与的运算，计算结果都为null<ul>
<li>表达式1：哪个字段需要判断是否为null</li>
<li>如果该字段为null后的替换值。</li>
</ul>
</li>
</ul>
<ol start="4">
<li>起别名</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT AGE 年龄,MONEY 价钱,AGE+MONEY 综合 FROM STU;</span><br><span class="line"></span><br><span class="line">SELECT AGE AS 年龄,MONEY 价钱,AGE+MONEY AS 综合 FROM STU;</span><br></pre></td></tr></table></figure>



<h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><ol>
<li><p>where子句后跟条件</p>
</li>
<li><p>运算符：&gt;，&lt; 、&lt;= 、&gt;= 、= 、&lt;&gt;</p>
<ol start="3">
<li>null值不能使用 = （!=） 判断</li>
</ol>
</li>
<li><p>条件界定词汇：</p>
<ul>
<li>BETWEEN…AND  </li>
<li>IN( 集合) </li>
<li>LIKE：模糊查询</li>
<li>占位符：<pre><code>* _:单个任意字符
           * %：多个任意字符</code></pre></li>
<li>IS NULL  </li>
<li>and  或 &amp;&amp;<ul>
<li>or  或 || </li>
<li>not  或 !</li>
</ul>
</li>
</ul>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	-- 查询年龄大于20岁</span><br><span class="line"></span><br><span class="line">    SELECT * FROM student WHERE age &gt; 20;</span><br><span class="line"></span><br><span class="line">    SELECT * FROM student WHERE age &gt;&#x3D; 20;</span><br><span class="line"></span><br><span class="line">    -- 查询年龄等于20岁</span><br><span class="line">    SELECT * FROM student WHERE age &#x3D; 20;</span><br><span class="line"></span><br><span class="line">    -- 查询年龄不等于20岁</span><br><span class="line">    SELECT * FROM student WHERE age !&#x3D; 20;</span><br><span class="line">    SELECT * FROM student WHERE age &lt;&gt; 20;</span><br><span class="line"></span><br><span class="line">    -- 查询年龄大于等于20 小于等于30</span><br><span class="line"></span><br><span class="line">    SELECT * FROM student WHERE age &gt;&#x3D; 20 &amp;&amp;  age &lt;&#x3D;30;</span><br><span class="line">    SELECT * FROM student WHERE age &gt;&#x3D; 20 AND  age &lt;&#x3D;30;</span><br><span class="line">    SELECT * FROM student WHERE age BETWEEN 20 AND 30;</span><br><span class="line"></span><br><span class="line">    -- 查询年龄22岁，18岁，25岁的信息</span><br><span class="line">    SELECT * FROM student WHERE age &#x3D; 22 OR age &#x3D; 18 OR age &#x3D; 25</span><br><span class="line">    SELECT * FROM student WHERE age IN (22,18,25);</span><br><span class="line"></span><br><span class="line">    -- 查询英语成绩为null</span><br><span class="line">    SELECT * FROM student WHERE english &#x3D; NULL; -- 不对的。null值不能使用 &#x3D; （!&#x3D;） 判断</span><br><span class="line"></span><br><span class="line">    SELECT * FROM student WHERE english IS NULL;</span><br><span class="line"></span><br><span class="line">    -- 查询英语成绩不为null</span><br><span class="line">    SELECT * FROM student WHERE english  IS NOT NULL;</span><br><span class="line"></span><br><span class="line">    -- 查询姓马的有哪些？ like</span><br><span class="line">    SELECT * FROM student WHERE NAME LIKE &#39;马%&#39;;</span><br><span class="line">    -- 查询姓名第二个字是化的人</span><br><span class="line">    SELECT * FROM student WHERE NAME LIKE &quot;_化%&quot;;		</span><br><span class="line"></span><br><span class="line">    -- 查询姓名是3个字的人</span><br><span class="line">    SELECT * FROM student WHERE NAME LIKE &#39;___&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询姓名中包含德的人</span><br><span class="line">SELECT * FROM student WHERE NAME LIKE &#39;%德%&#39;;</span><br></pre></td></tr></table></figure>

<p>​    </p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>SSMS使用教程</title>
    <url>/2021/03/26/MySQL/SSMS%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="数据库存放位置"><a href="#数据库存放位置" class="headerlink" title="数据库存放位置"></a>数据库存放位置</h3><h3 id="如何显示行号"><a href="#如何显示行号" class="headerlink" title="如何显示行号"></a>如何显示行号</h3>]]></content>
      <tags>
        <tag>SQLServer</tag>
      </tags>
  </entry>
  <entry>
    <title>如何获取电子书</title>
    <url>/2021/03/21/Others/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%94%B5%E5%AD%90%E4%B9%A6/</url>
    <content><![CDATA[<h2 id="获取方法"><a href="#获取方法" class="headerlink" title="获取方法"></a>获取方法</h2><h4 id="计算机专业工具书"><a href="#计算机专业工具书" class="headerlink" title="计算机专业工具书"></a>计算机专业工具书</h4><ul>
<li>使用  <strong>虫部落：电子书搜索</strong>  失效</li>
<li>使用 <strong>GitHub</strong></li>
<li>使用 Linux<strong>公社</strong></li>
<li>使用 <strong>图灵社区</strong></li>
</ul>
<h4 id="万卷书"><a href="#万卷书" class="headerlink" title="万卷书"></a>万卷书</h4><ul>
<li><strong>使用精品下载网站</strong></li>
<li>访问  <strong>书享家</strong>  网站</li>
<li>访问  <strong>各大图书分享网站</strong></li>
</ul>
<h3 id="电子书文件格式转化"><a href="#电子书文件格式转化" class="headerlink" title="电子书文件格式转化"></a>电子书文件格式转化</h3><ul>
<li><strong>使用文件转化器</strong> 插件</li>
</ul>
]]></content>
      <tags>
        <tag>IBook</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo——-疑难问题</title>
    <url>/2021/03/21/Others/hexo-%E7%96%91%E9%9A%BE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="无法显示-对应页面内的文章"><a href="#无法显示-对应页面内的文章" class="headerlink" title="无法显示 对应页面内的文章"></a>无法显示 对应页面内的文章</h3><ul>
<li>hexo 不能自己创建新的文件类型，只能二选一</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure>



<h3 id="鼠标样式修改失败"><a href="#鼠标样式修改失败" class="headerlink" title="鼠标样式修改失败"></a>鼠标样式修改失败</h3><ul>
<li><h3 id="彩色标签实现失败"><a href="#彩色标签实现失败" class="headerlink" title="彩色标签实现失败"></a>彩色标签实现失败</h3></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Web开发问题汇总</title>
    <url>/2021/03/21/HTML/Web%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h3 id="1-网页元素无法顶格"><a href="#1-网页元素无法顶格" class="headerlink" title="1.网页元素无法顶格"></a>1.网页元素无法顶格</h3><p>将body边框设置为0</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="xml">  body&#123; margin:0;&#125;  <span class="comment">&lt;!--body顶格，body最顶部不留空白--&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="2-如何搭建搜索框"><a href="#2-如何搭建搜索框" class="headerlink" title="2.如何搭建搜索框"></a>2.如何搭建搜索框</h3><p>html搜索框怎么做</p>
<p>使用HTML做搜索框的方法：</p>
<p>1、首先新建一个div，class= fir_srh ，用来包裹搜索框；</p>
<p>2、然后在内部添加一个input标签和一个div标签，一个用来输入文字，一个充当按钮；</p>
<p>3、最后使用css为它们设计样式即可。</p>
<h3 id="3-搜索框中如何添加其他元素"><a href="#3-搜索框中如何添加其他元素" class="headerlink" title="3.搜索框中如何添加其他元素"></a>3.搜索框中如何添加其他元素</h3><p>1.绝对位置放入图片按钮</p>
<p>2.使用JS绑定跳转事件</p>
<h3 id="4-样式小细节"><a href="#4-样式小细节" class="headerlink" title="4.样式小细节"></a>4.样式小细节</h3><ul>
<li>搜索小图标  静态淡化，hover 恢复原状。   使用属性：<strong>opacity</strong></li>
<li>搜索框 hover 边框颜色变化。<ul>
<li>搜索框 onfocus事件，边框颜色变化。</li>
<li>使用JS事件，动态改变标签css 样式。</li>
</ul>
</li>
</ul>
<h3 id="5-如何实现轮播图"><a href="#5-如何实现轮播图" class="headerlink" title="5.如何实现轮播图"></a>5.如何实现轮播图</h3><p>let 声明的变量只在 let 命令所在的代码块内有效。</p>
<p>let 声明的变量只在 let 命令所在的代码块 <strong>{}</strong> 内有效，在 <strong>{}</strong> 之外不能访问。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    let x &#x3D; 2;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 这里不能使用 x 变量</span><br></pre></td></tr></table></figure>



<h3 id="6-JS外部文件无法引用"><a href="#6-JS外部文件无法引用" class="headerlink" title="6.JS外部文件无法引用"></a>6.JS外部文件无法引用</h3><p><strong>需要在body里面应用JS文件，才能起作用。</strong></p>
<h3 id="7-如何实现验证码功能"><a href="#7-如何实现验证码功能" class="headerlink" title="7.如何实现验证码功能"></a>7.如何实现验证码功能</h3><h3 id="8-如何使用JS更改文本输入框中的预选文字"><a href="#8-如何使用JS更改文本输入框中的预选文字" class="headerlink" title="8.如何使用JS更改文本输入框中的预选文字"></a>8.如何使用JS更改文本输入框中的预选文字</h3><p><strong>使用 JS 改变标签的属性。</strong></p>
<p><strong>setAttribute(“placeholder”,”请输入密码“)</strong></p>
<h3 id="9-如何隐藏按钮点击时的外边框"><a href="#9-如何隐藏按钮点击时的外边框" class="headerlink" title="9.如何隐藏按钮点击时的外边框"></a>9.如何隐藏按钮点击时的外边框</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input&#123;</span><br><span class="line"></span><br><span class="line">	outline: none;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="10-生成验证码"><a href="#10-生成验证码" class="headerlink" title="10.生成验证码"></a>10.生成验证码</h3><p><strong>使用BufferedImage类,自动绘制验证码</strong></p>
<p>Image 是一个抽象类，<strong>BufferedImage 是其实现类</strong>，是一个带缓冲区图像类，</p>
<p>主要作用<strong>是将一幅图片加载到内存中</strong>（BufferedImage 生成的图片在内存里有一个图像缓冲区，<strong>利用这个缓冲区我们可以很方便地操作这个图片），</strong></p>
<p>提供获得绘图对象、图像缩放、选择图像平滑度等功能，通常用来做图片大小变换、图片变灰、设置透明不透明等。</p>
<h3 id="12-不知道为什么相同的语句功能-JQuery-无法实现那个功能"><a href="#12-不知道为什么相同的语句功能-JQuery-无法实现那个功能" class="headerlink" title="12.不知道为什么相同的语句功能  JQuery 无法实现那个功能"></a>12.不知道为什么相同的语句功能  JQuery 无法实现那个功能</h3><h3 id="13-无法验证验证码的正确性"><a href="#13-无法验证验证码的正确性" class="headerlink" title="13.无法验证验证码的正确性"></a>13.无法验证验证码的正确性</h3><h3 id="14-jQuery语句没有作用"><a href="#14-jQuery语句没有作用" class="headerlink" title="14.jQuery语句没有作用"></a>14.jQuery语句没有作用</h3><p>旧版JQuery不支持</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>仅支持</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="15-如何获得标签的id值"><a href="#15-如何获得标签的id值" class="headerlink" title="15.如何获得标签的id值"></a>15.如何获得标签的id值</h3><p>获得某个标签的ID值之后，则可以遍历所有相似标签，但是对这个标签设置特定的方法。</p>
<h3 id="17-如何在一行div中，排版所有标签内容"><a href="#17-如何在一行div中，排版所有标签内容" class="headerlink" title="17.如何在一行div中，排版所有标签内容"></a>17.如何在一行div中，排版所有标签内容</h3><p>先把所有的内容简单的建加入到该div中，附加简单的css样式。</p>
<p>然后再一点点调试，他们的分布和布局。</p>
<h3 id="18-破解网页限制"><a href="#18-破解网页限制" class="headerlink" title="18.破解网页限制"></a>18.破解网页限制</h3><ul>
<li><p>查找（获取）网页对应元素，例如视频元素，对应的ID值</p>
<ul>
<li>使用F12，逐步查找定位 网页对应元素即可。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
  </entry>
  <entry>
    <title>Web开发-新知识汇总</title>
    <url>/2021/03/21/HTML/Web%E5%BC%80%E5%8F%91-%E6%96%B0%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h2 id="0-1-标签属性"><a href="#0-1-标签属性" class="headerlink" title="0.1 标签属性"></a>0.1 标签属性</h2><h3 id="tarnslate"><a href="#tarnslate" class="headerlink" title="tarnslate"></a>tarnslate</h3><h4 id="cnavas"><a href="#cnavas" class="headerlink" title="cnavas"></a>cnavas</h4><p>在位置 (10,10) 处绘制一个矩形，将新的 (0,0) 位置设置为 (70,70)。再次绘制新的矩形（请注意现在矩形从位置 (80,80) 开始绘制）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var c&#x3D;document.getElementById(&quot;myCanvas&quot;);</span><br><span class="line">var ctx&#x3D;c.getContext(&quot;2d&quot;);</span><br><span class="line">ctx.fillRect(10,10,100,50);</span><br><span class="line">ctx.translate(70,70);</span><br><span class="line">ctx.fillRect(10,10,100,50);</span><br></pre></td></tr></table></figure>



<h3 id="fillsytle"><a href="#fillsytle" class="headerlink" title="fillsytle"></a>fillsytle</h3><h4 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>fillStyle 属性设置或返回用于填充绘画的颜色、渐变或模式。</p>
<h3 id="fillText"><a href="#fillText" class="headerlink" title="fillText"></a>fillText</h3><h4 id="定义和用法-1"><a href="#定义和用法-1" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>fillText() 方法在画布上绘制填色的文本。文本的默认颜色是黑色。</p>
<p><strong>提示：</strong>请使用 <a href="https://www.w3school.com.cn/html5/canvas_font.asp" target="_blank" rel="noopener">font</a> 属性来定义字体和字号，并使用 <a href="https://www.w3school.com.cn/html5/canvas_fillstyle.asp" target="_blank" rel="noopener">fillStyle</a> 属性以另一种颜色/渐变来渲染文本。</p>
<h3 id="Style-transition-属性"><a href="#Style-transition-属性" class="headerlink" title="Style transition 属性"></a>Style transition 属性</h3><h4 id="定义和用法-2"><a href="#定义和用法-2" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>transition 属性是一个速记属性，用于设置四个过渡属性：</p>
<p>transitionProperty、 transitionDuration、 transitionTimingFunction 和 transitionDelay.</p>
<p><strong>注意：请始终设置 transitionDuration 属性，否则持续时间为 0，就不会产生过渡效果。</strong></p>
<p><strong>把鼠标指针悬停在 div 元素上，它的外观会逐渐改变：</strong></p>
<p><strong>可以搭配hover 使用</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#myDIV:hover&#123;</span><br><span class="line">	background-color:coral;</span><br><span class="line">	width:<span class="number">570</span>px;</span><br><span class="line">	height:<span class="number">500</span>px;</span><br><span class="line">	padding:<span class="number">100</span>px;</span><br><span class="line">	border-radius:<span class="number">50</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDIV"</span>).style.transition=<span class="string">"all 2s"</span>;</span><br></pre></td></tr></table></figure>









<h3 id="Style-transform-属性"><a href="#Style-transform-属性" class="headerlink" title="Style transform 属性"></a>Style transform 属性</h3><p>transform 属性向元素应用 2D 或 3D 转换。<strong>该属性允许您对元素进行旋转、缩放、移动或倾斜。</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementById(&quot;myDIV&quot;).style.transform&#x3D;&quot;rotate(7deg)&quot;;</span><br></pre></td></tr></table></figure>



<h3 id="Style-left-属性"><a href="#Style-left-属性" class="headerlink" title="Style left 属性"></a>Style left 属性</h3><h4 id="定义和用法-3"><a href="#定义和用法-3" class="headerlink" title="定义和用法"></a>定义和用法</h4><p><strong>left 属性设置或返回定位元素的左部位置。</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function displayResult()</span><br><span class="line">&#123;</span><br><span class="line">document.getElementById(&quot;b1&quot;).style.left&#x3D;&quot;100px&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0-2-CSS"><a href="#0-2-CSS" class="headerlink" title="0.2 CSS"></a>0.2 CSS</h2><h3 id="float：Flex"><a href="#float：Flex" class="headerlink" title="float：Flex"></a>float：Flex</h3><p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>
<p>任何一个容器都可以指定为Flex布局。</p>
<p><strong>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</strong></p>
<h3 id="line-height"><a href="#line-height" class="headerlink" title="line-height"></a>line-height</h3><p>一行有多高</p>
<h3 id="text-decoration"><a href="#text-decoration" class="headerlink" title="text-decoration"></a>text-decoration</h3><h4 id="定义和用法-4"><a href="#定义和用法-4" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>text-decoration 属性规定添加到文本的修饰。</p>
<p><strong>注释：</strong>修饰的颜色由 “color” 属性设置。</p>
<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>这个属性允许对文本设置某种效果，如加下划线。如果后代元素没有自己的装饰，祖先元素上设置的装饰会“延伸”到后代元素中。不要求用户代理支持 blink。</p>
<h3 id="display"><a href="#display" class="headerlink" title="display"></a>display</h3><h4 id="定义和用法-5"><a href="#定义和用法-5" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>display 属性规定元素应该生成的框的类型。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p.inline</span><br><span class="line">  &#123;</span><br><span class="line">  display:inline;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">none</td>
<td align="left">此元素不会被显示。</td>
</tr>
<tr>
<td align="left">block</td>
<td align="left">此元素将显示为块级元素，此元素前后会带有换行符。</td>
</tr>
<tr>
<td align="left">inline</td>
<td align="left">默认。此元素会被显示为内联元素，元素前后没有换行符。</td>
</tr>
</tbody></table>
<h3 id="vertical-align"><a href="#vertical-align" class="headerlink" title="vertical-align"></a>vertical-align</h3><h4 id="定义和用法-6"><a href="#定义和用法-6" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>vertical-align 属性设置元素的垂直对齐方式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">img</span><br><span class="line">  &#123;	vertical-align:text-top;&#125;</span><br></pre></td></tr></table></figure>



<h3 id="box-sizing-属性"><a href="#box-sizing-属性" class="headerlink" title="box-sizing 属性"></a>box-sizing 属性</h3><h4 id="属性定义及使用说明"><a href="#属性定义及使用说明" class="headerlink" title="属性定义及使用说明"></a><strong>属性定义及使用说明</strong></h4><p><strong>box-sizing 属性允许你以某种方式定义某些元素，以适应指定区域。</strong></p>
<p>例如，假如您需要并排放置两个带边框的框，可通过将 box-sizing 设置为 “border-box”。这可令浏览器呈现出带有指定宽度和高度的框，并把边框和内边距放入框中。</p>
<table>
<thead>
<tr>
<th>border-box</th>
<th>为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h3><h4 id="定义和用法-7"><a href="#定义和用法-7" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>overflow 属性规定当内容<strong>溢出元素框时发生的事情。</strong></p>
<h3 id="cursor"><a href="#cursor" class="headerlink" title="cursor"></a>cursor</h3><p>cursor属性定义了鼠标指针放在一个元素边界范围内时所用的光标形状</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;span style&#x3D;&quot;cursor:text&quot;&gt;text&lt;&#x2F;span&gt;&lt;br&gt;</span><br><span class="line">&lt;span style&#x3D;&quot;cursor:w-resize&quot;&gt;w-resize&lt;&#x2F;span&gt;&lt;br&gt;</span><br><span class="line">&lt;span style&#x3D;&quot;cursor:wait&quot;&gt;wait&lt;&#x2F;span&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0-3-DOM"><a href="#0-3-DOM" class="headerlink" title="0.3 DOM"></a>0.3 DOM</h2><h4 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval()"></a>setInterval()</h4><ul>
<li><p><strong>setInterval</strong>() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。</p>
</li>
<li><pre><code class="js">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">document</span>.getElementById(<span class="string">"videoPlayerID_html5_api"</span>).play()},<span class="number">10</span>)
&lt;!--￼<span class="number">7</span>--&gt;


</code></pre>
</li>
</ul>
<h4 id="DOM-InsertBefore"><a href="#DOM-InsertBefore" class="headerlink" title="DOM InsertBefore()"></a>DOM InsertBefore()</h4><p>首先请创建一个 LI 节点，<br>然后创建一个文本节点，<br>然后向这个 LI 节点追加文本节点。<br>最后在列表中的首个子节点之前插入此 LI 节点。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newItem=<span class="built_in">document</span>.createElement(<span class="string">"LI"</span>)</span><br><span class="line">    <span class="keyword">var</span> textnode=<span class="built_in">document</span>.createTextNode(<span class="string">"Water"</span>)</span><br><span class="line">    newItem.appendChild(textnode)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> list=<span class="built_in">document</span>.getElementById(<span class="string">"myList"</span>)</span><br><span class="line">    list.insertBefore(newItem,list.childNodes[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="translater"><a href="#translater" class="headerlink" title="translater()"></a>translater()</h3><p>在CSS3中，我们可以使用translate()方法将元素沿着水平方向（X轴）和垂直方向（Y轴）移动。</p>
<p>（1）translateX(x)：元素仅在水平方向移动（X轴移动）；</p>
<p>（2）translateY(y)：元素仅在垂直方向移动（Y轴移动）；</p>
<p>（3）transklate(x,y)：元素在水平方向和垂直方向同时移动（X轴和Y轴同时移动）；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">loop.style.transform &#x3D; &#39;translateX(-400px)&#39;;</span><br></pre></td></tr></table></figure>



<h3 id="cloneNode"><a href="#cloneNode" class="headerlink" title="cloneNode()"></a>cloneNode()</h3><h4 id="定义和用法-8"><a href="#定义和用法-8" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>cloneNode() 方法可创建指定的节点的精确拷贝。</p>
<p>cloneNode() 方法 拷贝所有属性和值。</p>
<p><strong>该方法将复制并返回调用它的节点的副本</strong>。<strong>如果传递给它的参数是 true</strong>，它还将递归复制当前节点的所有子孙节点。否则，它只复制当前节点。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function myFunction()&#123;</span><br><span class="line">	var itm&#x3D;document.getElementById(&quot;myList2&quot;).lastChild;</span><br><span class="line">	var cln&#x3D;itm.cloneNode(true);</span><br><span class="line">	document.getElementById(&quot;myList1&quot;).appendChild(cln);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="DOM-addEventListener-方法"><a href="#DOM-addEventListener-方法" class="headerlink" title="DOM addEventListener() 方法"></a>DOM addEventListener() 方法</h3><h4 id="定义与用法"><a href="#定义与用法" class="headerlink" title="定义与用法"></a>定义与用法</h4><p>addEventListener() 方法用于向<strong>指定元素添加事件句柄。</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.addEventListener(&quot;click&quot;, function()&#123;</span><br><span class="line">    document.getElementById(&quot;demo&quot;).innerHTML &#x3D; &quot;Hello World&quot;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>







<h2 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h2><h3 id="setTimeout-方法"><a href="#setTimeout-方法" class="headerlink" title="setTimeout() 方法"></a>setTimeout() 方法</h3><p>setTimeout() 方法<strong>用于在指定的毫秒数后调用函数或计算表达式。</strong></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
  </entry>
  <entry>
    <title>Github_无法访问</title>
    <url>/2021/03/21/Github/Githubub-%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h2 id="1-安装插件，加速访问"><a href="#1-安装插件，加速访问" class="headerlink" title="1.安装插件，加速访问"></a>1.安装插件，加速访问</h2><p><a href="https://www.extfans.com/web-development/pbggmlghklngacbdkdjcebaaglkcokhp/" target="_blank" rel="noopener">Github 加速器</a></p>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
  </entry>
  <entry>
    <title>Linux快捷键</title>
    <url>/2021/03/20/Linux/Linux%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Ctrl + Alt + T		打开终端</span><br><span class="line">ctrl + <span class="built_in">shift</span> + = 	放大终端窗口的字体显示</span><br><span class="line">ctrl + - 			缩小终端窗口的字体显示</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>PDF_教程</title>
    <url>/2021/03/20/Others/PDF-%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="1-批量删除页眉"><a href="#1-批量删除页眉" class="headerlink" title="1.批量删除页眉"></a>1.批量删除页眉</h3><p><img src="https://i.loli.net/2021/03/12/iDhgO2tfka3LRHx.png" alt="image-20210312200004597"></p>
]]></content>
      <categories>
        <category>PDF</category>
      </categories>
  </entry>
  <entry>
    <title>SublimeText使用教程</title>
    <url>/2021/03/02/Others/SublimeText%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p><strong>1.ctrl+shift+p</strong><br><strong>2.输入install</strong><br><strong>3.选第一个东西</strong><br><strong>4.输入名称</strong><br><strong>5.点击安装，等待安装成功</strong></p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p><strong>ctrl + ~</strong><br><strong>ctrl+shift+p</strong></p>
<p><strong>ctrl + n         创建新窗口</strong><br><strong>ctrl + tab     切换窗口</strong><br><strong>ctrl + j          与上一行合并</strong><br><strong>ctrl + d         选中单词，多次使用可以选中相同单词</strong></p>
<p><strong>！+ tab        生成html5框架</strong></p>
<h2 id="xxx-md文件"><a href="#xxx-md文件" class="headerlink" title="xxx.md文件"></a>xxx.md文件</h2><p>将光标放到任意行的末尾按下 ctrl + B<br>可以生成xxx.html文件</p>
<h2 id="sumline快捷键"><a href="#sumline快捷键" class="headerlink" title="sumline快捷键"></a>sumline快捷键</h2><table>
<thead>
<tr>
<th>键位</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td>标签名 + Tab</td>
<td align="center">快速生成标签</td>
</tr>
<tr>
<td>标签名:  +  属性名 + Tab</td>
<td align="center">快速生成带有某一属性的标签</td>
</tr>
<tr>
<td>标签名*数量   +  Tab</td>
<td align="center">生成相应数量标签</td>
</tr>
<tr>
<td>标签名  +     <strong>&gt;</strong>    +  子标签名   + Tab</td>
<td align="center">生成带有子标签的标签</td>
</tr>
<tr>
<td><strong>.</strong>  +  类名   + Tab</td>
<td align="center">生成这样的东西<div class="red"></div></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>键位</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td>ctrl +  N</td>
<td align="center">创建新窗口</td>
</tr>
<tr>
<td>Alt + Tab</td>
<td align="center">切换窗口</td>
</tr>
<tr>
<td>Ctrl +  J</td>
<td align="center">与上一行合并</td>
</tr>
<tr>
<td>Ctrl +  D</td>
<td align="center">选中单词，多次使用可以选中相同单词</td>
</tr>
<tr>
<td>Ctrl +  /</td>
<td align="center">单行注释， 光标放到某一行的任意位置</td>
</tr>
<tr>
<td>Ctrl+ Shift+ /</td>
<td align="center">多行注释，选中所要注释内容，进行注释</td>
</tr>
<tr>
<td>！+  Tab</td>
<td align="center">快速生成 HTML5骨架</td>
</tr>
<tr>
<td>Ctrl+ F</td>
<td align="center">导航</td>
</tr>
<tr>
<td>标签名 + Tab</td>
<td align="center">快速生成标签</td>
</tr>
<tr>
<td>标签名:  +  属性名 + Tab</td>
<td align="center">快速生成带有某一属性的标签</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Sublime</tag>
      </tags>
  </entry>
  <entry>
    <title>List-01C++基础</title>
    <url>/2021/02/27/C++/List-01C++%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>C/VS疑难解决</title>
    <url>/2021/02/23/C/VS%E7%96%91%E9%9A%BE%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h3 id="解决VS的4996错误"><a href="#解决VS的4996错误" class="headerlink" title="解决VS的4996错误"></a>解决VS的4996错误</h3><ul>
<li><p>代码开头加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define _CRT_SECURE_NO_WARNINGS</span><br></pre></td></tr></table></figure>
</li>
<li><p>代码加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma warning(disable:4996)</span><br></pre></td></tr></table></figure>
</li>
<li><p>更改本个项目属性：</p>
<ul>
<li><p>右键此项目——》属性——》c\c++——》预处理器——》预处理器定义——》加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_CRT_SECURE_NO_WARNINGS</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<h3 id="EOF如何输入"><a href="#EOF如何输入" class="headerlink" title="EOF如何输入"></a>EOF如何输入</h3><ul>
<li>先换行，在输入 Ctrl + Z ，最后再 换行</li>
<li>如果没有效果，重复上述过程即可。</li>
<li></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>C/VS快捷键</title>
    <url>/2021/02/23/C/VS%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="0-1-常用快捷键"><a href="#0-1-常用快捷键" class="headerlink" title="0.1 常用快捷键"></a>0.1 常用快捷键</h2><table>
<thead>
<tr>
<th align="left"><strong>快捷键</strong></th>
<th align="left"><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">Ctrl + K ,  Ctrl  +  F</td>
<td align="left">自动格式化代码 ，代码格式标准化</td>
</tr>
<tr>
<td align="left">Alt +  上下键</td>
<td align="left">向上（向下）移动某行代码：光标所在行</td>
</tr>
<tr>
<td align="left">Ctrl +  C</td>
<td align="left">复制某行：光标所在行</td>
</tr>
<tr>
<td align="left">Ctrl  +   V</td>
<td align="left">粘贴某行：复制的那行</td>
</tr>
<tr>
<td align="left">Ctrl   +   X</td>
<td align="left">剪切某行：光标所在行</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ctrl + M + O</td>
<td align="left">折叠所有方法</td>
</tr>
<tr>
<td align="left">Ctrl + M + L</td>
<td align="left">展开所有方法</td>
</tr>
<tr>
<td align="left">Ctrl + M + M</td>
<td align="left">展开或者折叠当前方法</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + B</td>
<td align="left">编译，不运行</td>
</tr>
<tr>
<td align="left">Ctrl + F5</td>
<td align="left">不调试运行</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ctrl + K，Ctrl + U</td>
<td align="left">取消注释代码</td>
</tr>
<tr>
<td align="left">Ctrl + K，Ctrl + C</td>
<td align="left">注释代码</td>
</tr>
<tr>
<td align="left">F5</td>
<td align="left">调试运行</td>
</tr>
<tr>
<td align="left">F9</td>
<td align="left">设置断点</td>
</tr>
<tr>
<td align="left">F10</td>
<td align="left">next调试</td>
</tr>
<tr>
<td align="left">F11</td>
<td align="left">step调试</td>
</tr>
</tbody></table>
<h2 id="03-Qt常用快捷键"><a href="#03-Qt常用快捷键" class="headerlink" title="03.Qt常用快捷键"></a>03.Qt常用快捷键</h2><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + <strong>i</strong></td>
<td>自动格式化代码 ，代码格式标准化</td>
</tr>
<tr>
<td>Ctrl + <strong>/</strong></td>
<td>注释/取消注释</td>
</tr>
<tr>
<td>Alt + Enter</td>
<td>自动完成类函数定义</td>
</tr>
<tr>
<td>F4</td>
<td>.h 文件和对应.cpp 文件切换</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>F9</td>
<td>设置断点</td>
</tr>
<tr>
<td>F5</td>
<td>调试运行</td>
</tr>
<tr>
<td>Ctrl + R</td>
<td>编译，但不调试运行</td>
</tr>
<tr>
<td>Ctrl + b</td>
<td>编译，不运行</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>F10</td>
<td>next调试</td>
</tr>
<tr>
<td>F11</td>
<td>step调试</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>List-01_GitHub基本使用</title>
    <url>/2021/01/14/Github/GitHub%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>另外，这些项目 Guide 是根据下面三个标准选出：</p>
<ol>
<li>项目是否还在继续维护更新，维护更新的频率如何。</li>
<li>项目的质量如何，这一点可以从 star、issue 以及 pr 的数量侧面反映出来。</li>
<li>代码质量如何，是否是僵尸项目。关于代码质量，这里说明一点，我最反感别人无脑 diss 开源项目代码质量差了，你又能耐的话自己写一个。确实，每一个开源项目都有很多可以优化的地方，这点无法否认。</li>
</ol>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL基本使用</title>
    <url>/2020/08/15/MySQL/MySQL%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="0-1-MySQL异常处理"><a href="#0-1-MySQL异常处理" class="headerlink" title="0.1 MySQL异常处理"></a>0.1 MySQL异常处理</h2><h3 id="请键入-NET-HELPMSG-2185"><a href="#请键入-NET-HELPMSG-2185" class="headerlink" title="请键入 NET HELPMSG 2185"></a>请键入 NET HELPMSG 2185</h3><h4 id="异常原因"><a href="#异常原因" class="headerlink" title="异常原因"></a>异常原因</h4><p>电脑系统中，并没有注册mysql服务。</p>
<p><strong>进入</strong></p>
<p>D:\MySQL\mysql-8.0.20-winx64\bin</p>
<p>此路径，然后打开命令行</p>
<p>输入：</p>
<p>mysqld –install，</p>
<p>提示：Service successfully installed，代表注册服务成功。</p>
<h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mysqladmin -u root -p password 新密码</span><br><span class="line"></span><br><span class="line">mysqladmin -u root -p旧密码 password 新密码</span><br></pre></td></tr></table></figure>



<h3 id="系统找不到指定文件"><a href="#系统找不到指定文件" class="headerlink" title="系统找不到指定文件"></a>系统找不到指定文件</h3><p>切换到bin目录后，</p>
<p>先删除前面安装的mysql服务（删除服务不一定要到bin目录），</p>
<p>再重新在bin目录下安装mysql服务，然后启动：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">cd</span> ../..</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">cd</span> <span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span>&gt;<span class="title">mysqld</span> --<span class="title">remove</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">successfully</span> <span class="title">removed</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span>&gt;<span class="title">mysqld</span> --<span class="title">install</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">successfully</span> <span class="title">installed</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MySQL</span>\<span class="title">MySQL</span> <span class="title">Server</span> 5.6\<span class="title">bin</span>&gt;<span class="title">net</span> <span class="title">start</span> <span class="title">mysql</span></span></span><br><span class="line"><span class="function"><span class="title">MySQL</span> 服务正在启动 .</span></span><br><span class="line"><span class="function"><span class="title">MySQL</span> 服务已经启动成功。</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>C-List-3</title>
    <url>/2020/03/28/C/List-03_C%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="01-字符串处理函数"><a href="#01-字符串处理函数" class="headerlink" title="01.字符串处理函数"></a>01.字符串处理函数</h2><h4 id="gets-和-puts-函数"><a href="#gets-和-puts-函数" class="headerlink" title="gets() 和  puts()函数"></a>gets() 和  puts()函数</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入str: "</span>);</span><br><span class="line">gets(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"str = %s\n"</span>, str);</span><br><span class="line"><span class="built_in">puts</span>(str);		<span class="comment">//在输出完成后自动输出一个'\n'。</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>gets(str)与scanf(“%s”,str)的区别</strong>：<ul>
<li>gets(str)允许输入的字符串含有空格</li>
<li>scanf(“%s”,str)不允许含有空格</li>
</ul>
</li>
</ul>
<p>解决区别：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>,str);</span><br></pre></td></tr></table></figure>

<ul>
<li>注意：由于scanf()和gets()无法知道字符串s大小，必须遇到<strong>换行符或读到文件结尾</strong>为止才接收输入，因此容易导致字符<strong>数组越界</strong>(缓冲区溢出)的情况。</li>
</ul>
<h4 id="fgets-和fputs-函数"><a href="#fgets-和fputs-函数" class="headerlink" title="fgets()和fputs()函数"></a>fgets()和fputs()函数</h4><ul>
<li>用于文本编辑</li>
</ul>
<p><strong>fgets函数</strong></p>
<ul>
<li>性质：</li>
</ul>
<p><img src="https://ws1.sinaimg.cn/large/0065EZzEly1gdmkbk3ubqj30lc0fzjsm.jpg" alt="01fgets.png"></p>
<p><strong>fputs()函数，同样具有这个性质。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">		fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line"><span class="comment">//参数：	字符串指针，指针大小，输入流</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>fputs函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> ch[<span class="number">100</span>];</span><br><span class="line">	fgets(ch, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(ch, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="comment">//参数：	字符串指针，输出流</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="printf-和scanf-函数"><a href="#printf-和scanf-函数" class="headerlink" title="printf()和scanf()函数"></a>printf()和scanf()函数</h4><p><strong>scanf()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line">    <span class="keyword">char</span> arr[<span class="number">100</span>];</span><br><span class="line">	<span class="comment">//接收换行结束，可以接受空格</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>, arr);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, arr);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">	<span class="comment">//在scanf 获取数据时，建议不要添加任何字符   空格除外</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">	<span class="comment">//sacnf("a=%d",a);   在输入数据时，比较麻烦  需要这样 a=2</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line">    <span class="comment">//限制字符的宽度</span></span><br><span class="line">	<span class="keyword">int</span> a, b, c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%2d%3d%4d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d %d"</span>,a,b,c);</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span></span><br><span class="line">    <span class="comment">//屏蔽某种数据类型</span></span><br><span class="line">	<span class="keyword">char</span> arr[<span class="number">99</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%*d%s"</span>, arr);		<span class="comment">//输入1122abc</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, arr);			<span class="comment">//输出abc</span></span><br></pre></td></tr></table></figure>



<p><strong>printf()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%4d\n"</span>, <span class="number">123</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%4d\n"</span>, <span class="number">123</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%04d\n"</span>, <span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, <span class="number">12.9</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%4s\n"</span>, <span class="string">"ab"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.4s"</span>, <span class="string">"abcdef"</span>);</span><br></pre></td></tr></table></figure>



<h4 id="1-4strlen-函数和-strcpy-函数"><a href="#1-4strlen-函数和-strcpy-函数" class="headerlink" title="1.4strlen()函数和 strcpy()函数"></a>1.4strlen()函数和 strcpy()函数</h4><p><strong>strlen()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[] = <span class="string">"Hello World"</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"useful %d\n"</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, <span class="keyword">sizeof</span>(str));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">"abcdefg"</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"n = %d\n"</span>, n);</span><br></pre></td></tr></table></figure>

<p><strong>strcpy()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">char</span> arr[] = <span class="string">"hello world"</span>;</span><br><span class="line">	<span class="keyword">char</span> str[<span class="number">120</span>];</span><br><span class="line">	<span class="built_in">strcpy</span>(str, arr);</span><br><span class="line"><span class="comment">//参数： 目标字符数组	源字符数组</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strncpy</span>()</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> arr[] = <span class="string">"hello world"</span>;</span><br><span class="line">	<span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">	<span class="built_in">strncpy</span>(str, arr, <span class="number">5</span>);</span><br><span class="line"><span class="comment">//参数： 目标字符数组	源字符数组	字符长度</span></span><br><span class="line"><span class="comment">//notice：	复制的字符，不包括	“\0”  或者  0</span></span><br><span class="line"><span class="comment">//所以，需要</span></span><br><span class="line">	str[<span class="number">5</span>] = <span class="number">0</span>;</span><br><span class="line">	或者</span><br><span class="line">	str[<span class="number">5</span>] = <span class="string">"\0"</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="strcat-函数和strmp-函数"><a href="#strcat-函数和strmp-函数" class="headerlink" title="strcat()函数和strmp()函数"></a>strcat()函数和strmp()函数</h4><p><strong>strcat()函数</strong></p>
<ul>
<li>将 arr2 字符串连接到 arr1 的尾部，<strong>“\0”也会追加过去</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> arr1[<span class="number">20</span>] = <span class="string">"hello"</span>;</span><br><span class="line">	<span class="keyword">char</span> arr2[] = <span class="string">"world"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">strcat</span>(arr1, <span class="string">" "</span>);</span><br><span class="line">	<span class="built_in">strcat</span>(arr1, arr2);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr2);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//strncat()函数</span></span><br><span class="line">    </span><br><span class="line">	<span class="keyword">char</span> arr3[<span class="number">20</span>] = <span class="string">"hello"</span>;</span><br><span class="line">	<span class="keyword">char</span> arr4[] = <span class="string">"world"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">strcat</span>(arr3, <span class="string">" "</span>);</span><br><span class="line">	<span class="built_in">strncat</span>(arr4, arr2, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr3);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>strcmp()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> arr1[<span class="number">20</span>] = <span class="string">"hello"</span>;</span><br><span class="line">	<span class="keyword">char</span> arr2[] = <span class="string">"hello"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> value = <span class="built_in">strcmp</span>(arr1, arr2);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,value);</span><br><span class="line"></span><br><span class="line"><span class="comment">//strncmp()函数</span></span><br><span class="line">    </span><br><span class="line">	<span class="keyword">char</span> arr3[] = <span class="string">"yes"</span>;</span><br><span class="line">	<span class="keyword">char</span> arr4[] = <span class="string">"yellow"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"sample"</span>);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"different"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="1-6sprintf-函数和sscanf-函数"><a href="#1-6sprintf-函数和sscanf-函数" class="headerlink" title="1.6sprintf()函数和sscanf()函数"></a>1.6sprintf()函数和sscanf()函数</h4><p><strong>sprintf()函数</strong></p>
<p><strong>sscanf()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> arr1[] = <span class="string">"hello"</span>;</span><br><span class="line">	<span class="keyword">char</span> arr2[] = <span class="string">"521"</span>;</span><br><span class="line">	<span class="keyword">char</span> dest[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">sprintf</span>(dest, <span class="string">"%s %s"</span>, arr1, arr2);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, dest);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> b;</span><br><span class="line">	<span class="keyword">int</span> a;</span><br><span class="line">	<span class="keyword">char</span> dest2[] = <span class="string">"1+2="</span>;</span><br><span class="line">	<span class="keyword">char</span> dest3[<span class="number">10</span>];</span><br><span class="line">	<span class="built_in">sscanf</span>(dest2, <span class="string">"%d+%d="</span>, &amp;b,&amp;a);</span><br><span class="line">	<span class="built_in">sprintf</span>(dest3, <span class="string">"%d+%d=%d"</span>, b, a, a + b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, dest3);</span><br><span class="line">	<span class="comment">//printf("%d+%d=%d", b, a, b + a);</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="strchr-函数和strstr-函数"><a href="#strchr-函数和strstr-函数" class="headerlink" title="strchr()函数和strstr()函数"></a>strchr()函数和strstr()函数</h4><p><strong>strchr()函数</strong></p>
<p><strong>strstr()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> arr1[] = <span class="string">"hello wrold"</span>;</span><br><span class="line">	<span class="keyword">char</span> *p = <span class="built_in">strchr</span>(arr1, <span class="string">'l'</span>);</span><br><span class="line">    <span class="keyword">if</span> (p1 != <span class="literal">NULL</span>)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"I Finded it "</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, p);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> arr2[] = <span class="string">"helloworld"</span>;</span><br><span class="line">	<span class="keyword">char</span>* p1 = <span class="built_in">strstr</span>(arr2, <span class="string">"lo"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, p1);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="1-8strtok-函数"><a href="#1-8strtok-函数" class="headerlink" title="1.8strtok()函数"></a>1.8strtok()函数</h4><p><strong>strtok()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> arr[] = <span class="string">"averych@qq.com"</span>;</span><br><span class="line">	<span class="keyword">char</span>* p = strtok(arr, <span class="string">"@"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, p);</span><br><span class="line">	<span class="comment">//切割后原来的字符串会被破坏</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> a[] = <span class="string">"www.baidu.com"</span>;</span><br><span class="line">    <span class="comment">//格式：先分割一次，接下来按照此规则，持续分割</span></span><br><span class="line">	<span class="keyword">char</span>* p1 = strtok(a, <span class="string">"."</span>);</span><br><span class="line">	<span class="keyword">while</span> (p1 != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, p1);</span><br><span class="line">		p1 = strtok(<span class="literal">NULL</span>, <span class="string">"."</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="atoi-函数"><a href="#atoi-函数" class="headerlink" title="atoi()函数"></a>atoi()函数</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line">	<span class="comment">//字符串中，数字前面不可以有非数字字符，例如hello 123456</span></span><br><span class="line">	<span class="keyword">char</span> arr[] = <span class="string">"3.141592653"</span>;</span><br><span class="line">	<span class="keyword">int</span> a = atoi(arr);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">	<span class="comment">//atof似乎不起作用</span></span><br><span class="line">	<span class="keyword">double</span> b = atof(arr);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lf"</span>, b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="02-函数"><a href="#02-函数" class="headerlink" title="02.函数"></a>02.函数</h2><p><strong>定义</strong></p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>Excel-List-Two</title>
    <url>/2020/03/09/Office/List-02_Word/</url>
    <content><![CDATA[<h3 id="EXCEL"><a href="#EXCEL" class="headerlink" title="EXCEL"></a>EXCEL</h3><h2 id="1-小操作"><a href="#1-小操作" class="headerlink" title="1.小操作"></a>1.小操作</h2><h4 id="按某个规则进行自动填充"><a href="#按某个规则进行自动填充" class="headerlink" title="按某个规则进行自动填充"></a>按某个规则进行自动填充</h4><ul>
<li>选中有规则的数据，向某个方向移动 光标即可</li>
<li>自动填充后，点击<strong>右下角的 小方块</strong>，<strong>更改填充规则</strong></li>
</ul>
<h4 id="自定义规则"><a href="#自定义规则" class="headerlink" title="自定义规则"></a>自定义规则</h4><ul>
<li>文件——》选项——》高级，翻到底部——》编辑自定义列表</li>
</ul>
<h4 id="调整单元格的大小"><a href="#调整单元格的大小" class="headerlink" title="调整单元格的大小"></a>调整单元格的大小</h4><ul>
<li>选中需要更改的区域，拖动光标即可。</li>
</ul>
<h4 id="格式刷"><a href="#格式刷" class="headerlink" title="格式刷"></a>格式刷</h4><ul>
<li>选中某片区域，双击格式刷</li>
</ul>
<h4 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h4><p><strong>文件——》打印——》设置——》无缩放，将xxx调整为一页。</strong></p>
<h4 id="隐藏工作表"><a href="#隐藏工作表" class="headerlink" title="隐藏工作表"></a>隐藏工作表</h4><ul>
<li>左下角，右键，隐藏即可。</li>
</ul>
<h4 id="移动与复制"><a href="#移动与复制" class="headerlink" title="移动与复制"></a>移动与复制</h4><ul>
<li>左下角，右键，移动和复制</li>
</ul>
<h4 id="保护工作表后，部分区域仍可进行操作"><a href="#保护工作表后，部分区域仍可进行操作" class="headerlink" title="保护工作表后，部分区域仍可进行操作"></a>保护工作表后，部分区域仍可进行操作</h4><ul>
<li>先选中某个区域,进入开始——》字体——》右下角的箭头——》保护，取消锁定，然后保护工作表即可。</li>
</ul>
<h4 id="多工作表操作"><a href="#多工作表操作" class="headerlink" title="多工作表操作"></a>多工作表操作</h4><ul>
<li>选中多个工作表即可。</li>
</ul>
<h4 id="为某个日期添加，星期几"><a href="#为某个日期添加，星期几" class="headerlink" title="为某个日期添加，星期几"></a>为某个日期添加，星期几</h4><ul>
<li><p>开始——》数字——》右下角的箭头——》自定义——》</p>
</li>
<li><pre><code>yyyy&quot;年&quot;m&quot;月&quot;d&quot;日&quot; aaaa    //找到此项，加上4个a
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 开始——》</span><br><span class="line"></span><br><span class="line">#### 1.数字</span><br><span class="line"></span><br><span class="line">- 常规改为 文本</span><br><span class="line"></span><br><span class="line">#### 2.字体</span><br><span class="line"></span><br><span class="line">- 下框线：边框</span><br><span class="line">- 填充颜色：底纹</span><br><span class="line"></span><br><span class="line">#### 3.对齐方式</span><br><span class="line"></span><br><span class="line">- 水平居中</span><br><span class="line">- 合并</span><br><span class="line"></span><br><span class="line">#### 4.数据</span><br><span class="line"></span><br><span class="line">- 右下角的小箭头</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 5.样式</span><br><span class="line"></span><br><span class="line">- 条件格式</span><br><span class="line">- 套用表格样式——》</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 设计——》</span><br><span class="line"></span><br><span class="line">#### 1.表格样式选项</span><br><span class="line"></span><br><span class="line">- 汇总行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- **条件格式**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 6.编辑</span><br><span class="line"></span><br><span class="line">- 查找和替换：——》定位条件——》可见单元格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 数据——》</span><br><span class="line"></span><br><span class="line">#### 1.数据工具</span><br><span class="line"></span><br><span class="line">- 数据有效性</span><br><span class="line">- 分列</span><br><span class="line">- 合并计算</span><br><span class="line">  - 先点击 日历似的 小图标</span><br><span class="line">  - 再  选好区域，添加即可</span><br><span class="line">  - 选好 标签位置：首行，最左行</span><br><span class="line"></span><br><span class="line">#### 2.获取外部数据</span><br><span class="line"></span><br><span class="line">- 自网站</span><br><span class="line">- 自文本</span><br><span class="line"></span><br><span class="line">#### 3.排序和筛选</span><br><span class="line"></span><br><span class="line">- **筛选：可以通过此功能 达到某些复杂函数的功能，可以用来 检查自己的答案**</span><br><span class="line"></span><br><span class="line">- 排序：</span><br><span class="line">  1. 选好区域，打开排序</span><br><span class="line">  2. 添加条件</span><br><span class="line"></span><br><span class="line">- 高级：</span><br><span class="line"></span><br><span class="line">  -</span><br></pre></td></tr></table></figure>
  =&quot;=2班&quot;
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">#### 4.分类显示</span><br><span class="line"></span><br><span class="line">- 分类汇总： 需要先  排序，然后根据某项内容进行 分类汇总。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 插入——》</span><br><span class="line"></span><br><span class="line">#### 1.链接</span><br><span class="line"></span><br><span class="line">- 超链接</span><br><span class="line"></span><br><span class="line">#### 2.迷你图</span><br><span class="line"></span><br><span class="line">- 折线图</span><br><span class="line">- 柱状图</span><br><span class="line">- 盈亏</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 设计——》</span><br><span class="line"></span><br><span class="line">1. 显示：高点，低点</span><br><span class="line">2. 分组：取消组合，清除</span><br><span class="line"></span><br><span class="line">#### 3.图表</span><br><span class="line"></span><br><span class="line">- **对准**图表中的某个元素——》**直接右键**——》设置坐标轴格式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 设计——》</span><br><span class="line"></span><br><span class="line">1. 数据：切换行和列，选择数据</span><br><span class="line">2. 位置：移动表格</span><br><span class="line">3. 图表布局</span><br><span class="line">4. 类型：更改图表类型</span><br><span class="line"></span><br><span class="line">#### 布局——》</span><br><span class="line"></span><br><span class="line">1. 当前所选内容</span><br><span class="line">2. 插入：图片</span><br><span class="line">3. 标签：</span><br><span class="line">   - 图表标题</span><br><span class="line">   - 坐标轴标题</span><br><span class="line">   - 图例</span><br><span class="line">   - 数据标签</span><br><span class="line">   - 模拟运算表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 视图——》</span><br><span class="line"></span><br><span class="line">#### 1.工作簿视图</span><br><span class="line"></span><br><span class="line">- 分页预览</span><br><span class="line"></span><br><span class="line">#### 2.宏</span><br><span class="line"></span><br><span class="line">- 录制宏，执行宏</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 页面布局——》</span><br><span class="line"></span><br><span class="line">#### 1.主题</span><br><span class="line"></span><br><span class="line">#### 2.页面设置</span><br><span class="line"></span><br><span class="line">- 打印区域</span><br><span class="line">- 分隔符：分页符</span><br><span class="line">- 打印标题</span><br><span class="line">- </span><br><span class="line"></span><br><span class="line">## 审阅——》</span><br><span class="line"></span><br><span class="line">#### 1.更改</span><br><span class="line"></span><br><span class="line">- 保护工作簿</span><br><span class="line">- 保护工作表</span><br><span class="line">- 允许用户编辑区域：设定某块区域与保护工作表的密码不同</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 公式——》</span><br><span class="line"></span><br><span class="line">#### 1.定义的名称</span><br><span class="line"></span><br><span class="line">- 名称管理器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 函数的使用</span><br><span class="line"></span><br><span class="line">#### 引用</span><br><span class="line"></span><br><span class="line">- 相对引用</span><br><span class="line">- 绝对引用：相对引用的元素，加上F4 ，变成绝对引用的元素。</span><br><span class="line">- </span><br><span class="line"></span><br><span class="line">#### &#x3D;SUM()</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
=sum(F4:H4,M4:N4)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### &#x3D;SUMIF(条件范围，条件，求和范围)</span><br></pre></td></tr></table></figure>
=SUMIF(E5:E17,&quot;男&quot;,D5:D17)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
=SUMIF(F6:F11,&quot;&gt;150&quot;)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### &#x3D;SUMIFS(求和范围，条件范围，条件)</span><br></pre></td></tr></table></figure>
=SUMIFS(I11:I17,G11:G17,&quot;*车间&quot;,H11:H17,&quot;男&quot;)        
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### MAX	MIN	AVERAGE函数</span><br><span class="line"></span><br><span class="line">#### IF函数</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
=IF(E6&gt;60,IF(F6&gt;60,&quot;否&quot;,&quot;是&quot;),&quot;是&quot;)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">#### int函数</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
=INT(I10-H10)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### trunc函数，round函数</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
=TRUNC(K13-J13)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
=ROUND(I6,3)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### mid函数，left函数，right函数</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
=MID(H5,2,2)
=LEFT(H5,3)
=RIGHT(H5,2)

=MID(H7,7,4)&amp;&quot;年&quot;
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### weeekday函数</span><br></pre></td></tr></table></figure>
=WEEKDAY(I9,2)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### vlookup函数</span><br></pre></td></tr></table></figure>
=VLOOKUP(A1,员工!$A$1:$B$15,2,FALSE)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### lookup函数</span><br></pre></td></tr></table></figure>
=LOOKUP(MID(E5,5,2),{&quot;02&quot;,&quot;03&quot;},{&quot;二班&quot;,&quot;三班&quot;})
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### hlookup函数</span><br></pre></td></tr></table></figure>
=HLOOKUP(A1,员工!$A$1:$B$15,2,TRUE)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### RANK.EQ函数</span><br></pre></td></tr></table></figure>
=RANK.EQ(A11,$A$9:$A$15)
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### counta , countif 和 countifs 函数</span><br></pre></td></tr></table></figure>
=COUNTA(员工!A1:A15)

</code></pre></li>
</ul>
<p>```</p>
<h4 id="average，averageif-和-averageifs函数"><a href="#average，averageif-和-averageifs函数" class="headerlink" title="average，averageif 和 averageifs函数"></a>average，averageif 和 averageifs函数</h4>]]></content>
      <tags>
        <tag>EXCEL</tag>
      </tags>
  </entry>
  <entry>
    <title>C-List-Two</title>
    <url>/2020/02/27/C/List-02_C%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h3 id="常用运算符分类"><a href="#常用运算符分类" class="headerlink" title="常用运算符分类"></a>常用运算符分类</h3><table>
<thead>
<tr>
<th><strong>运算符类型</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>算术运算符</td>
<td>用于处理四则运算</td>
</tr>
<tr>
<td>赋值运算符</td>
<td>用于将表达式的值赋给变量</td>
</tr>
<tr>
<td>比较运算符</td>
<td>用于表达式的比较，并返回一个真值或假值</td>
</tr>
<tr>
<td>逻辑运算符</td>
<td>用于根据表达式的值返回真值或假值</td>
</tr>
<tr>
<td>位运算符</td>
<td>用于处理数据的位运算</td>
</tr>
<tr>
<td>sizeof运算符</td>
<td>用于求字节数长度</td>
</tr>
</tbody></table>
<h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>转换的方法有两种：</p>
<ul>
<li>自动转换(隐式转换)：遵循一定的规则,由编译系统自动完成。</li>
<li>强制类型转换：把表达式的运算结果强制转换成所需的数据类型。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">double</span> a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">int</span> b;</span><br><span class="line">	b = (<span class="keyword">int</span>)a;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lf\n%d\n"</span>, a, b);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">double</span> s;</span><br><span class="line">	s = (<span class="keyword">double</span>)<span class="number">1</span> / <span class="number">2</span> * a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%f\n"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%f\n"</span>,(<span class="keyword">double</span>) a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="01-选择结构"><a href="#01-选择结构" class="headerlink" title="01.选择结构"></a>01.选择结构</h2><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (a &gt; b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>if…else语句</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (a &gt; b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>if…else if…else语句</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> a;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%u"</span>, &amp;a);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (a &lt; <span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"个位\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">100</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"十位\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"百位\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="keyword">int</span> c;</span><br><span class="line"></span><br><span class="line">	c = (a &gt; b ? a + b : a - b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"c2 = %d\n"</span>, c);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c;</span><br><span class="line">	c = getchar();</span><br><span class="line">	<span class="keyword">switch</span> (c)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"spring\n"</span>);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"summer\n"</span>);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"autumn\n"</span>);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"winter\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="02-循环结构"><a href="#02-循环结构" class="headerlink" title="02.循环结构"></a>02.循环结构</h2><h4 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"it's time to play game\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line">	<span class="keyword">while</span> (a &lt;<span class="number">666</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (a &gt; <span class="number">666</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"you are die\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="do…while语句"><a href="#do…while语句" class="headerlink" title="do…while语句"></a>do…while语句</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> b;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		b = a;</span><br><span class="line">		a++;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d=%d+1\n"</span>, a,b);</span><br><span class="line">	&#125; <span class="keyword">while</span> (a &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">			sum += i;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"sum = %d\n"</span>, sum);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> i, j, k;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">			<span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>);</span><br><span class="line">				num++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"num = %d\n"</span>, num);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="03-跳转语句"><a href="#03-跳转语句" class="headerlink" title="03.跳转语句"></a>03.跳转语句</h2><h4 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h4><p>在switch条件语句和循环语句中都可以使用break语句：</p>
<ul>
<li>当它出现在switch条件语句中时，作用是终止某个case并跳出switch结构。</li>
<li>当它出现在循环语句中，作用是跳出当前内循环语句，执行后面的代码。</li>
<li>当它出现在<strong>嵌套循环语句</strong>中，跳出<strong>最近的内循环</strong>语句，执行后面的代码。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		i++;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"i = %d\n"</span>, i);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (i == <span class="number">10</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>; <span class="comment">//跳出while循环</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (; m &lt; <span class="number">10</span>; m++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (; n &lt; <span class="number">10</span>; n++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (n == <span class="number">5</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>; 						<span class="comment">//跳出for (n = 0; n &lt; 10; n++)</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>; 							<span class="comment">//跳出for (m = 0; m &lt; 10; m++)</span></span><br><span class="line">		&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"hello world"</span>);				<span class="comment">//不会输出</span></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h4><p>在循环语句中，如果希望立即终止本次循环，并执行下一次循环，此时就需要使用continue语句。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;           </span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>)   </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;      </span><br><span class="line">		&#125;</span><br><span class="line">		sum += i;          </span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"sum = %d\n"</span>, sum);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="goto语句-无条件跳转，尽量少用"><a href="#goto语句-无条件跳转，尽量少用" class="headerlink" title="goto语句(无条件跳转，尽量少用)"></a>goto语句(无条件跳转，尽量少用)</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">goto</span> End;				<span class="comment">//无条件跳转到End的标识</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"silly boy\n"</span>);</span><br><span class="line"></span><br><span class="line">End:</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"sunshine boy\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="04-数组"><a href="#04-数组" class="headerlink" title="04.数组"></a>04.数组</h2><ul>
<li>数组就是在内存中连续的相同类型的变量空间。</li>
<li>同一个数组所有的成员都是相同的数据类型</li>
<li>同一个数组所有的成员在内存中的地址是连续的。</li>
</ul>
<ol>
<li>按数组元素类型的不同，数组可分为：数值数组、字符数组、指针数组、结构数组等类别。</li>
</ol>
<h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><ul>
<li>定义数组时 <strong>[ ]</strong> 内最好是常量，使用数组时 <strong>[ ]</strong> 内即可是常量，也可以是变量</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		a[i] = i+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>全局数组若不初始化，编译器将其初始化为零。</li>
<li>局部数组若不初始化，内容为<strong>随机值。</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span> &#125;;			</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;;						<span class="comment">//初始化前三个成员，后面所有元素都设置为0</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;								<span class="comment">//所有的成员都设置为0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;					<span class="comment">//定义了一个数组，有5个成员</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> b[<span class="number">2</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">		a[i] = i+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>数组名是一个地址的常量，代表数组中首元素的地址。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"a = %p\n"</span>, a[<span class="number">0</span>]);	</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%p\n"</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"&amp;a[0] = %p\n"</span>, &amp;a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>一维数组的最值</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">-2</span>, <span class="number">3</span>,<span class="number">-4</span>, <span class="number">5</span>, <span class="number">-6</span>, <span class="number">7</span>, <span class="number">-8</span>, <span class="number">-9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> <span class="built_in">max</span> = a[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] &gt; <span class="built_in">max</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">max</span> = a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"the max of the array:%d\n"</span>, <span class="built_in">max</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>一维数组的逆序</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">-2</span>, <span class="number">3</span>,<span class="number">-4</span>, <span class="number">5</span>, <span class="number">-6</span>, <span class="number">7</span>, <span class="number">-8</span>, <span class="number">-9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> j = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> tmp;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">		tmp = a[i];</span><br><span class="line">		a[i] = a[j];</span><br><span class="line">		a[j] = tmp;</span><br><span class="line">		j--;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]); i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="冒泡法排序"><a href="#冒泡法排序" class="headerlink" title="冒泡法排序"></a>冒泡法排序</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">-2</span>, <span class="number">3</span>,<span class="number">-4</span>, <span class="number">5</span>, <span class="number">-6</span>, <span class="number">7</span>, <span class="number">-8</span>, <span class="number">-9</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> n = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">	<span class="keyword">int</span> tmp;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) &#123;</span><br><span class="line">				tmp = a[j];</span><br><span class="line">				a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">				a[j + <span class="number">1</span>] = tmp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><ul>
<li>内存中只有一维数组</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)&#123;</span><br><span class="line">			a[i][j] = num++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d, "</span>, a[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] =&#123;&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;,&#123; <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, &#125;,&#123; <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> , <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span> &#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>数组名是一个地址的常量，代表数组中首元素的地址。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> , <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%p\n"</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%p\n"</span>, a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//int a[3][4][5] ;//定义了一个三维数组，有3个二维数组int[4][5]</span></span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>][<span class="number">5</span>] = &#123;						&#123; &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;, &#123; <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125; &#125;,</span><br><span class="line">											&#123; &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125; &#125;,</span><br><span class="line">											&#123; &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125;, &#123; <span class="number">0</span> &#125; &#125; </span><br><span class="line">						&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> i, j, k;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="comment">//添加访问元素代码</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d, "</span>, a[i][j][k]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="05-字符数组和字符串"><a href="#05-字符数组和字符串" class="headerlink" title="05.字符数组和字符串"></a>05.字符数组和字符串</h2><ul>
<li>C语言中没有字符串这种数据类型，可以通过<strong>char的数组</strong>来替代；</li>
<li>字符串<strong>一定是</strong>一个char的数组，但char的数组<strong>未必是</strong>字符串；</li>
<li><strong>数字0(和字符‘\0’等价)</strong>结尾的char数组就是一个字符串，但如果char数组没有以数字0结尾，那么就不是一个字符串，只是普通字符数组，所以字符串是一种特殊的char的数组。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c1[] = &#123; <span class="string">'c'</span>, <span class="string">' '</span>, <span class="string">'p'</span>, <span class="string">'r'</span>, <span class="string">'o'</span>, <span class="string">'g'</span> &#125;; 		<span class="comment">//普通字符数组</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"c1 = %s\n"</span>, c1); 							<span class="comment">//乱码，因为没有’\0’结束符</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//以‘\0’(‘\0’就是数字0)结尾的字符数组是字符串</span></span><br><span class="line">	<span class="keyword">char</span> c2[] = &#123; <span class="string">'c'</span>, <span class="string">' '</span>, <span class="string">'p'</span>, <span class="string">'r'</span>, <span class="string">'o'</span>, <span class="string">'g'</span>, <span class="string">'\0'</span> &#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"c2 = %s\n"</span>, c2);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//字符串处理以‘\0’(数字0)作为结束符，后面的'h', 'l', 'l', 'e', 'o'不会输出</span></span><br><span class="line">	<span class="keyword">char</span> c3[] = &#123; <span class="string">'c'</span>, <span class="string">' '</span>, <span class="string">'p'</span>, <span class="string">'r'</span>, <span class="string">'o'</span>, <span class="string">'g'</span>, <span class="string">'\0'</span>, <span class="string">'h'</span>, <span class="string">'l'</span>, <span class="string">'l'</span>, <span class="string">'e'</span>, <span class="string">'o'</span>, <span class="string">'\0'</span> &#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"c3 = %s\n"</span>, c3);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不指定长度, 错误，乱码</span></span><br><span class="line"><span class="keyword">char</span> buf[] = &#123; <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"buf = %s\n"</span>, buf);	</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定长度，后面没有赋值的元素，自动补0</span></span><br><span class="line"><span class="keyword">char</span> buf2[<span class="number">100</span>] = &#123; <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"buf2 = %s\n"</span>, buf2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//所有元素赋值为0</span></span><br><span class="line"><span class="keyword">char</span> buf3[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//char buf4[2] = &#123; '1', '2', '3' &#125;;//数组越界</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用字符串初始化，编译器自动在后面补\0，常用</span></span><br><span class="line"><span class="keyword">char</span> buf8[] = <span class="string">"agjdslgjlsdjg"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//'\0'后面最好不要连着数字，有可能几个数字连起来刚好是一个转义字符</span></span><br><span class="line"><span class="comment">//'\ddd'八进制字义字符，'\xdd'十六进制转移字符</span></span><br><span class="line"><span class="comment">// \012相当于\n</span></span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">"\012abc"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"str == %s\n"</span>, str);</span><br></pre></td></tr></table></figure>

<h4 id="字符串的输入输出"><a href="#字符串的输入输出" class="headerlink" title="字符串的输入输出"></a>字符串的输入输出</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"input string1 : \n"</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);			<span class="comment">//输入的内容中不能含有空格</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"output:\n%s"</span>, str);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> str1[] = <span class="string">"abcdef"</span>;</span><br><span class="line">	<span class="keyword">char</span> str2[] = <span class="string">"123456"</span>;</span><br><span class="line">	<span class="keyword">char</span> dst[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (str1[i] != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		dst[i] = str1[i];</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (str2[j] != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		dst[i + j] = str2[j];</span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	dst[i + j] = <span class="number">0</span>; <span class="comment">//字符串结束符</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"dst = %s\n"</span>, dst);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="05-函数的调用：产生随机数"><a href="#05-函数的调用：产生随机数" class="headerlink" title="05.函数的调用：产生随机数"></a>05.函数的调用：产生随机数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">time_t</span> time(<span class="keyword">time_t</span> *t);</span><br><span class="line">功能：获取当前系统时间</span><br><span class="line">参数：常设置为<span class="literal">NULL</span></span><br><span class="line">返回值：当前系统时间, <span class="keyword">time_t</span> 相当于<span class="keyword">long</span>类型，单位为毫秒</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">srand</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> seed)</span></span>;</span><br><span class="line">功能：用来设置rand()产生随机数时的随机种子</span><br><span class="line">参数：如果每次seed相等，rand()产生随机数相等</span><br><span class="line">返回值：无</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rand</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">功能：返回一个随机数值</span><br><span class="line">参数：无</span><br><span class="line">返回值：随机数</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">time_t</span> tm = time(<span class="literal">NULL</span>);				<span class="comment">//得到系统时间</span></span><br><span class="line">	srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)tm);			<span class="comment">//随机种子只需要设置一次即可	</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"r=%d\n"</span>, rand());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));		<span class="comment">//随机种子只需要设置一次即可</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"r = %d\n"</span>, rand());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>C-List-One</title>
    <url>/2020/02/16/C/List-01_C%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="01-C语言"><a href="#01-C语言" class="headerlink" title="01.C语言"></a>01.C语言</h2><p>system<strong>函数的使用</strong></p>
<p>功能：在已经运行的程序中执行另外一个外部程序</p>
<p><strong>printf函数</strong></p>
<p>输出字符串</p>
<p><strong>return语句</strong></p>
<p>return代表函数执行完毕，返回return代表函数的终止</p>
<p><strong>返回值：</strong></p>
<p>成功：不同系统返回值不一样</p>
<p>失败：通常是 - 1</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> value = system(<span class="string">"calc"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"it is ok"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="程序编译过程"><a href="#程序编译过程" class="headerlink" title="程序编译过程"></a>程序编译过程</h3><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc5gfeqsthj31dw0nu0td.jpg"  />



<h3 id="程序执行过程"><a href="#程序执行过程" class="headerlink" title="程序执行过程"></a>程序执行过程</h3><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc5gm5ncgwj31dw0nu0th.jpg" alt="程序执行过程.png"  />



<p><strong>CPU内部结构与寄存器</strong></p>
<ul>
<li>寄存器是CPU内部最基本的存储单元</li>
<li>CPU对外是通过<strong>总线</strong>(地址、控制、数据)来和外部设备交互的</li>
</ul>
<h3 id="查看汇编语言"><a href="#查看汇编语言" class="headerlink" title="查看汇编语言"></a>查看汇编语言</h3><ol>
<li>鼠标移到最左侧，添加断点</li>
<li>开始测试</li>
<li>调试——》窗口——》反汇编</li>
</ol>
<h2 id="02-数据类型"><a href="#02-数据类型" class="headerlink" title="02.数据类型"></a>02.数据类型</h2><p><strong>变量</strong></p>
<ul>
<li><p>在程序运行过程中，其值可以改变</p>
</li>
<li><p>变量在使用前必须<strong>先定义</strong>，定义变量前必须有<strong>相应的</strong>数据类型</p>
</li>
</ul>
<p><strong>常量</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 10  			<span class="comment">//放到，main函数前面</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>  LENGTH = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<p>1、通过#define 定义的常量 是根据值来匹配数据类型的</p>
<p>2、const 修饰的常量是不安全 可以通过指针来修改</p>
<h3 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h3><p><strong>十进制转二进制</strong></p>
<p>十进制转化二进制的方法：</p>
<p>​    用十进制数除以2，分别取余数和商数，商数为0的时候，将余数倒着数就是转化后的结果。</p>
<p>十进制的小数转换成二进制：</p>
<p>​    小数部分和2相乘，取整数，不足1取0，每次相乘都是小数部分，顺序看取整后的数就是转化后的结果。</p>
<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8ha4m5c0j309j0c6mxe.jpg" alt="clip_image002.jpg" style="zoom: 67%;" />



<p><strong>八进制</strong></p>
<p><strong>二进制转八进制：从最后一位往前数，三个一组</strong></p>
<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8hl6walij309b068dfw.jpg" alt="1.jpg" style="zoom:80%;" />



<p><strong>十六进制</strong></p>
<p><strong>二进制转十六进制：从最后一位往前数，四个一组</strong></p>
<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8hoyjycij30i405g74f.jpg" alt="02.jpg" style="zoom: 80%;" />





<h4 id="不同进制数的表示方法"><a href="#不同进制数的表示方法" class="headerlink" title="不同进制数的表示方法"></a>不同进制数的表示方法</h4><table>
<thead>
<tr>
<th>十进制</th>
<th>以正常数字1-9开头，如123</th>
</tr>
</thead>
<tbody><tr>
<td>八进制</td>
<td>以数字0开头，如0123</td>
</tr>
<tr>
<td>十六进制</td>
<td>以0x开头，如0x123</td>
</tr>
<tr>
<td>二进制</td>
<td>C语言不能直接书写二进制数</td>
</tr>
</tbody></table>
<h4 id="输出不同进制数"><a href="#输出不同进制数" class="headerlink" title="输出不同进制数"></a>输出不同进制数</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">123</span>;		</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">0123</span>;		</span><br><span class="line">	<span class="keyword">int</span> c = <span class="number">0xABC</span>;	</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);			<span class="comment">//%d 表示十进制数</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%o\n"</span>, b);			<span class="comment">//%o 表示八进制数</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%x\n"</span>, c);			<span class="comment">//%x 表示十六进制数</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="03-计算机内存数值存储方式"><a href="#03-计算机内存数值存储方式" class="headerlink" title="03.计算机内存数值存储方式"></a>03.计算机内存数值存储方式</h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>特点：</p>
<ul>
<li><p>最高位做为符号位，0表示正,为1表示负</p>
</li>
<li><p>其它数值部分就是数值本身绝对值的二进制数</p>
</li>
<li><p>负数的原码是在其绝对值的基础上，最高位变为1</p>
</li>
</ul>
<table>
<thead>
<tr>
<th><strong>十进制数</strong></th>
<th><strong>原码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>+15</td>
<td>0000 1111</td>
</tr>
<tr>
<td>-15</td>
<td>1000 1111</td>
</tr>
<tr>
<td>+0</td>
<td>0000 0000</td>
</tr>
<tr>
<td>-0</td>
<td>1000 0000</td>
</tr>
</tbody></table>
<h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><ul>
<li><p>对于正数，反码与原码相同</p>
</li>
<li><p>对于负数，<strong>符号位不变</strong>，其它部分取反(1变0,0变1)</p>
</li>
</ul>
<table>
<thead>
<tr>
<th><strong>十进制数</strong></th>
<th><strong>反码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>+15</td>
<td>0000 1111</td>
</tr>
<tr>
<td>-15</td>
<td>1111 0000</td>
</tr>
<tr>
<td>+0</td>
<td>0000 0000</td>
</tr>
<tr>
<td>-0</td>
<td>1111 1111</td>
</tr>
</tbody></table>
<h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p><strong>在计算机系统中，数值一律用补码来存储。</strong></p>
<p><strong>补码特点：</strong></p>
<ul>
<li>对于正数，原码、反码、补码相同</li>
<li>对于负数，其补码为它的反码加1</li>
<li>负数原码符号位不动，其他位求反，最后整个数加1，得到补码</li>
</ul>
<table>
<thead>
<tr>
<th><strong>十进制数</strong></th>
<th><strong>补码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>+15</td>
<td>0000 1111</td>
</tr>
<tr>
<td>-15</td>
<td>1111 0001</td>
</tr>
<tr>
<td>+0</td>
<td>0000 0000</td>
</tr>
<tr>
<td>-0</td>
<td>0000 0000</td>
</tr>
</tbody></table>
<p><strong>在计算机系统中，数值一律用补码来存储</strong>，主要原因是：</p>
<ul>
<li><p><strong>统一了零的编码</strong></p>
</li>
<li><p><strong>将符号位和其它位统一处理</strong></p>
</li>
<li><p><strong>将减法运算转变为加法运算</strong></p>
</li>
<li><p><strong>两个用补码表示的数相加时，如果最高位(符号位)有进位，则进位被舍弃</strong></p>
</li>
</ul>
<p>示例1：用8位二进制数分别表示+0和-0</p>
<table>
<thead>
<tr>
<th><strong>十进制数</strong></th>
<th><strong>原码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>+0</td>
<td>0000 0000</td>
</tr>
<tr>
<td>-0</td>
<td>1000 0000</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>十进制数</strong></th>
<th><strong>反码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>+0</td>
<td>0000 0000</td>
</tr>
<tr>
<td>-0</td>
<td>1111 1111</td>
</tr>
</tbody></table>
<p> 不管以原码方式存储，还是以反码方式存储，0也有两种表示形式。为什么同样一个0有两种不同的表示方法呢？</p>
<p> 但是如果以补码方式存储，补码统一了零的编码：</p>
<table>
<thead>
<tr>
<th><strong>十进制数</strong></th>
<th><strong>补码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>+0</td>
<td>0000 0000</td>
</tr>
<tr>
<td>-0</td>
<td>10000 0000由于只用8位描述，最高位1丢弃，变为0000 0000</td>
</tr>
</tbody></table>
<h2 id="04-关键字"><a href="#04-关键字" class="headerlink" title="04.关键字"></a>04.关键字</h2><h3 id="sizeof"><a href="#sizeof" class="headerlink" title="sizeof"></a>sizeof</h3><ul>
<li>sizeof不是函数，所以不需要包含任何头文件，它的功能是计算一个数据类型的大小，单位为字节</li>
<li>sizeof的返回值为size_t</li>
<li>size_t类型在32位操作系统下是unsigned int，是一个无符号的整数</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="keyword">sizeof</span>(a);			<span class="comment">//sizeof得到指定值占用内存的大小，单位：字节</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"b = %d\n"</span>, b);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">size_t</span> c = <span class="keyword">sizeof</span>(b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"c = %u\n"</span>, c);			<span class="comment">//用无符号数的方式输出c的值</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="整形-：int"><a href="#整形-：int" class="headerlink" title="整形 ：int"></a>整形 ：int</h3><p><strong>整型变量的输出</strong></p>
<table>
<thead>
<tr>
<th><strong>打印格式</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>%d</td>
<td>输出一个<strong>有符号</strong>的10进制int类型</td>
</tr>
<tr>
<td>%o(字母o)</td>
<td>输出8进制的int类型</td>
</tr>
<tr>
<td>%<strong>x</strong></td>
<td>输出16进制的int类型，字母以小写输出</td>
</tr>
<tr>
<td>%<strong>X</strong></td>
<td>输出16进制的int类型，字母以大写写输出</td>
</tr>
<tr>
<td>%u</td>
<td>输出一个10进制的<strong>无符号</strong>数</td>
</tr>
</tbody></table>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">123</span>;	</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">0567</span>;	</span><br><span class="line">	<span class="keyword">int</span> c = <span class="number">0xabc</span>;	</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"8进制：b = %o\n"</span>, b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"10进制：b = %d\n"</span>, b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"16进制：c = %x\n"</span>, c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"16进制：c = %X\n"</span>, c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"10进制：c = %d\n"</span>, c);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> d = <span class="number">0xffffffff</span>; </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"有符号方式打印：d = %d\n"</span>, d);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"无符号方式打印：d = %u\n"</span>, d);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>整型变量的输出</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"input a please:\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//不要加“\n”</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);		<span class="comment">//输入a的值</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>short、int、long、long long</strong></p>
<table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
</tr>
</thead>
<tbody><tr>
<td>short(短整型)</td>
<td>2字节</td>
</tr>
<tr>
<td>int(整型)</td>
<td>4字节</td>
</tr>
<tr>
<td>long(长整形)</td>
<td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td>
</tr>
<tr>
<td>long long(长长整形)</td>
<td>8字节</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>整型常量</strong></th>
<th><strong>所需类型</strong></th>
</tr>
</thead>
<tbody><tr>
<td>10</td>
<td>代表int类型</td>
</tr>
<tr>
<td>10l, 10L</td>
<td>代表long类型</td>
</tr>
<tr>
<td>10ll, 10LL</td>
<td>代表long long类型</td>
</tr>
<tr>
<td>10u, 10U</td>
<td>代表unsigned int类型</td>
</tr>
<tr>
<td>10ul, 10UL</td>
<td>代表unsigned long类型</td>
</tr>
<tr>
<td>10ull, 10ULL</td>
<td>代表unsigned long long类型</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>打印格式</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>%hd</td>
<td>输出short类型</td>
</tr>
<tr>
<td>%d</td>
<td>输出int类型</td>
</tr>
<tr>
<td>%l</td>
<td>输出long类型</td>
</tr>
<tr>
<td>%ll</td>
<td>输出long long类型</td>
</tr>
<tr>
<td>%hu</td>
<td>输出unsigned short类型</td>
</tr>
<tr>
<td>%u</td>
<td>输出unsigned int类型</td>
</tr>
<tr>
<td>%lu</td>
<td>输出unsigned long类型</td>
</tr>
<tr>
<td>%llu</td>
<td>输出unsigned long long类型</td>
</tr>
</tbody></table>
<h4 id="有符号数和无符号数的区别"><a href="#有符号数和无符号数的区别" class="headerlink" title="有符号数和无符号数的区别"></a>有符号数和无符号数的区别</h4><ul>
<li>无符号数最高位不是符号位，而就是数的一部分，无符号数不可能是负数。</li>
</ul>
<table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
<th><strong>取值范围</strong></th>
</tr>
</thead>
<tbody><tr>
<td>short</td>
<td>2字节</td>
<td>-32768 到 32767 (-215  ~ 215-1)</td>
</tr>
<tr>
<td>int</td>
<td>4字节</td>
<td>-2147483648 到  2147483647 (-231 ~ 231-1)</td>
</tr>
<tr>
<td>long</td>
<td>4字节</td>
<td>-2147483648 到  2147483647 (-231 ~ 231-1)</td>
</tr>
<tr>
<td>unsigned short</td>
<td>2字节</td>
<td>0 到 65535 (0 ~ 216-1)</td>
</tr>
<tr>
<td>unsigned int</td>
<td>4字节</td>
<td>0 到 4294967295 (0  ~ 232-1)</td>
</tr>
<tr>
<td>unsigned long</td>
<td>4字节</td>
<td>0 到 4294967295 (0  ~ 232-1)</td>
</tr>
</tbody></table>
<h3 id="字符型：char"><a href="#字符型：char" class="headerlink" title="字符型：char"></a>字符型：char</h3><ul>
<li>char的本质就是一个<strong>1字节大小</strong>的整型。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%c\n"</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%c\n"</span>, <span class="string">'a'</span><span class="number">-32</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="string">'a'</span><span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> b = <span class="string">' '</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-4转义字符"><a href="#4-4转义字符" class="headerlink" title="4.4转义字符"></a>4.4转义字符</h3><table>
<thead>
<tr>
<th><strong>转义字符</strong></th>
<th><strong>含义</strong></th>
<th><strong>ASCII码值（十进制）</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>\a</strong></td>
<td>警报</td>
<td>007</td>
</tr>
<tr>
<td><strong>\b</strong></td>
<td>退格(BS) ，将当前位置移到前一列</td>
<td>008</td>
</tr>
<tr>
<td><strong>\f</strong></td>
<td>换页(FF)，将当前位置移到下页开头</td>
<td>012</td>
</tr>
<tr>
<td><strong>\n</strong></td>
<td>换行(LF) ，将当前位置移到下一行开头</td>
<td>010</td>
</tr>
<tr>
<td><strong>\r</strong></td>
<td>回车(CR) ，将当前位置移到本行开头</td>
<td>013</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>\t</strong></td>
<td>水平制表(HT)  （跳到下一个TAB位置）</td>
<td>009</td>
</tr>
<tr>
<td><strong>\v</strong></td>
<td>垂直制表(VT)</td>
<td>011</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>\</td>
<td>代表一个反斜线字符”&quot;</td>
<td>092</td>
</tr>
<tr>
<td>&#39;</td>
<td>代表一个单引号（撇号）字符</td>
<td>039</td>
</tr>
<tr>
<td>&quot;</td>
<td>代表一个双引号字符</td>
<td>034</td>
</tr>
<tr>
<td>?</td>
<td>代表一个问号</td>
<td>063</td>
</tr>
<tr>
<td>\0</td>
<td>数字0</td>
<td>000</td>
</tr>
<tr>
<td>\ddd</td>
<td>8进制转义字符，d范围0~7</td>
<td>3位8进制</td>
</tr>
<tr>
<td>\xhh</td>
<td>16进制转义字符，h范围0<del>9，a</del>f，A~F</td>
<td>3位16进制</td>
</tr>
</tbody></table>
<h3 id="实型-浮点型-：float、double"><a href="#实型-浮点型-：float、double" class="headerlink" title="实型(浮点型)：float、double"></a>实型(浮点型)：float、double</h3><table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
<th><strong>有效数字范围</strong></th>
</tr>
</thead>
<tbody><tr>
<td>float</td>
<td>4字节</td>
<td>7位有效数字</td>
</tr>
<tr>
<td>double</td>
<td>8字节</td>
<td>15～16位有效数字</td>
</tr>
</tbody></table>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">float</span> a = <span class="number">3.14f</span>; </span><br><span class="line">	<span class="keyword">double</span> b = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%f\n"</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>, a);			<span class="comment">//.3f 代表保留小数点后面 3位数</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lf\n"</span>, b);</span><br><span class="line">	<span class="comment">//科学法赋值 </span></span><br><span class="line">	</span><br><span class="line">    <span class="keyword">float</span> c = <span class="number">3.14e-2</span>f;				<span class="comment">//e代表10，e3代表1000</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%f\n"</span>, c);						</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-6类型限定符"><a href="#4-6类型限定符" class="headerlink" title="4.6类型限定符"></a>4.6类型限定符</h3><table>
<thead>
<tr>
<th><strong>限定符</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>extern</td>
<td>声明一个变量，extern声明的变量没有建立存储空间。  extern int a;</td>
</tr>
<tr>
<td>const</td>
<td>定义一个常量，常量的值不能修改。  const int a = 10;</td>
</tr>
<tr>
<td>volatile</td>
<td>防止编译器优化代码</td>
</tr>
<tr>
<td>register</td>
<td>定义寄存器变量，提高效率。register是建议型的指令，而不是命令型的指令，如果CPU有空闲寄存器，那么register就生效，如果没有空闲寄存器，那么register无效。</td>
</tr>
</tbody></table>
<h2 id="05-字符串格式化输出和输入"><a href="#05-字符串格式化输出和输入" class="headerlink" title="05.字符串格式化输出和输入"></a>05.字符串格式化输出和输入</h2><p><strong>字符串常量</strong></p>
<ul>
<li>字符串常量与字符常量的不同：</li>
</ul>
<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gc8rdba035j30ah02fglh.jpg" alt="111.jpg" style="zoom:80%;" />



<h3 id="printf函数和putchar函数"><a href="#printf函数和putchar函数" class="headerlink" title="printf函数和putchar函数"></a>printf函数和putchar函数</h3><table>
<thead>
<tr>
<th><strong>打印格式</strong></th>
<th><strong>对应数据类型</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>%d</td>
<td>int</td>
<td>接受整数值并将它表示为有符号的十进制整数</td>
</tr>
<tr>
<td>%hd</td>
<td>short int</td>
<td>短整数</td>
</tr>
<tr>
<td>%hu</td>
<td>unsigned short</td>
<td>无符号短整数</td>
</tr>
<tr>
<td>%o</td>
<td>unsigned int</td>
<td>无符号8进制整数</td>
</tr>
<tr>
<td>%u</td>
<td>unsigned int</td>
<td>无符号10进制整数</td>
</tr>
<tr>
<td>%x,%X</td>
<td>unsigned int</td>
<td>无符号16进制整数，x对应的是abcdef，X对应的是ABCDEF</td>
</tr>
<tr>
<td>%f</td>
<td>float</td>
<td>单精度浮点数</td>
</tr>
<tr>
<td>%lf</td>
<td>double</td>
<td>双精度浮点数</td>
</tr>
<tr>
<td>%e,%E</td>
<td>double</td>
<td>科学计数法表示的数，此处”e”的大小写代表在输出时用的”e”的大小写</td>
</tr>
<tr>
<td>%c</td>
<td>char</td>
<td>字符型。可以把输入的数字按照ASCII码相应转换为对应的字符</td>
</tr>
<tr>
<td>%s</td>
<td>char *</td>
<td>字符串。</td>
</tr>
<tr>
<td><strong>%p</strong></td>
<td>void *</td>
<td><strong>以16进制形式输出指针</strong></td>
</tr>
<tr>
<td>%%</td>
<td>%</td>
<td>输出一个百分号</td>
</tr>
</tbody></table>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%p\n"</span>, &amp;a);			<span class="comment">//输出变量a在内存中的地址编号</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> b = <span class="string">'a'</span>;</span><br><span class="line">	<span class="built_in">putchar</span>(b);					<span class="comment">//putchar只有一个参数，就是要输出的char</span></span><br><span class="line">    </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%%d\n"</span>);			<span class="comment">//%%代表一个%</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"'%6d'\n"</span>, a);			<span class="comment">// '    10'</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"'%-6d'\n"</span>, a);			<span class="comment">//'10    '</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"'%06d'\n"</span>, a);			<span class="comment">//'000010'</span></span><br><span class="line">    </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="scanf和getchar函数"><a href="#scanf和getchar函数" class="headerlink" title="scanf和getchar函数"></a>scanf和getchar函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input ch1 please: \n"</span>);</span><br><span class="line">ch1 = getchar();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n"</span>, ch1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b);			<span class="comment">//notice: 这里是 b的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>List-02_Linux基本使用（2）</title>
    <url>/2020/02/15/Linux/List-02_Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<h2 id="01-用户权限相关命令"><a href="#01-用户权限相关命令" class="headerlink" title="01.用户权限相关命令"></a>01.用户权限相关命令</h2><h3 id="1-1组管理"><a href="#1-1组管理" class="headerlink" title="1.1组管理"></a>1.1组管理</h3><blockquote>
<p>提示：<strong>创建组</strong> / <strong>删除组</strong> 的终端命令都需要通过 <code>sudo</code> 执行</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">groupadd 组名</td>
<td align="left">添加组</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">groupdel 组名</td>
<td align="left">删除组</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">cat /etc/group</td>
<td align="left">确认组信息</td>
</tr>
<tr>
<td align="left">04</td>
<td align="left">chgrp -R 组名 文件/目录名</td>
<td align="left">递归修改文件/目录的所属组</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：</p>
<ul>
<li>组信息保存在 <code>/etc/group</code> 文件中</li>
<li><code>/etc</code> 目录是专门用来保存 <strong>系统配置信息</strong> 的目录</li>
</ul>
</blockquote>
<p>在实际应用中，可以预先针对 <strong>组</strong> 设置好权限，然后 <strong>将不同的用户添加到对应的组中</strong>，从而<strong>不用依次为每一个用户设置权限</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su root </span><br><span class="line"></span><br><span class="line">groupadd chanwillian</span><br><span class="line">groupdel chanwillian </span><br><span class="line"></span><br><span class="line">chgrp 组名 文件或目录名</span><br></pre></td></tr></table></figure>





<h3 id="1-2chmod-简单使用（重要）"><a href="#1-2chmod-简单使用（重要）" class="headerlink" title="1.2chmod 简单使用（重要）"></a>1.2<code>chmod</code> 简单使用（重要）</h3><ul>
<li><code>chmod</code> 可以修改 <strong>用户／组</strong> 对 <strong>文件／目录</strong> 的权限</li>
<li>命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod +/-rwx 文件名|目录名</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th><strong>[   u/g/o/a ]</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>u</td>
<td>user 表示该文件的<strong>所有者</strong></td>
</tr>
<tr>
<td>g</td>
<td>group 表示与该文件的所有者属于同一组(  group )者，即<strong>用户组</strong></td>
</tr>
<tr>
<td>o</td>
<td>other 表示其他以外的人</td>
</tr>
<tr>
<td>a</td>
<td>all 表示这三者皆是</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>[ + - = ]</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>+</strong></td>
<td>增加权限</td>
</tr>
<tr>
<td><strong>-</strong></td>
<td>撤销权限</td>
</tr>
<tr>
<td><strong>=</strong></td>
<td>设定权限</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod u-r a.txt</span><br><span class="line">chmod u-r oneday</span><br><span class="line">chmod gu&#x3D;rwx oneday				多个类型，一同修改 </span><br><span class="line">chmod g&#x3D;rwx oneday twoday		多个对象，一同修改</span><br></pre></td></tr></table></figure>

<p><img src="C:%5CUsers%5C%E7%9A%87%E7%9A%84%E6%89%8B%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200515230054128.png" alt="image-20200515230054128"></p>
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>r</td>
<td>读取权限，数字代号为 “4”</td>
</tr>
<tr>
<td>w</td>
<td>写入权限，数字代号为 “2”</td>
</tr>
<tr>
<td>x</td>
<td>执行权限，数字代号为 “1”</td>
</tr>
<tr>
<td>-</td>
<td>不具任何权限，数字代号为 “0”</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">chmod <span class="number">764</span> oneday			drwxrw-r-x</span><br><span class="line">chomd <span class="number">654</span> oneday			drw-r-xr--</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>注意：如果想递归修改某个目录下的所有文件的权限，需要加上参数“ -R ”。</strong></li>
</ul>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 777 test&#x2F; -R</span><br></pre></td></tr></table></figure>

<p>递归 test 目录下所有文件加 777 权限。</p>
<h3 id="1-3用户管理"><a href="#1-3用户管理" class="headerlink" title="1.3用户管理"></a>1.3用户管理</h3><h4 id="创建用户／设置密码／删除用户"><a href="#创建用户／设置密码／删除用户" class="headerlink" title="创建用户／设置密码／删除用户"></a>创建用户／设置密码／删除用户</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">useradd -m -g 组 新建用户名</td>
<td align="left">添加新用户</td>
<td align="left"><strong>-m</strong> 自动建立用户家目录      <strong>-g</strong> 指定用户所在的组，否则会建立一个和同名的组</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">passwd 用户名</td>
<td align="left">设置用户密码</td>
<td align="left">如果是普通用户，直接用 passwd 可以修改自己的账户密码</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">userdel -r 用户名</td>
<td align="left">删除用户</td>
<td align="left">-r 选项会自动删除用户加目录</td>
</tr>
<tr>
<td align="left">04</td>
<td align="left">cat /etc/passwd | grep 用户名</td>
<td align="left">确认用户信息</td>
<td align="left">新建用户后，用户信息会保存在 /etc/passwd 文件中</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：</p>
<ul>
<li>创建用户时，如果忘记添加 <code>-m</code> 选项指定新用户的家目录 —— 最简单的方法就是<strong>删除用户，重新创建</strong></li>
<li>创建用户时，默认会创建一个和<strong>用户名</strong>同名的<strong>组名</strong></li>
<li>用户信息保存在 <code>/etc/passwd</code> 文件中</li>
</ul>
</blockquote>
<h4 id="查看用户信息"><a href="#查看用户信息" class="headerlink" title="查看用户信息"></a>查看用户信息</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">id [用户名]</td>
<td align="left">查看用户 UID 和 GID 信息</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">who</td>
<td align="left">查看当前所有登录的用户列表</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">whoami</td>
<td align="left">查看当前登录用户的账户名</td>
</tr>
</tbody></table>
<p><strong>passwd 文件</strong></p>
<p><code>/etc/passwd</code> 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是</p>
<ol>
<li>用户名</li>
<li>密码（x，表示加密的密码）</li>
<li>UID（用户标识）</li>
<li>GID（组标识）</li>
<li>用户全名或本地帐号</li>
<li>家目录</li>
<li>登录使用的 Shell，就是登录之后，使用的终端命令，<code>ubuntu</code> 默认是 <code>dash</code></li>
</ol>
<p><img src="C:%5CUsers%5C%E7%9A%87%E7%9A%84%E6%89%8B%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200516213219010.png" alt="image-20200516213219010"></p>
<p><strong>usermod</strong></p>
<ul>
<li><code>usermod</code> 可以用来设置 <strong>用户</strong> 的 <strong>主组</strong> ／ <strong>附加组</strong> 和 <strong>登录 Shell</strong>，命令格式如下：</li>
<li><strong>主组</strong>：通常在新建用户时指定，在 <code>etc/passwd</code> 的第 4 列 <strong>GID 对应的组</strong></li>
<li><strong>附加组</strong>：在 <code>etc/group</code> 中最后一列表示该组的用户列表，用于指定 <strong>用户的附加权限</strong></li>
</ul>
<blockquote>
<p>提示：设置了用户的附加组之后，需要重新登录才能生效！</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改用户的主组（passwd 中的 GID）</span></span><br><span class="line">usermod -g 组 用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改用户的附加组</span></span><br><span class="line">usermod -G 组 用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改用户登录 Shell</span></span><br><span class="line">usermod -s /bin/bash 用户名</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：默认使用 <code>useradd</code> 添加的用户是没有权限使用 <code>sudo</code> 以 <code>root</code> 身份执行命令的，可以使用以下命令，将用户添加到 <code>sudo</code> 附加组中</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -G sudo 用户名</span><br></pre></td></tr></table></figure>



<p><strong>which（重要）</strong></p>
<blockquote>
<p>提示</p>
<ul>
<li><code>/etc/passwd</code> 是用于保存用户信息的文件</li>
<li><code>/usr/bin/passwd</code> 是用于修改用户密码的程序</li>
</ul>
</blockquote>
<ul>
<li><code>which</code> 命令可以查看执行命令所在位置，例如：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># /bin/ls</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> useradd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># /usr/sbin/useradd</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ls -l /bin/ls       //ls -l 的一个用法</span><br><span class="line">ls -l /etc/passwd</span><br></pre></td></tr></table></figure>



<h4 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">su - 用户名</td>
<td align="left">切换用户，并且切换目录</td>
<td align="left">- 可以切换到用户家目录，否则保持位置不变</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">exit</td>
<td align="left">退出当前登录账户</td>
<td align="left"></td>
</tr>
</tbody></table>
<ul>
<li><code>su</code> 不接用户名，可以切换到 <code>root</code>，但是不推荐使用，因为不安全</li>
</ul>
<h3 id="1-4修改文件权限"><a href="#1-4修改文件权限" class="headerlink" title="1.4修改文件权限"></a>1.4修改文件权限</h3><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">chown</td>
<td align="left">修改拥有者</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">chgrp</td>
<td align="left">修改组</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">chmod</td>
<td align="left">修改权限</td>
</tr>
</tbody></table>
<ul>
<li>命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改文件|目录的拥有者</span></span><br><span class="line">chown 用户名 文件名|目录名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归修改文件|目录的组</span></span><br><span class="line">chgrp -R 组名 文件名|目录名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归修改文件权限</span></span><br><span class="line">chmod -R 755 文件名|目录名</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>chmod</code> 在设置权限时，可以简单地使用三个数字分别对应 <strong>拥有者</strong> ／ <strong>组</strong> 和 <strong>其他</strong> 用户的权限</p>
</li>
<li><p>常见数字组合有：</p>
<ul>
<li><code>777</code> ===&gt; <code>u=rwx,g=rwx,o=rwx</code></li>
<li><code>755</code> ===&gt; <code>u=rwx,g=rx,o=rx</code></li>
<li><code>644</code> ===&gt; <code>u=rw,g=r,o=r</code></li>
</ul>
</li>
</ul>
<h4 id="last：查询用户登陆情况"><a href="#last：查询用户登陆情况" class="headerlink" title="last：查询用户登陆情况"></a>last：查询用户登陆情况</h4><h2 id="02-系统管理"><a href="#02-系统管理" class="headerlink" title="02.系统管理"></a>02.系统管理</h2><h3 id="时间和日期"><a href="#时间和日期" class="headerlink" title="时间和日期"></a>时间和日期</h3><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">date</td>
<td align="left">查看系统时间</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">cal</td>
<td align="left"><code>calendar</code> 查看日历，<code>-y</code> 选项可以查看一年的日历</td>
</tr>
</tbody></table>
<h3 id="磁盘信息"><a href="#磁盘信息" class="headerlink" title="磁盘信息"></a>磁盘信息</h3><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">df -h</td>
<td align="left"><code>disk free</code> 显示磁盘剩余空间</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">du -h [目录名]</td>
<td align="left"><code>disk usage</code> 显示目录下的文件大小</td>
</tr>
</tbody></table>
<ul>
<li>选项说明</li>
</ul>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-h</td>
<td align="left">以人性化的方式显示文件大小</td>
</tr>
</tbody></table>
<h3 id="进程信息"><a href="#进程信息" class="headerlink" title="进程信息"></a>进程信息</h3><ul>
<li>所谓 <strong>进程</strong>，通俗地说就是 <strong>当前正在执行的一个程序</strong></li>
</ul>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">ps aux</td>
<td align="left"><code>process status</code> 查看进程的详细状况</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">top</td>
<td align="left">动态显示运行中的进程并且排序</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">kill [-9] 进程代号</td>
<td align="left">终止指定代号的进程，<code>-9</code> 表示强行终止</td>
</tr>
</tbody></table>
<blockquote>
<p><code>ps</code> 默认只会显示当前用户通过终端启动的应用程序</p>
</blockquote>
<ul>
<li><code>ps</code> 选项说明功能</li>
</ul>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">a</td>
<td align="left">显示终端上的所有进程，包括其他用户的进程</td>
</tr>
<tr>
<td align="left">u</td>
<td align="left">显示进程的详细状态</td>
</tr>
<tr>
<td align="left">x</td>
<td align="left">显示没有控制终端的进程</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：使用 <code>kill</code> 命令时，最好只终止由当前用户开启的进程，而不要终止 <code>root</code> 身份开启的进程，否则可能导致系统崩溃</p>
<ul>
<li>要退出 <code>top</code> 可以直接输入 <code>q</code></li>
</ul>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">init <span class="number">0</span> 				关机</span><br><span class="line">init <span class="number">6</span>				重启</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ping</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">105</span>				测试远程主机连通性	</span><br><span class="line">route							查看网络路由设置</span><br><span class="line">netstat							查看联网的软件有哪些，监控网络状态</span><br></pre></td></tr></table></figure>

<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="ifconfig：查看或配置网卡信息"><a href="#ifconfig：查看或配置网卡信息" class="headerlink" title="ifconfig：查看或配置网卡信息"></a>ifconfig：查看或配置网卡信息</h3><p>如果，我们只是敲：ifconfig，它会显示所有网卡的信息：</p>
<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbxgaofirvj30mb065gmc.jpg" alt="2016-05-31_000812"  />

<table>
<thead>
<tr>
<th><strong>显示字段</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>eth0</td>
<td>网络接口名称</td>
</tr>
<tr>
<td>Link encap</td>
<td>链路封装协议</td>
</tr>
<tr>
<td>Hwaddr</td>
<td>网络接口的MAC地址</td>
</tr>
<tr>
<td>Inet addr</td>
<td>IP地址</td>
</tr>
<tr>
<td>Bcast</td>
<td>广播地址</td>
</tr>
<tr>
<td>Mask</td>
<td>子网掩码</td>
</tr>
<tr>
<td>UP</td>
<td>网络接口状态标识，UP已经启用，DOWN已经停用</td>
</tr>
<tr>
<td>BROADCAST</td>
<td>广播标识，标识网络接口是否支持广播</td>
</tr>
<tr>
<td>RUNNING</td>
<td>传输标识，标识网络接口是否已经开始传输分组数据</td>
</tr>
<tr>
<td>MULTICAST</td>
<td>多播标识，标识网络接口是否支持多播</td>
</tr>
<tr>
<td>MTU，Metric</td>
<td>MTU:最大传输单位，单位：字节。Metric:度量值，用于RIP建立网络路由用</td>
</tr>
<tr>
<td>RX bytes</td>
<td>接收数据字节统计</td>
</tr>
<tr>
<td>TX bytes</td>
<td>发送数据字节统计</td>
</tr>
</tbody></table>
<p>我们可以通过ifconfig配置网络参数：</p>
<p>只有root才能用ifconfig配置参数，其他用户只能查看网络配置</p>
<p><strong>ifconfig  网络接口名称  [地址协议类型]  [address]  [参数]</strong></p>
<p>地址协议类型如：inet(IPv4),inet6(IPv6)等</p>
<p>如:ifconfig eth0 inet 192.168.10.254 netmask 255.255.255.0 up</p>
<p> 常用参数：</p>
<table>
<thead>
<tr>
<th><strong>参数</strong></th>
<th><strong>功能</strong></th>
</tr>
</thead>
<tbody><tr>
<td>-a</td>
<td>显示所有网络接口状态</td>
</tr>
<tr>
<td>inet [IP地址]</td>
<td>设置IP地址</td>
</tr>
<tr>
<td>netmask [子网掩码]</td>
<td>设置子网掩码</td>
</tr>
<tr>
<td>up</td>
<td>启用网络接口</td>
</tr>
<tr>
<td>down</td>
<td>关闭网络接口</td>
</tr>
</tbody></table>
<p> ifconfig配置的网络参数在内存中，计算机重新启动之后就失效了，如果需要持久有效就需要修改网络接口的配置文件：</p>
<p>l redhat修改/etc/sysconfig/network-scripts/ifcfg-eth0文件</p>
<p>l redhat修改/etc/sysconfig/network-scripts/ifcfg-eth0文件</p>
<p>IPADDR=IP地址</p>
<p>GATEWAY=默认网关</p>
<p>l ubuntu修改/etc/NetworkManager/system-connections/Wired connection 1文件</p>
<p>[ipv4]</p>
<p>method=manual</p>
<p>addresses1=IP地址;24;默认网关;</p>
<p> <img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbxgcfwstxj30l00crgni.jpg" alt="20150318121400861"></p>
<h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><h2 id="03-其他命令"><a href="#03-其他命令" class="headerlink" title="03.其他命令"></a>03.其他命令</h2><h4 id="find：查找文件"><a href="#find：查找文件" class="headerlink" title="find：查找文件"></a>find：查找文件</h4><p>常用用法：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> ./ -name a.txt			查找当前目录下所有名为a.txt的文件</span><br><span class="line"><span class="built_in">find</span> ./ -name 'a*'			查找当前目录下所有以a开头的文件</span><br><span class="line"><span class="built_in">find</span> ./ -name '*.txt'		查找当前目录下所有后缀为.txt的文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">find</span> -name a.txt</span><br><span class="line"><span class="built_in">find</span> a.txt</span><br><span class="line"><span class="built_in">find</span> -size -<span class="number">2</span>M</span><br><span class="line"></span><br><span class="line"><span class="built_in">find</span> ./oneday -size -<span class="number">2</span>M		查找在/oneday目录下大于<span class="number">2</span>M的文件</span><br><span class="line"><span class="built_in">find</span> ./oneday -size <span class="number">2</span>M						等于<span class="number">2</span>M</span><br><span class="line"><span class="built_in">find</span> ./one day -size +<span class="number">2</span>M					大于<span class="number">2</span>M</span><br></pre></td></tr></table></figure>



<h4 id="file：获取文件类型"><a href="#file：获取文件类型" class="headerlink" title="file：获取文件类型"></a>file：获取文件类型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file a.txt</span><br></pre></td></tr></table></figure>



<h2 id="04-打包压缩"><a href="#04-打包压缩" class="headerlink" title="04.打包压缩"></a>04.打包压缩</h2><ul>
<li><strong>打包压缩</strong> 是日常工作中备份文件的一种方式</li>
<li>在不同操作系统中，常用的打包压缩方式是不同的<ul>
<li><code>Windows</code> 常用 <code>rar</code></li>
<li><code>Mac</code> 常用 <code>zip</code></li>
<li><code>Linux</code> 常用 <code>tar.gz</code></li>
</ul>
</li>
</ul>
<h3 id="1-1-打包-／-解包"><a href="#1-1-打包-／-解包" class="headerlink" title="1.1 打包 ／ 解包"></a>1.1 打包 ／ 解包</h3><ul>
<li><code>tar</code> 是 Linux 中最常用的 <strong>备份</strong>工具，此命令可以 <strong>把一系列文件</strong> 打包到 <strong>一个大文件中</strong>，也可以把一个 <strong>打包的大文件恢复成一系列文件</strong></li>
<li><code>tar</code> 的命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打包文件</span></span><br><span class="line">tar -cvf 打包文件.tar 被打包的文件／路径...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包文件</span></span><br><span class="line">tar -xvf 打包文件.tar</span><br></pre></td></tr></table></figure>

<ul>
<li><code>tar</code> 选项说明</li>
</ul>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">c</td>
<td align="left">生成档案文件，创建打包文件</td>
</tr>
<tr>
<td align="left">x</td>
<td align="left">解开档案文件</td>
</tr>
<tr>
<td align="left">v</td>
<td align="left">列出归档解档的详细过程，显示进度</td>
</tr>
<tr>
<td align="left">f</td>
<td align="left">指定档案文件名称，f 后面一定是 .tar 文件，所以必须放选项最后</td>
</tr>
</tbody></table>
<blockquote>
<p>注意：<code>f</code> 选项必须放在最后，其他选项顺序可以随意</p>
</blockquote>
<h3 id="1-2-压缩／解压缩"><a href="#1-2-压缩／解压缩" class="headerlink" title="1.2 压缩／解压缩"></a>1.2 压缩／解压缩</h3><h4 id="1-gzip"><a href="#1-gzip" class="headerlink" title="1) gzip"></a>1) <code>gzip</code></h4><ul>
<li>tar 与 gzip 命令结合可以使用实现文件打包和压缩<ul>
<li><code>tar</code> 只负责打包文件，但不压缩</li>
<li>用 <code>gzip</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.gz</code></li>
</ul>
</li>
</ul>
<blockquote>
<p>在 <code>Linux</code> 中，最常见的压缩文件格式就是 <code>xxx.tar.gz</code></p>
</blockquote>
<ul>
<li>在 <code>tar</code> 命令中有一个选项 <strong>-z</strong> 可以调用 <code>gzip</code>，从而可以方便的实现压缩和解压缩的功能</li>
<li>命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩文件</span></span><br><span class="line">tar -zcvf 打包文件.tar.gz 被压缩的文件／路径...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩文件</span></span><br><span class="line">tar -zxvf 打包文件.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩到指定路径</span></span><br><span class="line">tar -zxvf 打包文件.tar.gz -C 目标路径</span><br><span class="line"></span><br><span class="line">tar -czvf test.tar.gz a.txt b.txt c.txt		</span><br><span class="line">tar -xzvf test.tar.gz -C ../twoday 			解压</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-C</td>
<td align="left">解压缩到指定目录，注意：要解压缩的目录必须存在</td>
</tr>
</tbody></table>
<h4 id="2-bzip2-two"><a href="#2-bzip2-two" class="headerlink" title="2) bzip2(two)"></a>2) <code>bzip2(two)</code></h4><ul>
<li><code>tar</code> 与 <code>bzip2</code> 命令结合可以使用实现文件 <strong>打包和压缩</strong>（用法和 <code>gzip</code> 一样）<ul>
<li><code>tar</code> 只负责打包文件，但不压缩，</li>
<li>用 <code>bzip2</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.bz2</code></li>
</ul>
</li>
<li>在 <code>tar</code> 命令中有一个选项 <strong>-j</strong> 可以调用 <code>bzip2</code>，从而可以方便的实现压缩和解压缩的功能</li>
<li>命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩文件</span></span><br><span class="line">tar -jcvf 打包文件.tar.bz2 被压缩的文件／路径...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩文件</span></span><br><span class="line">tar -jxvf 打包文件.tar.bz2</span><br></pre></td></tr></table></figure>



<h3 id="1-3-软链接"><a href="#1-3-软链接" class="headerlink" title="1.3 软链接"></a>1.3 软链接</h3><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">ln -s 被链接的源文件 链接文件</td>
<td align="left">建立文件的软链接，用通俗的方式讲<strong>类似于</strong> Windows 下的<strong>快捷方式</strong></td>
</tr>
</tbody></table>
<ul>
<li><p>注意：</p>
</li>
<li><ol>
<li>没有 <strong>-s</strong>  选项建立的是一个  硬链接文件</li>
</ol>
<ul>
<li>两个文件占用相同大小的硬盘空间，<strong>工作中几乎不会建立文件的硬链接</strong></li>
</ul>
</li>
<li><ol start="2">
<li><strong>源文件要使用绝对路径</strong>，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</li>
</ol>
</li>
</ul>
<ul>
<li>软链接：软链接不占用磁盘空间，源文件删除则软链接失效。</li>
<li>硬链接：硬链接只能链接普通文件，不能链接目录。</li>
<li>两种链接共同点：相链接的两个文件，修改其中一个文件，另一个会随其发生变化</li>
</ul>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv314wfwzj30hx07774z.jpg" alt="img"></p>
<h4 id="硬链接简介（知道）"><a href="#硬链接简介（知道）" class="headerlink" title="硬链接简介（知道）"></a>硬链接简介（知道）</h4><p><strong>文件软硬链接的示意图</strong></p>
<p><img src="C:%5CUsers%5C%E7%9A%87%E7%9A%84%E6%89%8B%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200516233149956.png" alt="image-20200516233149956"></p>
<h2 id="05-VIM编辑器"><a href="#05-VIM编辑器" class="headerlink" title="05.VIM编辑器"></a>05.VIM编辑器</h2><h4 id="打开文件或者创造文件"><a href="#打开文件或者创造文件" class="headerlink" title="打开文件或者创造文件"></a>打开文件或者创造文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi f.txt</span><br><span class="line">vi a.txt</span><br></pre></td></tr></table></figure>

<h4 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Shift + Z + Z</span><br></pre></td></tr></table></figure>

<p><strong>输入    i    进入，进入插入模式</strong></p>
<p><strong>按下    Esc    ，退出插入模式</strong></p>
<h4 id="打开文件并且快速定位到特定行"><a href="#打开文件并且快速定位到特定行" class="headerlink" title="打开文件并且快速定位到特定行"></a>打开文件并且快速定位到特定行</h4><p>•在日常工作中，有可能会遇到打开一个文件，并定位到指定行的情况<br>•例如：在开发时，知道某一行代码有错误，可以快速定位到出错代码的位置<br>•这个时候，可以使用以下命令打开文件</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">vi 文件名 +行号</span><br></pre></td></tr></table></figure>

<blockquote>
<p>提示:  如果只带上,而不指定行号,会直接定位到<strong>文件末尾</strong></p>
</blockquote>
<h3 id="vi的set指令"><a href="#vi的set指令" class="headerlink" title="vi的set指令"></a>vi的set指令</h3><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>功能</strong></th>
</tr>
</thead>
<tbody><tr>
<td>:set ic</td>
<td>搜寻时忽略大小写</td>
</tr>
<tr>
<td>:set noic</td>
<td>搜寻时不忽略大小写</td>
</tr>
<tr>
<td><strong>:set nu</strong></td>
<td>显示行号                        <strong>常用</strong></td>
</tr>
<tr>
<td>:set nonu</td>
<td>不显示行号</td>
</tr>
</tbody></table>
<h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">lcd		切换本地路径</span><br><span class="line">put		上传</span><br><span class="line">get		下载</span><br></pre></td></tr></table></figure>

<h3 id="创造网页"><a href="#创造网页" class="headerlink" title="创造网页"></a>创造网页</h3><ul>
<li><p>进入解压后的目录，终端敲make编译代码</p>
</li>
<li><p>root用户启动或关闭web服务</p>
</li>
<li><pre><code>./myhttp start                开启网页            
./myhttp stop                关闭网页
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
vi test.c
gcc -o test.cgi test.c
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 06.ADB常用命令介绍</span><br><span class="line"></span><br><span class="line">| **命令**                            | **含义**                                                     |</span><br><span class="line">| :---------------------------------- | :----------------------------------------------------------- |</span><br><span class="line">| adb devices                         | 查看设备                                                     |</span><br><span class="line">| adb get-serialno                    | 获取设备的ID和序列号                                         |</span><br><span class="line">| adb shell                           | 进入设备或者模拟器的shell，进入之后就可以执行shell命令了，比如cd、pwd、ls等。 |</span><br><span class="line">| adb push &lt;本地路径&gt; &lt;远程路径&gt;      | 从电脑上发送文件到设备(手机)                                 |</span><br><span class="line">| adb push a.txt &#x2F;sdcard&#x2F;a.txt        | 把当前文件夹下面的文件a.txt文件发送到手机的&#x2F;sdcard&#x2F;下面      |</span><br><span class="line">| adb pull &lt;远程路径&gt; &lt;本地路径&gt;      | 从设备(手机)上下载文件到电脑                                 |</span><br><span class="line">| adb pull &#x2F;sdcard&#x2F;DCIM&#x2F;1.jpg .&#x2F;1.jpg | 把手机的&#x2F;sdcard&#x2F;DCIM&#x2F;的1.jpg文件发给电脑                     |</span><br><span class="line">| adb install 文件名                  | 安装软件，adb install test.apk                               |</span><br><span class="line">| adb remove 包名                     | 卸载软件                                                     |</span><br><span class="line"></span><br><span class="line">### 1.1使用ADB命令卸载手机软件</span><br><span class="line"></span><br><span class="line">1.</span><br></pre></td></tr></table></figure>
 adb devices     检测手机连接状态
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2.</span><br></pre></td></tr></table></figure>
 adb shell 
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">3.</span><br></pre></td></tr></table></figure>
 pm list packages            查看包名
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">4.</span><br></pre></td></tr></table></figure>
 pm uninstall --user 0 包名        卸载软件
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 07.软件安装</span><br><span class="line"></span><br><span class="line">### 通过 apt 安装／卸载软件</span><br><span class="line"></span><br><span class="line">- apt 是 &#96;Advanced Packaging Tool&#96;，是 Linux 下的一款安装包管理工具</span><br><span class="line">- 可以在终端中方便的 **安装**／**卸载**／**更新软件包**</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line"># 1. 安装软件</span><br><span class="line">$ sudo apt install 软件包</span><br><span class="line"></span><br><span class="line"># 2. 卸载软件</span><br><span class="line">$ sudo apt remove 软件名</span><br><span class="line"></span><br><span class="line"># 3. 更新已安装的包</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure>
</code></pre></li>
</ul>
<h3 id="安装演练"><a href="#安装演练" class="headerlink" title="安装演练"></a>安装演练</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一个小火车提示</span></span><br><span class="line">$ sudo apt install sl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个比较漂亮的查看当前进程排名的软件</span></span><br><span class="line">$ sudo apt install htop</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Word-List-One</title>
    <url>/2020/02/13/Office/Word/</url>
    <content><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbuobix1hej30e706s3zn.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbuocck5ioj30l30as0vi.jpg" alt=""></p>
<h2 id="0-1-插件使用"><a href="#0-1-插件使用" class="headerlink" title="0.1 插件使用"></a>0.1 插件使用</h2><ul>
<li>使用插件，迅速完成批量的操作，提高你的办公效率</li>
</ul>
<h2 id="0-2-文字处理"><a href="#0-2-文字处理" class="headerlink" title="0.2 文字处理"></a>0.2 文字处理</h2><h4 id="1-选择文本"><a href="#1-选择文本" class="headerlink" title="1.选择文本"></a>1.选择文本</h4><ul>
<li><p>先是讲鼠标移到最左边</p>
<p><strong>单击</strong>        选择一行</p>
<p><strong>双击</strong>        选择一段</p>
<p><strong>三击</strong>        选择全文</p>
</li>
<li><p>不连续多选 </p>
<p>Ctrl  +  单（双）击</p>
</li>
<li><p>连续多选</p>
<p>Shift  +  单（双）击</p>
</li>
<li><p>矩形选择</p>
<p>Alt  +  </p>
</li>
</ul>
<h2 id="开始——》"><a href="#开始——》" class="headerlink" title="开始——》"></a>开始——》</h2><h4 id="1-编辑"><a href="#1-编辑" class="headerlink" title="1.编辑"></a>1.编辑</h4><ul>
<li>选择：选择相似文本</li>
<li>查找：<ul>
<li>可以使用通配符<code>*</code>进行查找<ul>
<li>例如，计算机17<em>4\</em></li>
</ul>
</li>
</ul>
</li>
<li>替换：<ul>
<li>关键：<strong>是否使用通配符</strong></li>
<li>段落标记：Enter</li>
<li>手动换行符：Shift  +   Enter  </li>
<li>可以使用<strong>替换</strong>进行查找：查找时，复制需要的文本到替换栏中</li>
<li>为某种格式添加标记：更多——》格式——》样式</li>
</ul>
</li>
</ul>
<h4 id="2-剪贴板"><a href="#2-剪贴板" class="headerlink" title="2.剪贴板"></a>2.剪贴板</h4><ul>
<li>格式刷：选好 你要的格式，然后双击 格式刷</li>
</ul>
<h4 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h4><ul>
<li>清除格式    </li>
<li>上标下标</li>
<li>右下方的小箭头<ul>
<li>字符间距</li>
</ul>
</li>
</ul>
<h4 id="4-段落"><a href="#4-段落" class="headerlink" title="4.段落"></a>4.段落</h4><ul>
<li>项目符号</li>
<li>编号</li>
<li>多级列表<ul>
<li>定义新多级列表<ul>
<li>更多：将级别连接到别的样式</li>
</ul>
</li>
</ul>
</li>
<li>有下方的小箭头</li>
<li>缩进和间距<ul>
<li>缩进，即段落的宽度</li>
<li>间距，分为段落之间的距离 和 行距<ul>
<li>执行和分页</li>
</ul>
</li>
<li>与下段同页</li>
</ul>
</li>
</ul>
<h4 id="5-样式"><a href="#5-样式" class="headerlink" title="5.样式"></a>5.样式</h4><ul>
<li><p>某些文字选好样式后，可以通过  右键此样式，进行  整体上的修改</p>
<ul>
<li>右键——》 修改<ul>
<li>格式：可以修改其他东西</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>创建自己的样式</strong>：选中某些你，修改好的文字——》然后，进入   <strong>样式最下边的三角形</strong>  ，创建即可。</p>
</li>
<li><p><strong>更新正在使用的样式</strong>： 选中某些你，修改好的文字——》然后，右击 正在使用的样式 ，更新即可。</p>
</li>
<li><p>右下角的箭头</p>
<ul>
<li>管理样式——》导入导出，选好文件，就可以了。</li>
</ul>
</li>
<li><p>更改样式：样式集：简单</p>
</li>
</ul>
<h2 id="页面布局——》"><a href="#页面布局——》" class="headerlink" title="页面布局——》"></a>页面布局——》</h2><h4 id="1-页面设置"><a href="#1-页面设置" class="headerlink" title="1.页面设置"></a>1.页面设置</h4><ul>
<li>纸张方向</li>
<li>纸张大小</li>
<li>页边距</li>
<li>右下方的小箭头<ul>
<li>页码范围：对称页边距</li>
</ul>
</li>
<li>文字方向</li>
<li>分隔符<ul>
<li>分节符</li>
</ul>
</li>
<li>分栏符</li>
</ul>
<h4 id="2-页面背景"><a href="#2-页面背景" class="headerlink" title="2.页面背景"></a>2.页面背景</h4><ul>
<li>页面颜色<ul>
<li>单色</li>
<li>预设</li>
<li>图片</li>
</ul>
</li>
<li>页面边框<ul>
<li>颜色</li>
<li>艺术型</li>
</ul>
</li>
<li>水印</li>
</ul>
<h4 id="3-主题"><a href="#3-主题" class="headerlink" title="3.主题"></a>3.主题</h4><ul>
<li>主题</li>
</ul>
<h2 id="插入——》"><a href="#插入——》" class="headerlink" title="插入——》"></a>插入——》</h2><h4 id="1-插图"><a href="#1-插图" class="headerlink" title="1.插图"></a>1.插图</h4><ul>
<li><p>形状</p>
<ul>
<li>格式——》大小</li>
<li>格式——》排列：对齐   ：分为  对齐页面  和   对齐边距</li>
<li>右键添加文字</li>
</ul>
</li>
<li><p>文本：文本框：绘制文本框</p>
</li>
<li><p>表格</p>
<ul>
<li>设计——》<ul>
<li>表格样式</li>
<li>绘图边框：<strong>绘制表格</strong>    添加斜线</li>
<li>表格样式：底纹—— 更改背景颜色</li>
<li>表格样式：边框： 选中  需要更改的  单元格，<strong>边框</strong>——》<strong>边框和底纹</strong>，然后进行修改。</li>
</ul>
</li>
<li>布局——》<ul>
<li>合并：合并单元格</li>
<li>对齐方式：水平居中</li>
<li>单元格大小：分布列</li>
<li>数据：重复标题行</li>
</ul>
</li>
<li>表格的编辑：表格右下角的小正方形，和左上角的 十字架</li>
</ul>
</li>
<li><p>图片</p>
<ul>
<li>格式——》<ul>
<li>排列：自动换行  改为  浮于文字上方 ，<strong>然后可以进行移动</strong></li>
<li>大小：裁剪       调整：压缩图片      先裁剪，再压缩图片。 即可完成压缩图片。</li>
</ul>
</li>
</ul>
</li>
<li><p>图表</p>
<ul>
<li>拖动  蓝色边界线，选中需要的数据，呈现在表格中。</li>
</ul>
</li>
<li><p>超链接</p>
<ul>
<li>选中文字，插入超链接即可。</li>
</ul>
</li>
<li><p>SmartArt</p>
<ul>
<li>设计——》<ul>
<li>创建图形：添加形状：添加助理</li>
<li>布局：更改样式</li>
<li>创建图形：<strong>从左到右</strong></li>
<li>SmatrArt样式：更改颜色</li>
</ul>
</li>
<li>格式——》<ul>
<li>形状样式<ul>
<li>形状填充——用于改变背景颜色</li>
</ul>
</li>
<li>形状——》<ul>
<li>更改形状</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2-页"><a href="#2-页" class="headerlink" title="2.页"></a>2.页</h4><ul>
<li>封面</li>
<li>分页</li>
<li>空白页</li>
</ul>
<h4 id="3-页眉和页脚"><a href="#3-页眉和页脚" class="headerlink" title="3.页眉和页脚"></a>3.页眉和页脚</h4><ul>
<li>页码：删除页码<ul>
<li>设计——》<ul>
<li>选项：首页不同，奇偶页不同</li>
<li>页眉和页脚：页码——》设置页码格式</li>
<li>导航：链接到前一页的页眉（页脚）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="4-文本"><a href="#4-文本" class="headerlink" title="4.文本"></a>4.文本</h4><ul>
<li>文本框</li>
<li>文本部件：将所选内容保存到文本部件库。</li>
</ul>
<h2 id="引用——》"><a href="#引用——》" class="headerlink" title="引用——》"></a>引用——》</h2><ul>
<li>创建目录：<ul>
<li>添加 下一节</li>
<li>添加目录即可</li>
</ul>
</li>
</ul>
<h4 id="1-目录"><a href="#1-目录" class="headerlink" title="1.目录"></a>1.目录</h4><ul>
<li><p>目录——》插入目录</p>
</li>
<li></li>
</ul>
<h2 id="审阅——》"><a href="#审阅——》" class="headerlink" title="审阅——》"></a>审阅——》</h2><h4 id="1-批注"><a href="#1-批注" class="headerlink" title="1.批注"></a>1.批注</h4><ul>
<li>新建批注</li>
</ul>
<h4 id="2-修订"><a href="#2-修订" class="headerlink" title="2.修订"></a>2.修订</h4><ul>
<li>修订：先选上修订，然后选中文字，最后按下Delete键，<strong>可以添加删除线</strong><ul>
<li>先选上修订，然后添加文字，<strong>可以添加带下划线的文字</strong></li>
<li>先选上修订，然后移动文字，<strong>被移动的文字会被带上删除线。</strong></li>
</ul>
</li>
</ul>
<h2 id="邮件——》"><a href="#邮件——》" class="headerlink" title="邮件——》"></a>邮件——》</h2><h4 id="1-开始邮件合并"><a href="#1-开始邮件合并" class="headerlink" title="1.开始邮件合并"></a>1.开始邮件合并</h4><ul>
<li>选择收件人：<strong>使用现有列表</strong>，然后<strong>插入合并域</strong>，最后完成和合并，<strong>编辑单个文档</strong>。</li>
</ul>
<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><h4 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h4><ul>
<li>类似于编程语言，<strong>可以自动化批量处理文件</strong><ul>
<li>例如，批量修改图片大小</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云音乐mp3外链方法</title>
    <url>/2020/02/05/Others/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90mp3%E5%A4%96%E9%93%BE%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><strong>1.第一步打开网易云音乐，随便找到一首歌，播放，复制网址的ID</strong></p>
<p>例如：李荣浩的麻雀，网址是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;1407551413.mp3</span><br></pre></td></tr></table></figure>

<p>显然，ID为1407551413</p>
<h2 id="————————————"><a href="#————————————" class="headerlink" title="————————————"></a>————————————</h2><p><strong>2.那么，这首歌的真实地址就是：</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;317151.mp3</span><br></pre></td></tr></table></figure>

<p>这个地址不会失效的；</p>
<p>这就得到一个下载公式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;ID数字.mp3</span><br></pre></td></tr></table></figure>

<p> <strong>把上面红色部分ID数字换成网易云播放页面的id即可。</strong></p>
<h2 id="————————————-1"><a href="#————————————-1" class="headerlink" title="————————————-"></a>————————————-</h2><p>参考于：</p>
<p><a href="https://cloud.tencent.com/developer/article/1550144" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1550144</a></p>
]]></content>
      <tags>
        <tag>Music</tag>
      </tags>
  </entry>
  <entry>
    <title>List-01_选择器，CSS外观</title>
    <url>/2020/01/31/CSS/List-01_%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%8CCSS%E5%A4%96%E8%A7%82/</url>
    <content><![CDATA[<h3 id="CSS样式规格"><a href="#CSS样式规格" class="headerlink" title="CSS样式规格"></a>CSS样式规格</h3><p><strong>概念</strong>： Cascading Style Sheets 层叠样式表</p>
<ul>
<li>层叠：多个样式可以作用在同一个html的元素上，同时生效</li>
</ul>
<p><strong>好处</strong>：</p>
<ol>
<li>功能强大</li>
<li>将内容展示和样式控制分离<ul>
<li>降低耦合度。解耦</li>
<li>让分工协作更容易</li>
<li>提高开发效率</li>
</ul>
</li>
</ol>
<p><strong>CSS 规则</strong>由两个主要的部分构成：选择器，以及一条或多条声明:</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2013/07/632877C9-2462-41D6-BD0E-F7317E4C42AC.jpg" alt="选择器"></p>
<ol>
<li>选择器通常是您需要改变样式的 HTML 元素。</li>
<li>每条声明由一个属性和一个值组成。</li>
<li>属性是您希望设置的样式属性。每个属性有一个值。属性和值被冒号分开。</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>								//放到 head标签之间</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>							//style</span><br><span class="line">        h1 &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="0-1-字体样式属性"><a href="#0-1-字体样式属性" class="headerlink" title="0.1    字体样式属性"></a>0.1    字体样式属性</h2><table>
<thead>
<tr>
<th>属性值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>font-size</td>
<td>字体大小，px为单位</td>
</tr>
<tr>
<td>font-family</td>
<td>字体，例如 宋体</td>
</tr>
<tr>
<td>font-weight</td>
<td>字体粗细</td>
</tr>
<tr>
<td>font-style</td>
<td>字体是否倾斜</td>
</tr>
</tbody></table>
<p>常用技巧：</p>
<ol>
<li><p>网页中普遍使用14px+</p>
</li>
<li><p>使用偶数的数字字号</p>
</li>
<li><p>各种字体之间用  逗号隔开</p>
</li>
<li><p>字体名称中     若包含特殊符号或为中文名称时，则需要这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;Microsoft YaHei&quot;</span><br><span class="line">&quot;宋体&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>选择多种字体时，名称为中文，一般放到后面</p>
</li>
<li><p>字体选择 键入时，尽量 使用  unicode ，一般字体 只选择 宋体和Microsoft YaHei</p>
</li>
</ol>
<h3 id="font-weight"><a href="#font-weight" class="headerlink" title="font-weight"></a>font-weight</h3><table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">nomal</td>
<td align="left">默认值</td>
</tr>
<tr>
<td align="left">bold</td>
<td align="left">定义粗体字符。</td>
</tr>
</tbody></table>
<h3 id="font-style"><a href="#font-style" class="headerlink" title="font-style"></a>font-style</h3><table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">normal</td>
<td align="left">默认值。</td>
</tr>
<tr>
<td align="left">italic</td>
<td align="left">斜体</td>
</tr>
</tbody></table>
<ul>
<li>一般文字很少使用 斜体</li>
</ul>
<h3 id="font综合设置字体样式"><a href="#font综合设置字体样式" class="headerlink" title="font综合设置字体样式"></a>font综合设置字体样式</h3><p>格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">选择器 &#123;font: font-style font-weight font-size font-family&#125;</span><br><span class="line">//顺序不能发生变化</span><br><span class="line">//font-size font-family 这两个属性 是必填项</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h1 &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">            font-family: "宋体"；</span><br><span class="line">            font-weight: normal;</span><br><span class="line">        &#125;</span><br><span class="line">        em &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-style</span>: <span class="selector-tag">normal</span>;     <span class="comment">/* 让斜体恢复正常 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        strong &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span>: <span class="selector-tag">normal</span>;     <span class="comment">/* 让加粗的文字恢复正常 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        ins &#123;</span><br><span class="line">            font: italic bold 16px "Microsoft YaHei";</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>天下无敌<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>中华小当家<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>我有时接受不了别人的意见<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ins</span>&gt;</span>天下之大唯我独尊<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="调试工具Chrome的使用"><a href="#调试工具Chrome的使用" class="headerlink" title="调试工具Chrome的使用"></a>调试工具Chrome的使用</h3><p>鼠标右键，检查，  页面左边部分为HTML，右边 部分为CSS</p>
<h2 id="0-2-选择器"><a href="#0-2-选择器" class="headerlink" title="0.2    选择器"></a>0.2    选择器</h2><h3 id="2-1-类选择器"><a href="#2-1-类选择器" class="headerlink" title="2.1    类选择器"></a>2.1    类选择器</h3><p><strong>注意</strong>：类选择器选择器优先级高于元素选择器</p>
<p>例题一</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .yellow &#123;						//命名：长词组 单词之间 用横线连接</span><br><span class="line">            color: yellow;				//命名 不能使用下划线，中文和纯数字</span><br><span class="line">        &#125;								</span><br><span class="line"><span class="css">        <span class="selector-class">.orange</span> &#123; </span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"yellow"</span>&gt;</span>king<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"orange"</span>&gt;</span>queen<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blue"</span>&gt;</span>minister<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>例题二</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span &#123;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line">            color: blue;   </span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.orange</span> &#123;</span></span><br><span class="line">            color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"blue"</span>&gt;</span>G<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>o<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"orange"</span>&gt;</span>o<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"blue"</span>&gt;</span>g<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>l<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>e<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-多类名选择器"><a href="#2-2-多类名选择器" class="headerlink" title="2.2    多类名选择器"></a>2.2    多类名选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>多类名选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.font</span> &#123;</span></span><br><span class="line">        font-size: 20px;</span><br><span class="line">      &#125;  </span><br><span class="line"><span class="css">      <span class="selector-class">.font2</span> &#123;</span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.pink</span> &#123;</span></span><br><span class="line">        color: pink;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"font pink"</span>&gt;</span>亚瑟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"font2 pink"</span>&gt;</span>孙尚香<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>铠<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-ID选择器"><a href="#2-3-ID选择器" class="headerlink" title="2.3    ID选择器"></a>2.3    ID选择器</h3><p><strong>注意</strong>：id选择器优先级高于元素选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ID选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#brother</span> &#123;						</span></span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#family</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#friend</span> &#123;</span></span><br><span class="line">            color: yellow</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#people</span> &#123;</span></span><br><span class="line">            color: black;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"brother"</span>&gt;</span>兄弟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"red"</span>&gt;</span>家人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"friend"</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"people"</span>&gt;</span>陌生人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>ID 只能使用一次，类 可使用 无数次</li>
</ul>
<h3 id="2-4-通配符选择器"><a href="#2-4-通配符选择器" class="headerlink" title="2.4    通配符选择器"></a>2.4    通配符选择器</h3><ul>
<li>很少使用</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    * &#123;</span><br><span class="line">        color: purple;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-伪类选择器"><a href="#2-5-伪类选择器" class="headerlink" title="2.5    伪类选择器"></a>2.5    伪类选择器</h3><h4 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;                <span class="comment">/* 未访问的链接 */</span></span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: gray;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">     <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;           <span class="comment">/*  已访问的链接 */</span></span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: red;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125; </span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;            <span class="comment">/*  鼠标放到链接上 */</span></span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: blue;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125; </span><br><span class="line">    a:active &#123;            /* 点击链接 不松开鼠标 */		//这四个东西，顺序不能改变</span><br><span class="line">        font-size: 18px;							//记忆口诀：lv包包，ha好</span><br><span class="line">        color: yellow;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>常用的格式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        a &#123;</span><br><span class="line">            font-weight: 700;</span><br><span class="line">            font-size: 18px;</span><br><span class="line">            color: purple;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.example</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">             color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  		<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>who am i<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  		<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"example"</span>&gt;</span>king<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        li:first-child &#123;		第一个</span><br><span class="line">            color: pink;    </span><br><span class="line">        &#125;</span><br><span class="line">        li:last-child &#123;			最后一个</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        li:nth-child(4) &#123;		第4个</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>例题二</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    li:nth-child(n) &#123;       所有元素</span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2n)</span> &#123;      <span class="comment">/*  0,2,4,6,8  */</span></span></span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3n)</span> &#123;       <span class="comment">/*  0,3,6,9,12  */</span></span></span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">    li:nth-child(even) &#123;    偶数元素</span><br><span class="line">        color: blue;    </span><br><span class="line">    &#125;</span><br><span class="line">    li:nth-child(odd) &#123;     奇数元素</span><br><span class="line">        color: purple;</span><br><span class="line">    &#125;</span><br><span class="line">    li:nth-last-child(even) &#123;    偶数元素,从最后一个开始计数</span><br><span class="line">        color: blue;    </span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="目标伪类选择器"><a href="#目标伪类选择器" class="headerlink" title="目标伪类选择器"></a>目标伪类选择器</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-pseudo">:target</span> &#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span>					//联系  锚点定位</span><br></pre></td></tr></table></figure>

<h2 id="0-3-CSS外观属性"><a href="#0-3-CSS外观属性" class="headerlink" title="0.3    CSS外观属性"></a>0.3    CSS外观属性</h2><h3 id="3-1-CSS颜色格式"><a href="#3-1-CSS颜色格式" class="headerlink" title="3.1    CSS颜色格式"></a>3.1    CSS颜色格式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ff0000</span>;         <span class="comment">/* 颜色最常用的为 16进制 */</span>  </span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f00</span>;          <span class="comment">/*   两两相同，可以简写   非是如此，不可简写 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(even)</span> &#123;</span></span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#rgb</span> &#123;                         <span class="comment">/*  RGB格式 */</span></span></span><br><span class="line">            color: rgb(135, 206, 235);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>王者<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>钻石<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"rgb"</span>&gt;</span>铂金<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="line-height：行间距"><a href="#line-height：行间距" class="headerlink" title="line-height：行间距"></a>line-height：行间距</h3><ul>
<li>单位：em，px 和 % ，em表示一个字的宽度</li>
<li>一般情况下，行距  比字号大 7，8个px即可</li>
</ul>
<h3 id="text-align：水平对齐方式"><a href="#text-align：水平对齐方式" class="headerlink" title="text-align：水平对齐方式"></a>text-align：水平对齐方式</h3><ul>
<li>left，right 和 center</li>
</ul>
<h3 id="text-indent：首行缩进"><a href="#text-indent：首行缩进" class="headerlink" title="text-indent：首行缩进"></a>text-indent：首行缩进</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    p &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">line-height</span>: 24<span class="selector-tag">px</span>;     <span class="comment">/*  行间距 */</span></span></span><br><span class="line">        text-indent: 2em;</span><br><span class="line">    &#125;</span><br><span class="line">    h2 &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="letter-spacing-字间距"><a href="#letter-spacing-字间距" class="headerlink" title="letter-spacing :  字间距"></a>letter-spacing :  字间距</h3><h3 id="word-spacing：单词间距"><a href="#word-spacing：单词间距" class="headerlink" title="word-spacing：单词间距"></a>word-spacing：单词间距</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">letter-spacing</span>: 4<span class="selector-tag">px</span>;        <span class="comment">/*字间距*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">word-spacing</span>: 5<span class="selector-tag">px</span>;        <span class="comment">/*  单词间距 针对于英文，对于中文无效 */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="颜色半透明"><a href="#颜色半透明" class="headerlink" title="颜色半透明"></a>颜色半透明</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">color: rgba(255,0,0,0.5);		最后一个值的范围 0&lt;a&lt;1</span><br></pre></td></tr></table></figure>

<h3 id="text-shadow-文字阴影"><a href="#text-shadow-文字阴影" class="headerlink" title="text-shadow:文字阴影"></a>text-shadow:文字阴影</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">text-shadow:水平位置，垂直位置，模糊距离，阴影颜色			&#x2F;&#x2F;前两个必填</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>间距<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ofo</span>;</span></span><br><span class="line">            font-size: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 5<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.5</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我喜欢你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="盒子模型：控制布局"><a href="#盒子模型：控制布局" class="headerlink" title="盒子模型：控制布局"></a>盒子模型：控制布局</h3><p><strong>margin</strong>：外边距</p>
<p><strong>padding</strong>：内边距</p>
<p>默认情况下内边距会影响整个盒子的大小</p>
<p><strong>box-sizing: border-box;</strong>  设置盒子的属性，让width和height就是最终盒子的大小</p>
<p><strong>float</strong>：浮动</p>
<ul>
<li>left</li>
<li>right</li>
</ul>
<h2 id="0-4-引入CSS样式表"><a href="#0-4-引入CSS样式表" class="headerlink" title="0.4    引入CSS样式表"></a>0.4    引入CSS样式表</h2><h3 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h3><ul>
<li>进行小的样式修改，直接在标签内进行修改</li>
<li>不常用</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"color: skyblue; font-size: 18px;"</span>&gt;</span>萌萌哒<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>间距<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>						//style 标签放到这里	</span><br><span class="line">        div &#123;</span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>萌萌哒<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><ul>
<li>css文件和html文件相分离</li>
<li>结构  样式相分离</li>
<li>再使用 link 标签，将css文件引入 html文件中去</li>
<li><strong>最常用</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>外部样式表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"test.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="0-5-标签显示模式"><a href="#0-5-标签显示模式" class="headerlink" title="0.5    标签显示模式"></a>0.5    标签显示模式</h2><h3 id="5-1-块级元素"><a href="#5-1-块级元素" class="headerlink" title="5.1    块级元素"></a>5.1    块级元素</h3><p>例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>  <span class="tag">&lt;<span class="name">p</span>&gt;</span>  <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>特点：</p>
<ol>
<li>总是从新行开始</li>
<li>高度，行高，外边距和内边距都是可以调节的</li>
<li>宽度默认与网页同宽</li>
<li>可以容纳内联元素和其他块元素</li>
<li><strong>注意：p 和 h1   标签中，不能放入块元素</strong></li>
</ol>
<h3 id="5-2-行内元素"><a href="#5-2-行内元素" class="headerlink" title="5.2    行内元素"></a>5.2    行内元素</h3><p>例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>  <span class="tag">&lt;<span class="name">span</span>&gt;</span>  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>  <span class="tag">&lt;<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>特点：</p>
<ol>
<li>和相邻行内元素在一行内</li>
<li>行内元素 只能容纳文本或其他行内元素</li>
</ol>
<h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> /&gt;</span>   <span class="tag">&lt;<span class="name">input</span> /&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="显示模式转化"><a href="#显示模式转化" class="headerlink" title="显示模式转化"></a>显示模式转化</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示模式转化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#00ff00</span>;</span></span><br><span class="line">            display: inline;</span><br><span class="line">        &#125;</span><br><span class="line">        span &#123;</span><br><span class="line">            width: 25px;</span><br><span class="line">            height: 25px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>萌萌哒<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>再见<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>刘邦<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>刘禅<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>List-01_Linux基本使用</title>
    <url>/2020/01/29/Linux/List-01_Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="01-linux下的文件"><a href="#01-linux下的文件" class="headerlink" title="01.linux下的文件"></a>01.linux下的文件</h2><h3 id="路径区别"><a href="#路径区别" class="headerlink" title="路径区别"></a>路径区别</h3><ol>
<li><p>Linux系统只有一个盘符</p>
</li>
<li><p>路径的写法：区别在于斜杠</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">MyWorld</span>\<span class="title">Softwares</span>		//<span class="title">window</span>路径为：反斜杠</span></span><br><span class="line"><span class="function">/<span class="title">home</span>/<span class="title">MyWorld</span>/<span class="title">Softwares</span>		//<span class="title">Linux</span>路径为： 正斜杠</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Linux系统中的文件没有扩展名，文件类型可以通过颜色区分，也可以通过命令file区分</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">file 文件名称			进行区分</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h3 id="文件分类"><a href="#文件分类" class="headerlink" title="文件分类"></a>文件分类</h3><ul>
<li>普通文件</li>
<li>目录文件</li>
<li>设备文件  <ul>
<li>字符设备文件</li>
<li>块设备文件</li>
</ul>
</li>
<li>管道文件</li>
<li>链接文件</li>
</ul>
<h4 id="通过file命令来查看文件的类型"><a href="#通过file命令来查看文件的类型" class="headerlink" title="通过file命令来查看文件的类型"></a>通过file命令来查看文件的类型</h4><ul>
<li>如果file文件后面携带文件名，则查看指定文件的类型</li>
<li>如果携带通配符   *****    则可以查看当前目录下的所有文件的类型。</li>
</ul>
<h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><table>
<thead>
<tr>
<th align="center">序号</th>
<th align="center">权限</th>
<th align="center">英文</th>
<th align="center">缩写</th>
<th align="center">数字代号</th>
</tr>
</thead>
<tbody><tr>
<td align="center">01</td>
<td align="center">读</td>
<td align="center">read</td>
<td align="center">r</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">02</td>
<td align="center">写</td>
<td align="center">write</td>
<td align="center">w</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">03</td>
<td align="center">执行</td>
<td align="center">excute</td>
<td align="center">x</td>
<td align="center">1</td>
</tr>
</tbody></table>
<p><strong>ls -l 扩展    :</strong></p>
<p><strong><code>ls -l</code> 可以查看文件夹下文件的详细信息，从左到右依次是：</strong></p>
<ul>
<li><strong>权限</strong>，第 1 个字符如果是 <code>d</code> 表示目录</li>
<li><strong>硬链接数</strong>，通俗地讲，就是有多少种方式，可以访问到当前目录／文件</li>
<li><strong>本用户的权限</strong></li>
<li><strong>用户组的权限</strong></li>
<li><strong>其他用户的权限</strong></li>
<li><strong>大小</strong></li>
<li><strong>时间</strong></li>
<li><strong>名称</strong></li>
</ul>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbu0jknltxj30ma08gmxt.jpg" alt=""></p>
<table>
<thead>
<tr>
<th align="left">字符</th>
<th>文件类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>d</strong></td>
<td>文件夹</td>
</tr>
<tr>
<td align="left"><strong>-</strong></td>
<td>普通文件</td>
</tr>
<tr>
<td align="left">c</td>
<td>硬件字符设备</td>
</tr>
<tr>
<td align="left">b</td>
<td>硬件块设备</td>
</tr>
<tr>
<td align="left">l</td>
<td>软连接文件</td>
</tr>
</tbody></table>
<h2 id="02-Linux-终端命令格式"><a href="#02-Linux-终端命令格式" class="headerlink" title="02.Linux 终端命令格式"></a>02.Linux 终端命令格式</h2><p><strong>command [-options] [parameter1] …</strong> </p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">说明：</span><br><span class="line"></span><br><span class="line">command：命令名，相应功能的英文单词或单词的缩写</span><br><span class="line"></span><br><span class="line">[-options]：选项，可用来对命令进行控制，也可以省略，[]代表可选</span><br><span class="line"></span><br><span class="line">[parameter1] …：传给命令的参数，可以是零个一个或多个</span><br></pre></td></tr></table></figure>

<h3 id="查阅命令帮助信息"><a href="#查阅命令帮助信息" class="headerlink" title="查阅命令帮助信息"></a>查阅命令帮助信息</h3><p><strong>1) commend - - help</strong></p>
<ul>
<li><p>一般是 Linux 命令自带的帮助信息，并不是所有命令都自带这个选项。</p>
<p>例如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ls --<span class="built_in">help</span>			//查看命令 ls 的用法</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>2) man</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">man commend</span><br></pre></td></tr></table></figure>

<p>使用 <code>man</code> 时的操作键：</p>
<table>
<thead>
<tr>
<th align="left">操作键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">空格键</td>
<td align="left">显示手册页的下一屏</td>
</tr>
<tr>
<td align="left">Enter 键</td>
<td align="left">一次滚动手册页的一行</td>
</tr>
<tr>
<td align="left">b</td>
<td align="left">回滚一屏</td>
</tr>
<tr>
<td align="left">f</td>
<td align="left">前滚一屏</td>
</tr>
<tr>
<td align="left">q</td>
<td align="left">退出</td>
</tr>
<tr>
<td align="left">/word</td>
<td align="left">搜索 <strong>word</strong> 字符串</td>
</tr>
</tbody></table>
<h2 id="03-常用命令"><a href="#03-常用命令" class="headerlink" title="03.常用命令"></a>03.常用命令</h2><h4 id="查看目录内容"><a href="#查看目录内容" class="headerlink" title="查看目录内容"></a>查看目录内容</h4><p><strong>ls：查看文件</strong></p>
<table>
<thead>
<tr>
<th><strong>参数</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>-a</td>
<td>查看文件，包括隐藏文件</td>
</tr>
<tr>
<td>-l</td>
<td>以列表方式查看文件，不包括隐藏文件</td>
</tr>
<tr>
<td>-h</td>
<td>文件大小以  KB ， MB等计量单位显示出来</td>
</tr>
<tr>
<td>-all</td>
<td>以列表方式查看所有文件，包括隐藏文件</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ls -all    等同于   ll</span><br><span class="line">ls -lh		详细显示文件信息</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th><strong>通配符</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>文件代表文件名中所有字符</td>
</tr>
<tr>
<td>ls ch*</td>
<td>查找以ch开头的文件</td>
</tr>
<tr>
<td>ls *an</td>
<td>查找以an结尾的文件</td>
</tr>
<tr>
<td>？</td>
<td>代表文件名中任意一个字符</td>
</tr>
<tr>
<td>ls ?.c</td>
<td>只找第一个字符任意，后缀为.c的文件</td>
</tr>
<tr>
<td>ls a.?</td>
<td>只找只有3个字符，前2字符为a.，最后一个字符任意的文件</td>
</tr>
<tr>
<td>ls  [abc]</td>
<td>abc之间穷举法</td>
</tr>
<tr>
<td>ls  [a-f]</td>
<td>a到f  之间 穷举法</td>
</tr>
<tr>
<td>ls [a-f]*</td>
<td>找到从a到f范围内的的任意一个字符开头的文件</td>
</tr>
<tr>
<td>ls a-f</td>
<td>查找文件名为a-f的文件,当“-”处于方括号之外失去通配符的作用</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">\			若文件名以  *或？ 开头，使用 \*ch</span><br></pre></td></tr></table></figure>



<h4 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h4><p><strong>cd：切换工作目录</strong></p>
<table>
<thead>
<tr>
<th>命令</th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>cd</strong></td>
<td>切换到当前用户的主目录，用户登陆的时候，<strong>默认的目录就是用户的主目录</strong>。</td>
</tr>
<tr>
<td><strong>cd ~</strong></td>
<td><strong>切换到当前用户的主目录</strong>(/home/用户目录)</td>
</tr>
<tr>
<td>cd .</td>
<td>切换到当前目录</td>
</tr>
<tr>
<td><strong>cd ..</strong></td>
<td>切换到上级目录</td>
</tr>
</tbody></table>
<p><strong>注意：</strong></p>
<ul>
<li><p><strong>Linux 所有的 目录 和 文件名 都是大小写敏感的</strong></p>
</li>
<li><p>如果路径是从根路径开始的，则路径的前面需要加上 “ / ”，如 “ /mnt ”</p>
</li>
<li><p>通常<strong>进入某个目录里的文件夹，前面不用加 “ / ”。</strong></p>
</li>
</ul>
<h4 id="创建和删除操作"><a href="#创建和删除操作" class="headerlink" title="创建和删除操作"></a>创建和删除操作</h4><p><strong>touch :  创建文件或修改文件时间</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">touch a.txt</span><br></pre></td></tr></table></figure>

<ul>
<li>如果文件 <strong>不存在</strong>，可以创建一个空白文件</li>
<li>如果文件 <strong>已经存在</strong>，可以修改文件的末次修改日期</li>
</ul>
<p><strong>mkdir        创建目录</strong></p>
<ul>
<li>参数  <strong>- p 可递归创建目录</strong></li>
<li>需要注意的是新建目录的名称不能与当前目录中已有的目录或文件同名，</li>
<li>并且目录创建者必须对当前目录具有写权限。</li>
<li><strong>新建目录的名称</strong> 不能与当前目录中 <strong>已有的目录或文件</strong> 同名</li>
</ul>
<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv2jnbruxj30l70b2mxx.jpg" style="zoom:80%;" />





<p><strong>rmdir</strong></p>
<p>可使用rmdir命令删除一个目录。必须离开目录，并且目录必须为空目录，不然提示删除失败。</p>
<p><strong>rm [文件名]  ：删除指定的文件名</strong></p>
<blockquote>
<p><strong><em>使用 <code>rm</code> 命令要小心，因为文件删除后不能恢复</em></strong></p>
</blockquote>
<table>
<thead>
<tr>
<th><strong>参数</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>-i</strong></td>
<td>删一个文件，电脑询问你一次</td>
</tr>
<tr>
<td><strong>-f</strong></td>
<td>强制删除，忽略不存在的文件，无需提示，<strong>很少使用</strong></td>
</tr>
<tr>
<td><strong>-r</strong></td>
<td><strong>递归地</strong>删除目录下的内容，删除文件夹时必须加此参数，<strong>经常使用</strong></td>
</tr>
</tbody></table>
 <img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv2nodb83j30ma08j753.jpg" alt="img"  />



<h4 id="拷贝和移动文件"><a href="#拷贝和移动文件" class="headerlink" title="拷贝和移动文件"></a>拷贝和移动文件</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">对应英文</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">tree [目录名]</td>
<td align="left">tree</td>
<td align="left">以树状图列出文件目录结构</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">cp 源文件 目标文件</td>
<td align="left">copy</td>
<td align="left">复制文件或者目录</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">mv 源文件 目标文件</td>
<td align="left">move</td>
<td align="left">移动文件或者目录／文件或者目录重命名</td>
</tr>
</tbody></table>
<p><strong>cp：拷贝</strong></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-i</td>
<td align="left">覆盖文件前提示</td>
</tr>
<tr>
<td align="left">-r</td>
<td align="left">若给出的源文件是目录文件，则 cp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">cp a.txt b.txt</span><br><span class="line">cp a c -p</span><br></pre></td></tr></table></figure>



<p><strong>tree：</strong></p>
<ul>
<li><code>tree</code> 命令可以以树状图列出文件目录结构</li>
</ul>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-d</td>
<td align="left">只显示目录</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tree</span> </span><br><span class="line"><span class="built_in">tree</span> -d</span><br></pre></td></tr></table></figure>



<p><strong>mv：</strong></p>
<p><code>mv</code> 命令可以用来 <strong>移动</strong> <strong>文件</strong> 或 <strong>目录</strong>，也可以给 <strong>文件或目录重命名</strong></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-i</td>
<td align="left">覆盖文件前提示</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mv c.txt ../oneday</span><br><span class="line">mv A.txt oneday</span><br><span class="line">mv twoday ~/Test/oneday</span><br><span class="line"></span><br><span class="line">mv demo.txt abc.txt -i		//给文件重命名时，最好加上 -i</span><br><span class="line">mv a demo -i</span><br></pre></td></tr></table></figure>



<h4 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h4><table>
<thead>
<tr>
<th align="left">号</th>
<th align="left">命令</th>
<th align="left">对应英文</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">cat 文件名</td>
<td align="left">concatenate</td>
<td align="left">查看文件内容、创建文件、文件合并、追加文件内容等功能</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">more 文件名</td>
<td align="left">more</td>
<td align="left">分屏显示文件内容</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">grep 搜索文本 文件名</td>
<td align="left">grep</td>
<td align="left">搜索文本文件内容</td>
</tr>
</tbody></table>
<p><strong>cat：查看或合并文件内容</strong></p>
<ul>
<li><code>cat</code> 命令可以用来 <strong>查看文件内容</strong>、<strong>创建文件</strong>、<strong>文件合并</strong>、<strong>追加文件内容</strong> 等功能</li>
<li><code>cat</code> 会一次显示所有的内容，适合 <strong>查看内容较少</strong> 的文本文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-b</td>
<td align="left">对非空输出行编号</td>
</tr>
<tr>
<td align="left">-n</td>
<td align="left">对输出的所有行编号</td>
</tr>
</tbody></table>
<blockquote>
<p>Linux 中还有一个 <code>nl</code> 的命令和 <code>cat -b</code> 的效果等价</p>
</blockquote>
<ul>
<li><p>可以同时查看多个文件</p>
</li>
<li><pre><code>cat a.txt b.txt
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 将多个文件合并</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
cat a.txt c.txt &gt; d.txt
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**more：分屏显示**</span><br><span class="line"></span><br><span class="line">- &#96;more&#96; 命令可以用于分屏显示文件内容，每次只显示一页内容</span><br><span class="line">- 适合于 **查看内容较多**的文本文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![](http:&#x2F;&#x2F;ww1.sinaimg.cn&#x2F;large&#x2F;0065EZzEly1gbv211iu37j30gv09jt9k.jpg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">| 操作键   | 功能                 |</span><br><span class="line">| :------- | :------------------- |</span><br><span class="line">| 空格键   | 显示手册页的下一屏   |</span><br><span class="line">| Enter 键 | 一次滚动手册页的一行 |</span><br><span class="line">| b        | 回滚一屏             |</span><br><span class="line">| f        | 前滚一屏             |</span><br><span class="line">| q        | 退出                 |</span><br><span class="line">| &#x2F;word    | 搜索 **word** 字符串 |</span><br><span class="line"></span><br><span class="line">**grep：文本搜索**</span><br><span class="line"></span><br><span class="line">| 选项 | 含义                                     |</span><br><span class="line">| :--- | :--------------------------------------- |</span><br><span class="line">| -n   | 显示匹配行及行号                         |</span><br><span class="line">| -v   | 显示不包含匹配文本的所有行（相当于求反） |</span><br><span class="line">| -i   | 忽略大小写                               |</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;cmd</span><br><span class="line">grep -n hello a.txt</span><br><span class="line">grep -i Hello a.txt</span><br><span class="line">grep -vn hello a.txt		&#x2F;&#x2F;显示每一行的行号</span><br><span class="line">grep -vn &quot;hello python&quot; a.txt</span><br></pre></td></tr></table></figure></code></pre></li>
<li><p><strong>常用的两种模式查找</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">^a</td>
<td align="left">行首，搜寻以 <strong>a</strong> 开头的行</td>
</tr>
<tr>
<td align="left">ke$</td>
<td align="left">行尾，搜寻以 <strong>ke</strong> 结束的行</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>参数</strong></th>
<th align="center"><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>[Ss]igna[Ll]</td>
<td align="center">[ ] 中的内容，符合条件都显示出来</td>
</tr>
<tr>
<td><strong>.</strong></td>
<td align="center">代表任意字符</td>
</tr>
</tbody></table>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">grep -n ^h a.txt</span><br><span class="line">grep -n ke$ a.txt</span><br><span class="line">grep -n *d  a.txt</span><br><span class="line">grep -n r..r a.txt</span><br></pre></td></tr></table></figure>



<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p><strong>echo 文字内容</strong></p>
<ul>
<li><code>echo</code> 会在终端中显示参数指定的文字，通常会和 <strong>重定向</strong> 联合使用</li>
</ul>
<p><strong>重定向 <code>&gt;</code> 和 <code>&gt;&gt;</code></strong></p>
<ul>
<li>Linux 允许将命令执行结果 <strong>重定向</strong>到一个 <strong>文件</strong></li>
<li>将本应显示在<strong>终端上的内容</strong> <strong>输出／追加</strong> 到<strong>指定文件中</strong></li>
</ul>
<p>其中</p>
<ul>
<li><code>&gt;</code> 表示输出，会覆盖文件原有的内容</li>
<li><code>&gt;&gt;</code> 表示追加，会将内容追加到已有文件的末尾</li>
</ul>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gbv1r3ac4mj30ma0a90td.jpg" alt=""></p>
<p><strong>管道 <code>|</code></strong></p>
<ul>
<li>Linux 允许将 <strong>一个命令的输出</strong> 可以<strong>通过管道</strong> 做为 <strong>另一个命令的输入</strong></li>
<li>可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里 <code>|</code> 的左右分为两端，左端塞东西（写），右端取东西（读）</li>
</ul>
<p>常用的管道命令有：</p>
<ul>
<li><code>more</code>：分屏显示内容</li>
<li><code>grep</code>：在命令执行结果的基础上查询指定的文本</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -lha ~ | more</span><br><span class="line">ls -lha ~ | grep hello</span><br></pre></td></tr></table></figure>



<p><strong>wc：计算文件行数或字数</strong></p>
<p>常用选项说明：</p>
<table>
<thead>
<tr>
<th><strong>选项</strong></th>
<th><strong>含义</strong></th>
</tr>
</thead>
<tbody><tr>
<td>-l</td>
<td>统计行数</td>
</tr>
<tr>
<td>-w</td>
<td>统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串。</td>
</tr>
<tr>
<td>-c</td>
<td>统计字节数</td>
</tr>
<tr>
<td>-m</td>
<td>统计字符数。这个标志不能与 -c 标志一起使用。</td>
</tr>
</tbody></table>
<ul>
<li>一般直接这样使用</li>
</ul>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">wc a.txt</span><br></pre></td></tr></table></figure>



<h3 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">tab 		智能补全，如果输入的前缀是独属一个文件夹或命令，则自动补全；</span><br><span class="line">两下tab		显示出带有此前缀的所有项</span><br><span class="line"></span><br><span class="line">	↑ 			↓						查看历史记录，关闭后存在；但在两个不同终端窗口中，不能使用</span><br><span class="line">Ctrl + P	Ctrl + N 	</span><br><span class="line"></span><br><span class="line">clear	Ctrl + L		清屏	</span><br><span class="line">pwd					显示当前路径</span><br><span class="line"></span><br><span class="line">Ctrl + A			将光标移到行首</span><br><span class="line">Ctrl + E 			将光标移到行尾</span><br><span class="line"></span><br><span class="line">Ctrl + C			强制退出某个命令进程</span><br><span class="line"></span><br><span class="line">Ctrl + U			删除光标前的字符</span><br><span class="line">Ctrl + K			删除光标后的字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">history				查看全部历史命令</span><br></pre></td></tr></table></figure>





<h2 id="04-远程管理常用命令"><a href="#04-远程管理常用命令" class="headerlink" title="04.远程管理常用命令"></a>04.远程管理常用命令</h2><p><strong>shutdown 关机/重启</strong></p>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">对应英文</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">shutdown 选项 时间</td>
<td align="left">shutdown</td>
<td align="left">关机／重新启动</td>
</tr>
</tbody></table>
<ul>
<li><code>shutdown</code> 命令可以 <strong>安全</strong> <strong>关闭</strong> 或者 <strong>重新启动系统</strong></li>
</ul>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-r</td>
<td align="left">重新启动</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：</p>
<ul>
<li><strong>不指定选项和参数</strong>，默认表示 <strong>1 分钟</strong>之后 <strong>关闭电脑</strong></li>
<li>远程维护服务器时，最好不要关闭系统，而应该重新启动系统</li>
</ul>
</blockquote>
<ul>
<li>常用命令示例</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新启动操作系统，其中 now 表示现在</span></span><br><span class="line">$ shutdown -r now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立刻关机，其中 now 表示现在</span></span><br><span class="line">$ shutdown now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统在今天的 20:25 会关机</span></span><br><span class="line">$ shutdown 20:25</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统再过十分钟后自动关机</span></span><br><span class="line">$ shutdown +10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消之前指定的关机计划</span></span><br><span class="line">$ shutdown -c</span><br></pre></td></tr></table></figure>



<h4 id="查看或配置网卡信息"><a href="#查看或配置网卡信息" class="headerlink" title="查看或配置网卡信息"></a>查看或配置网卡信息</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">对应英文</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">ifconfig</td>
<td align="left">configure a network interface</td>
<td align="left">查看/配置计算机当前的网卡配置信息</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">ping ip地址</td>
<td align="left">ping</td>
<td align="left">检测到目标 ip地址 的连接是否正常</td>
</tr>
</tbody></table>
<p><strong>网卡 和 IP 地址</strong></p>
<p><strong>网卡</strong></p>
<ul>
<li>网卡是一个专门负责网络通讯的硬件设备</li>
<li><strong>IP 地址</strong>是设置在网卡上的地址信息</li>
</ul>
<blockquote>
<p>我们可以把 <strong>电脑</strong> 比作 <strong>电话</strong>，<strong>网卡</strong> 相当于 <strong>SIM 卡</strong>，<strong>IP 地址</strong> 相当于 <strong>电话号码</strong></p>
</blockquote>
<p><strong>IP 地址</strong></p>
<ul>
<li><strong>每台联网的电脑上</strong>都有 <strong>IP 地址</strong>，<strong>是保证电脑之间正常通讯的重要设置</strong></li>
</ul>
<blockquote>
<p>注意：每台电脑的 IP 地址不能相同，否则会出现 IP 地址冲突，并且没有办法正常通讯</p>
</blockquote>
<p><strong>ifconfig</strong></p>
<ul>
<li><code>ifconfig</code> 可以查看／配置计算机当前的网卡配置信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看网卡配置信息</span></span><br><span class="line">$ ifconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网卡对应的 IP 地址</span></span><br><span class="line">$ ifconfig | grep inet</span><br></pre></td></tr></table></figure>

<blockquote>
<p>提示：一台计算机中有可能会有一个 <strong>物理网卡</strong> 和 <strong>多个虚拟网卡</strong>，在 Linux 中物理网卡的名字通常以 <code>ensXX</code> 表示</p>
</blockquote>
<ul>
<li><code>127.0.0.1</code> 被称为 <strong>本地回环/环回地址</strong>，一般用来测试本机网卡是否正常</li>
</ul>
<p> <strong>ping</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检测到目标主机是否连接正常</span></span><br><span class="line">$ ping IP地址</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测本地网卡工作正常</span></span><br><span class="line">$ ping 127.0.0.1</span><br></pre></td></tr></table></figure>

<ul>
<li><code>ping</code> 一般用于检测当前计算机到目标计算机之间的网络 <strong>是否通畅</strong>，<strong>数值越大，速度越慢</strong></li>
</ul>
<blockquote>
<ul>
<li><code>ping</code> 的工作原理与潜水艇的声纳相似，<code>ping</code> 这个命令就是取自 <strong>声纳的声音</strong></li>
<li>网络管理员之间也常将 <code>ping</code> 用作动词 —— <strong>ping 一下计算机X，看他是否开着</strong></li>
</ul>
</blockquote>
<p>原理：网络上的机器都有 <strong>唯一确定的 IP 地址</strong>，我们给<strong>目标 IP 地址</strong>发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在</p>
<blockquote>
<p>提示：在 Linux 中，想要终止一个终端程序的执行，绝大多数都可以使用 <code>CTRL + C</code></p>
</blockquote>
<h4 id="查看ip地址"><a href="#查看ip地址" class="headerlink" title="查看ip地址"></a>查看ip地址</h4><ol>
<li><p>站长工具</p>
</li>
<li><pre><code>ping www.baidu.com
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">3.</span><br></pre></td></tr></table></figure>
nslookup www.baidu.com
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">4. &#96;&#96;&#96;cmd</span><br><span class="line">   nmap www.baidu.com				&#x2F;&#x2F;linux 下的操作</span><br></pre></td></tr></table></figure>




</code></pre></li>
</ol>
<h3 id="远程登录和复制文件"><a href="#远程登录和复制文件" class="headerlink" title="远程登录和复制文件"></a>远程登录和复制文件</h3><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">对应英文</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">ssh 用户名@ip</td>
<td align="left">secure shell</td>
<td align="left">关机／重新启动</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径</td>
<td align="left">secure copy</td>
<td align="left">远程复制文件</td>
</tr>
</tbody></table>
<h4 id="1-ssh-基础（重点）"><a href="#1-ssh-基础（重点）" class="headerlink" title="1.ssh 基础（重点）"></a>1.<code>ssh</code> 基础（重点）</h4><p>在 Linux 中 SSH 是 <strong>非常常用</strong> 的工具，通过 <strong>SSH 客户端</strong> 我们可以连接到运行了 <strong>SSH 服务器</strong> 的远程机器上</p>
<ul>
<li><strong>SSH 客户端</strong>是一种使用 <code>Secure Shell（SSH）</code> 协议连接到远程计算机的软件程序</li>
<li><strong>SSH</strong>  是目前较可靠<strong>专为远程登录会话和其他网络服务</strong>提供安全性的协议<ul>
<li>利用 <code>SSH 协议</code> 可以有效<strong>防止远程管理过程中的信息泄露</strong></li>
<li>通过 <code>SSH 协议</code> 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗</li>
</ul>
</li>
<li><code>SSH</code> 的另一项优点是传输的数据可以是经过压缩的，所以可以加快传输的速度</li>
</ul>
<p><strong>域名 和 端口号</strong></p>
<p><strong>域名</strong></p>
<ul>
<li>由一串 <strong>用点分隔</strong> 的名字组成，例如：<code>www.itcast.cn</code></li>
<li>是 <strong>IP 地址</strong> 的别名，方便用户记忆</li>
</ul>
<p><strong>端口号</strong></p>
<ul>
<li><strong>IP 地址</strong>：通过 <strong>IP 地址</strong> 找到网络上的 <strong>计算机</strong></li>
<li><strong>端口号</strong>：通过 <strong>端口号</strong> 可以找到 <strong>计算机上运行的应用程序</strong><ul>
<li><strong>SSH 服务器</strong> 的默认端口号是 <code>22</code>，如果是默认端口号，在连接的时候，可以省略</li>
</ul>
</li>
<li>常见服务端口号列表：</li>
</ul>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">服务</th>
<th align="left">端口号</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">SSH 服务器</td>
<td align="left">22</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">Web 服务器</td>
<td align="left">80</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">HTTPS</td>
<td align="left">443</td>
</tr>
<tr>
<td align="left">04</td>
<td align="left">FTP 服务器</td>
<td align="left">21</td>
</tr>
</tbody></table>
<p><strong>SSH 客户端的简单使用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br></pre></td></tr></table></figure>

<ul>
<li><code>user</code> 是在远程机器上的用户名，如果不指定的话默认为当前用户</li>
<li><code>remote</code> 是远程机器的地址，可以是 <strong>IP</strong>／<strong>域名</strong>，或者是 <strong>后面会提到的别名</strong></li>
<li><code>port</code> 是 <strong>SSH Server 监听的端口</strong>，如果不指定，就为默认值 <code>22</code></li>
</ul>
<h4 id="2-scp（掌握）"><a href="#2-scp（掌握）" class="headerlink" title="2.scp（掌握）"></a>2.<code>scp</code>（掌握）</h4><ul>
<li>scp 就是 <code>secure copy</code>，是一个在 Linux 下用来进行 <strong>远程拷贝文件</strong> 的命令</li>
<li>它的<strong>地址格式与 ssh 基本相同</strong>，<strong>需要注意的是</strong>，在指定端口时用的是大写的 <code>-P</code> 而不是小写的</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把本地当前目录下的 01.py 文件 复制到 远程 家目录下的 Desktop/01.py</span></span><br><span class="line"><span class="comment"># 注意：`:` 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径</span></span><br><span class="line">scp -P port 01.py user@remote:Desktop/01.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把远程 家目录下的 Desktop/01.py 文件 复制到 本地当前目录下的 01.py</span></span><br><span class="line">scp -P port user@remote:Desktop/01.py 01.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上 -r 选项可以传送文件夹</span></span><br><span class="line"><span class="comment"># 把当前目录下的 demo 文件夹 复制到 远程 家目录下的 Desktop</span></span><br><span class="line">scp -r demo user@remote:Desktop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹</span></span><br><span class="line">scp -r user@remote:Desktop demo</span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-r</td>
<td align="left">若给出的源文件是目录文件，则 scp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td>
</tr>
<tr>
<td align="left">-P</td>
<td align="left">若远程 SSH 服务器的端口不是 22，需要使用大写字母 -P 选项指定端口</td>
</tr>
</tbody></table>
<h5 id="FileZilla"><a href="#FileZilla" class="headerlink" title="FileZilla"></a><code>FileZilla</code></h5><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">FileZilla 在传输文件时，使用的是 FTP 服务 而不是 SSH 服务，因此端口号应该设置为 <span class="number">21</span></span><br></pre></td></tr></table></figure>



<h4 id="3-SSH-高级（知道）"><a href="#3-SSH-高级（知道）" class="headerlink" title="3 SSH 高级（知道）"></a>3 SSH 高级（知道）</h4><ul>
<li>免密码登录</li>
<li>配置别名</li>
</ul>
<blockquote>
<p>提示：有关 SSH 配置信息都保存在用户家目录下的 <code>.ssh</code> 目录下</p>
</blockquote>
<h5 id="1）免密码登录"><a href="#1）免密码登录" class="headerlink" title="1）免密码登录"></a>1）免密码登录</h5><p><strong>步骤</strong></p>
<ul>
<li>配置公钥<ul>
<li>执行 <code>ssh-keygen</code> 即可生成 SSH 钥匙，一路回车即可</li>
</ul>
</li>
<li>上传公钥到服务器<ul>
<li>执行 <code>ssh-copy-id -p port user@remote</code>，可以让远程服务器记住我们的公钥</li>
</ul>
</li>
</ul>
<blockquote>
<p>非对称加密算法</p>
<ul>
<li>使用 <strong>公钥</strong> 加密的数据，需要使用 <strong>私钥</strong> 解密</li>
<li>使用 <strong>私钥</strong> 加密的数据，需要使用 <strong>公钥</strong> 解密</li>
</ul>
</blockquote>
<h5 id="2-配置别名"><a href="#2-配置别名" class="headerlink" title="2) 配置别名"></a>2) 配置别名</h5><p>每次都输入 <code>ssh -p port user@remote</code>，时间久了会觉得很麻烦，特别是当 <code>user</code>, <code>remote</code> 和 <code>port</code> 都得输入，而且还不好记忆</p>
<p>而 <strong>配置别名</strong> 可以让我们进一步偷懒，譬如用：<code>ssh mac</code> 来替代上面这么一长串，那么就在 <code>~/.ssh/config</code> 里面追加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host mac</span><br><span class="line">    HostName ip地址</span><br><span class="line">    User itheima</span><br><span class="line">    Port 22</span><br></pre></td></tr></table></figure>

<p><strong>保存之后，即可用 <code>ssh mac</code> 实现远程登录了，<code>scp</code> 同样可以使用</strong></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>List-2标签(2)</title>
    <url>/2020/01/29/HTML/List-2%E6%A0%87%E7%AD%BE(2)/</url>
    <content><![CDATA[<h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><ol>
<li>资源和网页文件在同一文件夹中</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片名称"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>资源在网页文件的下一级文件夹中</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"文件夹名/图片名称"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>资源在网页文件的上一级文件夹中</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../图片名称"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>绝对路径一般不用</li>
</ol>
<h1 id="0-1-列表标签"><a href="#0-1-列表标签" class="headerlink" title="0.1    列表标签"></a>0.1    列表标签</h1><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>						//unordered list</span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>天下无敌<span class="tag">&lt;/<span class="name">li</span>&gt;</span>		//ul标签中只能放li标签</span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>唯我独尊<span class="tag">&lt;/<span class="name">li</span>&gt;</span>		//li标签中可以放入任意标签</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span>					//ordered list</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>身体<span class="tag">&lt;/<span class="name">li</span>&gt;</span>		//1.身体</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>soal<span class="tag">&lt;/<span class="name">li</span>&gt;</span>	//2.soal</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span>						//definition list</span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>kings<span class="tag">&lt;/<span class="name">dt</span>&gt;</span>		//kings </span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>power<span class="tag">&lt;/<span class="name">dd</span>&gt;</span>		//		power</span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>money<span class="tag">&lt;/<span class="name">dd</span>&gt;</span>     	//		money</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="0-2-表格结构"><a href="#0-2-表格结构" class="headerlink" title="0.2 表格结构"></a>0.2 表格结构</h2><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span>							//表格标签	，table标签中只能放tr标签</span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span>						//行标签		，tr标签中只能放td标签	table row</span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span>				//单元格标签		，td标签中可以放任意标签</span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span>								//table data</span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span>				//</span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><table>
<thead>
<tr>
<th>属性名</th>
<th>含义</th>
<th>常用属性值</th>
</tr>
</thead>
<tbody><tr>
<td>border</td>
<td>边框</td>
<td>默认为0</td>
</tr>
<tr>
<td>cellspacing</td>
<td>单元格之间的间隙</td>
<td>默认为2</td>
</tr>
<tr>
<td>cellpadding</td>
<td>文字和边框之间的距离</td>
<td>默认为1</td>
</tr>
<tr>
<td>width</td>
<td>宽度</td>
<td></td>
</tr>
<tr>
<td>height</td>
<td>高度</td>
<td></td>
</tr>
<tr>
<td>align</td>
<td>表格对齐方式</td>
<td>left，center，right</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"5"</span> <span class="attr">width</span>=<span class="string">"666"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="表头标签"><a href="#表头标签" class="headerlink" title="表头标签"></a>表头标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"5"</span> <span class="attr">width</span>=<span class="string">"666"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span>			//表头标签	table header</span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="表格标题标签"><a href="#表格标题标签" class="headerlink" title="表格标题标签"></a>表格标题标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>王者荣耀英雄表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span>		//表格标题标签</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="thead和tbody"><a href="#thead和tbody" class="headerlink" title="thead和tbody"></a>thead和tbody</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"5"</span> <span class="attr">width</span>=<span class="string">"666"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span>			//头部分</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>			//主体部分</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>龙王<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>22 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>泰山<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>天下<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"5"</span> <span class="attr">width</span>=<span class="string">"666"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span>			//头部分</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span>			//跨行合并，两个合成一个</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">td</span>&gt;</span>			//跨列合并，两个合成一个</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>			//主体部分</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>龙王<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>泰山<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="浏览器审查html元素"><a href="#浏览器审查html元素" class="headerlink" title="浏览器审查html元素"></a>浏览器审查html元素</h3><p><strong>打开浏览器，然后鼠标右键检查</strong></p>
<h2 id="0-3-表单标签"><a href="#0-3-表单标签" class="headerlink" title="0.3 表单标签"></a>0.3 表单标签</h2><h3 id="表单控件"><a href="#表单控件" class="headerlink" title="表单控件"></a>表单控件</h3><h4 id="input表单控件"><a href="#input表单控件" class="headerlink" title="input表单控件"></a>input表单控件</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> /&gt;</span>		//单标签</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>type</td>
<td>text</td>
<td>单行文本输入框</td>
</tr>
<tr>
<td></td>
<td>password</td>
<td>密码输入框</td>
</tr>
<tr>
<td></td>
<td>radio</td>
<td>单选按钮</td>
</tr>
<tr>
<td></td>
<td>checkbox</td>
<td>复选框</td>
</tr>
<tr>
<td></td>
<td>button</td>
<td>普通按钮</td>
</tr>
<tr>
<td></td>
<td>submit</td>
<td>提交按钮</td>
</tr>
<tr>
<td></td>
<td>reset</td>
<td>重置按钮</td>
</tr>
<tr>
<td></td>
<td>image</td>
<td>图像形式的提交按钮</td>
</tr>
<tr>
<td></td>
<td>file</td>
<td>文件域</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td>由用户自定义</td>
<td>控件的名称</td>
</tr>
<tr>
<td>value</td>
<td>由用户自定义</td>
<td>input控件中的默认文本值</td>
</tr>
<tr>
<td>size</td>
<td>正整数</td>
<td>input控件在页面中的显示宽度</td>
</tr>
<tr>
<td>checked</td>
<td>checked</td>
<td>定义选择控件中默认被选中的项</td>
</tr>
<tr>
<td>maxlength</td>
<td>正整数</td>
<td>控件允许输入的最多字符数</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"用户名"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">maxlength</span>=<span class="string">"8"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   性<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>别: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span>女 </span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>男 </span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span>未知<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   爱<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>好: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span> 足球</span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span> 篮球</span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 乒乓球</span><br><span class="line">                   <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   搜<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>索: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"搜索啥"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交表单"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置表单"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"1111.png"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> &gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> &gt;</span> 用户名 ：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"king"</span>&gt;</span> 用户老家： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"king"</span>&gt;</span> <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">//for id 定个位</span><br></pre></td></tr></table></figure>

<h4 id="textarea-文本域"><a href="#textarea-文本域" class="headerlink" title="textarea(文本域)"></a>textarea(文本域)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">//cols和rows		一般不用</span><br></pre></td></tr></table></figure>



<h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"请选择省份"</span> &gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"陕西"</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>		//默认选中项</span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"山西"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"河南"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"河北"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url地址"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"king"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>action</td>
<td>由用户自定义</td>
<td>URL地址</td>
</tr>
<tr>
<td>method</td>
<td>get，post</td>
<td>提交方式</td>
</tr>
<tr>
<td>name</td>
<td>由用户自定义</td>
<td>表单域名称</td>
</tr>
</tbody></table>
<ul>
<li><strong>get和post</strong></li>
</ul>
<p><strong>get</strong>速度快，不安全，不能用于提交密码</p>
<p><strong>post</strong>安全，速度慢</p>
<h2 id="0-4-HTML5新增标签"><a href="#0-4-HTML5新增标签" class="headerlink" title="0.4 HTML5新增标签"></a>0.4 HTML5新增标签</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>定义页眉<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>定义页脚<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>定义导航栏<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span>定义文章<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>定义区域<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>定义侧边栏<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="datalist标签"><a href="#datalist标签" class="headerlink" title="datalist标签"></a>datalist标签</h3><ul>
<li>​    datalist标签和input标签搭配使用</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">list</span>=<span class="string">"star"</span>&gt;</span>		//list和id</span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"star"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"刘德华"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"刘若英"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"刘晓庆"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="fieldset标签"><a href="#fieldset标签" class="headerlink" title="fieldset标签"></a>fieldset标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>登陆界面<span class="tag">&lt;/<span class="name">legend</span>&gt;</span>						//legend</span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="0-5-新增属性"><a href="#0-5-新增属性" class="headerlink" title="0.5 新增属性"></a>0.5 新增属性</h2><h3 id="input标签新增type-属性值"><a href="#input标签新增type-属性值" class="headerlink" title="input标签新增type 属性值"></a>input标签新增type 属性值</h3><table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>type</td>
<td>email</td>
<td>输入邮箱格式</td>
</tr>
<tr>
<td></td>
<td>tel</td>
<td>输入手机号码格式</td>
</tr>
<tr>
<td></td>
<td>url</td>
<td>输入url格式</td>
</tr>
<tr>
<td></td>
<td>number</td>
<td>输入数字格式</td>
</tr>
<tr>
<td></td>
<td>search</td>
<td>搜索框</td>
</tr>
<tr>
<td></td>
<td>range</td>
<td>滑块</td>
</tr>
<tr>
<td></td>
<td>time</td>
<td>小时 和 分钟</td>
</tr>
<tr>
<td></td>
<td>date</td>
<td>年月日</td>
</tr>
<tr>
<td></td>
<td>month</td>
<td>月 和 年</td>
</tr>
<tr>
<td></td>
<td>week</td>
<td>星期 和 年</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        手机：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        数字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        搜索：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        URL：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        滑块：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        时间：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"time"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="input标签新增属性"><a href="#input标签新增属性" class="headerlink" title="input标签新增属性"></a>input标签新增属性</h3><table>
<thead>
<tr>
<th>属性</th>
<th align="left">属性值</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td>placeholder</td>
<td align="left">由用户自定义</td>
<td align="center">框中 浅淡 提示文字 输入后自动消失</td>
</tr>
<tr>
<td>autofocus</td>
<td align="left">autofocus 或 无</td>
<td align="center">光标自动定位到输入框中  方便直接输入</td>
</tr>
<tr>
<td>multiple</td>
<td align="left">无</td>
<td align="center">多文件上传</td>
</tr>
<tr>
<td>autocomplete</td>
<td align="left">on  ，off  或    无</td>
<td align="center">自动记录输入过的信息</td>
</tr>
<tr>
<td>required</td>
<td align="left">无</td>
<td align="center">规定某框为  必填项</td>
</tr>
<tr>
<td>accesskey</td>
<td align="left">某个字母</td>
<td align="center">ALT + 字母，快速定位到某框</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">autofocus</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">多文件上传：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">multiple</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">autocomplete</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">												//autocomplete标签必须有 name 和 提交按钮</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">昵称： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">required</span> <span class="attr">accesskey</span>=<span class="string">"s"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>例子——学生档案</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">legend</span>&gt;</span>学生档案<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入学生姓名"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>男 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span> 女<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>手机号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> &gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>所属学院：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">list</span>=<span class="string">"school"</span> <span class="attr">placeholder</span>=<span class="string">"请选择语言"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"school"</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"java"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"c++"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"php"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"python"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>出生日期：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>成绩：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="0-6-音视频标签"><a href="#0-6-音视频标签" class="headerlink" title="0.6 音视频标签"></a>0.6 音视频标签</h2><h3 id="emded标签"><a href="#emded标签" class="headerlink" title="emded标签"></a>emded标签</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">属性值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">height</td>
<td align="left"></td>
<td align="left">设置嵌入内容的高度。</td>
</tr>
<tr>
<td align="left">width</td>
<td align="left"></td>
<td align="left">设置嵌入内容的宽度。</td>
</tr>
<tr>
<td align="left">src</td>
<td align="left">url</td>
<td align="left">嵌入内容的 URL。</td>
</tr>
<tr>
<td align="left">type</td>
<td align="left">type</td>
<td align="left">定义嵌入内容的类型。</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">"helloworld.swf"</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="audio标签"><a href="#audio标签" class="headerlink" title="audio标签"></a>audio标签</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">autoplay</td>
<td align="left">autoplay</td>
<td align="center">自动播放</td>
</tr>
<tr>
<td align="left">controls</td>
<td align="left">controls</td>
<td align="center">如果出现该属性，则向用户显示音频控件（比如播放/暂停按钮）。</td>
</tr>
<tr>
<td align="left">loop</td>
<td align="left">loop</td>
<td align="center">重复播放</td>
</tr>
<tr>
<td align="left">muted</td>
<td align="left">muted</td>
<td align="center">静音</td>
</tr>
<tr>
<td align="left">preload</td>
<td align="left">auto，metadata 或none</td>
<td align="center">规定当网页加载时，音频是否默认被加载以及如何被加载。</td>
</tr>
<tr>
<td align="left">src</td>
<td align="left"><em>URL</em></td>
<td align="center">规定音频文件的 URL。</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"下山.mp3"</span> <span class="attr">autoplay</span> <span class="attr">controls</span> <span class="attr">loop</span> &gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>若属性和其属性值相同，则可以直接写   属性名</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">autoplay</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"下山.mp3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"要不要买菜 - 火红的萨日朗.flac"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="video标签"><a href="#video标签" class="headerlink" title="video标签"></a>video标签</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">autoplay</td>
<td align="left">autoplay</td>
<td align="center">自动播放</td>
</tr>
<tr>
<td align="left">controls</td>
<td align="left">controls</td>
<td align="center">如果出现该属性，则向用户显示视频控件（比如播放/暂停按钮）。</td>
</tr>
<tr>
<td align="left">loop</td>
<td align="left">loop</td>
<td align="center">重复播放</td>
</tr>
<tr>
<td align="left">muted</td>
<td align="left">muted</td>
<td align="center">静音</td>
</tr>
<tr>
<td align="left">preload</td>
<td align="left">auto，metadata 或none</td>
<td align="center">规定当网页加载时，视频是否默认被加载以及如何被加载。</td>
</tr>
<tr>
<td align="left">src</td>
<td align="left"><em>URL</em></td>
<td align="center">规定视频文件的 URL。</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"test.mp4"</span> <span class="attr">autoplay</span> <span class="attr">controls</span> &gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span> <span class="attr">controls</span> &gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"test.mp4"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"test1.mp4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo基本使用</title>
    <url>/2020/01/26/Others/Hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="01-hexo-next主题-基本使用"><a href="#01-hexo-next主题-基本使用" class="headerlink" title="01.hexo(next主题)基本使用"></a>01.hexo(next主题)基本使用</h2><h4 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 文章名称</span><br></pre></td></tr></table></figure>

<h4 id="新文章名称"><a href="#新文章名称" class="headerlink" title="新文章名称"></a>新文章名称</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: best student			&#x2F;&#x2F;名称中有空格 ，错误</span><br><span class="line">title: best-student 		&#x2F;&#x2F;正确</span><br></pre></td></tr></table></figure>

<h4 id="使用FwoSome-图标"><a href="#使用FwoSome-图标" class="headerlink" title="使用FwoSome 图标"></a>使用FwoSome 图标</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">home: &#x2F;home&#x2F;|| home			&#x2F;&#x2F;正确</span><br><span class="line">home: &#x2F;home&#x2F; || home		&#x2F;&#x2F;多了个空格，错误</span><br></pre></td></tr></table></figure>

<h4 id="网站的数据更新"><a href="#网站的数据更新" class="headerlink" title="网站的数据更新"></a>网站的数据更新</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean	&#x2F;&#x2F;清楚网站的缓存</span><br><span class="line">hexo g		&#x2F;&#x2F;更新网站数据</span><br><span class="line">hexo s		&#x2F;&#x2F;启动网站</span><br><span class="line">hexo d		&#x2F;&#x2F;同步数据到GitHub</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Others/Study</title>
    <url>/2020/01/23/Others/Study/</url>
    <content><![CDATA[<h3 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li>什么是学习</li>
<li>如何学习</li>
</ul>
<h3 id="1-什么是学习"><a href="#1-什么是学习" class="headerlink" title="1.什么是学习"></a>1.什么是学习</h3><p><strong>学习</strong>是从有限的例子中，找出问题和答案之间规律的一个过程，而所找出的规律叫做<strong>知识</strong>。</p>
<p>我们常说学习要举一反三，但严格来说，只有举一反三才叫学习。    </p>
<p>诺贝尔物理奖得主费曼说“<strong>如果你没有办法用简单的语言表述你所学的知识，你就没有真正学会它</strong>”。因为学习正是在用知识来压缩原本无限的信息。</p>
<p>从有限的例子当中学习，找出规律，从而可以压缩大量的信息，形成知识，以此便可以帮助我们解决无限的类似问题。</p>
<p><strong>例如，在我学习数学的过程中，我会做大量的例题和习题，然后总结做题方法和做题技巧以及注意事项</strong></p>
<h3 id="2-如何学习"><a href="#2-如何学习" class="headerlink" title="2.如何学习"></a>2.如何学习</h3><blockquote>
<h4 id="光看定义是学不会的"><a href="#光看定义是学不会的" class="headerlink" title="光看定义是学不会的"></a>光看定义是学不会的</h4></blockquote>
<p>在人脑中，学习是通过例子找出问题和答案的规律，重塑大脑连接而完成。</p>
<p><strong>学习的第一步就是要明确什么是问题，什么是答案。</strong></p>
<p>例如，问题：求取某个命题逻辑的主析取范式        答案：清楚什么才是主析取范式</p>
<p>很多人压根连要学的知识所描述的问题和答案都不清楚就“学习”，最后只是记住知识的描述而已。</p>
<p><strong>例如，学习离散数学过程中， 课本上讲述了命题逻辑主析取范式的求解步骤，但是只有通过实践做题，才能够真正的理解和领会，真正的做题步骤，从而真正学会这类问题的解决方法。</strong></p>
<blockquote>
<h4 id="信息与知识"><a href="#信息与知识" class="headerlink" title="信息与知识"></a>信息与知识</h4></blockquote>
<p>然而知识不是信息，学习不是记忆，并无法仅凭记住知识来学会知识。这也是人们在教和学的过程中最容易犯的错误。</p>
<p>以为将知识告诉了某人，对方就可以学会。以为听懂了知识，就表示自己学会了。</p>
<p><strong>信息是具体的情况，知识不是单纯的信息，而是信息与信息之间的关系。</strong></p>
<p><strong>例如，信息：我家的狗有四条腿        知识：全世界的狗都有四条腿</strong></p>
<blockquote>
<h4 id="改变你的大脑连接才是学习"><a href="#改变你的大脑连接才是学习" class="headerlink" title="改变你的大脑连接才是学习"></a>改变你的大脑连接才是学习</h4></blockquote>
<p>然而知识的描述只是对学习起到指引的作用，最终的学习一定要<strong>通过</strong>例子<strong>理清问题和答案的关系来重塑大脑连接</strong>。</p>
<p>这就是为什么在讨论、写文章、以及辩论时一定会伴随着例子，而不是单纯的对知识进行描述。因此在看书时，也要注意区分，哪些是例子，哪些是对知识的描述。我个人在写文章时，甚至常常会将例子和知识描述分开来写。</p>
<p><strong>例如，学习毛笔字，阅读大量教科书和观看大量教学视频，仍旧无法学会如何书写毛笔字。但是，如果经过大量的刻意练习，我们便可以掌握如何书写毛笔字。</strong></p>
<blockquote>
<h3 id="“先把书读厚，再把书读薄”"><a href="#“先把书读厚，再把书读薄”" class="headerlink" title="“先把书读厚，再把书读薄”"></a><strong>“</strong>先把书读厚，再把书读薄”</h3></blockquote>
<p>华罗庚的先把书读厚，再把书读薄的学习方法就是指：先尽可能的搜集更多的<strong>例子</strong>帮助你体会问题和答案之间的<strong>关系</strong>，而当你真正学会的时候，这些例子就被压缩成知识。</p>
<p><strong>例1：</strong>单看我的视频并且自己不去联想例子、也没有看这个文章，只是看完就完了的人，只会觉得他懂了。但实际没有。1分钟的视频是装不下那么多信息的，《学习观》视频最大的作用在于<strong>调动注意力</strong>和<strong>帮助梳理关系</strong>，但若看完了梳理的关系而不去联想身边的无数个例子从而改变自己大脑连接的话，也就没有做到先把书读厚，再把书读薄。</p>
<p><strong>例2：</strong>老师布置某个课设问题，我阅读大量书籍，学习大量相关知识；然后整合和总结个人开发经验和学习的知识。</p>
<blockquote>
<h3 id="学习的知识不一定正确"><a href="#学习的知识不一定正确" class="headerlink" title="学习的知识不一定正确"></a>学习的知识不一定正确</h3></blockquote>
<p>最后，由于学习是为了解决新问题，所以需要验证从现有例子中所提炼的知识，是否能描述问题和答案的真正规律，而不是仅仅记忆了现有的例子。</p>
<p><strong>例1：</strong>个人做了一定量的题目，总结出相关的做题方法和技巧。当再次与类似的题目时，发现方法和技巧并不适用，从而不断完成相关的方法和技巧。</p>
<p><strong>例2：</strong>因为学习的核心是从少数例子推出规律的归纳法，永远无法保证正确，只能保证符合现有的例子中。所以需要来不断通过验证的方式调整自己归纳的规律。比如牛顿力学在宏观例子中好用，但在微观例子中就出现误差了。</p>
<img src="https://i.loli.net/2020/01/24/OnKA3e6iH79IdQp.png" alt="xuexi" style="zoom:80%;" />



<img src="http://ww1.sinaimg.cn/large/0065EZzEly1gd7k5n8ncej30fi0psdj1.jpg" alt="2.png" style="zoom:80%;" />



<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gd7k65g2hbj30gg0d976u.jpg" alt="3.png"></p>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gd7k6gpkz8j30gb0e10vd.jpg" alt="4.png"></p>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gd7k6o0o8ij30f70icjty.jpg" alt="5.png"></p>
]]></content>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>List-1标签</title>
    <url>/2020/01/21/HTML/List-1%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h2 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML?"></a>什么是HTML?</h2><p>HTML 是用来<strong>描述网页</strong>的一种语言。</p>
<ul>
<li>HTML 使用<strong>标记标签</strong>来<strong>描述</strong>网页</li>
<li>HTML 文档包含了HTML <strong>标签</strong>及<strong>文本</strong>内容</li>
<li>HTML文档也叫做 <strong>web</strong> <strong>页面</strong></li>
</ul>
<h2 id="web标准："><a href="#web标准：" class="headerlink" title="web标准："></a>web标准：</h2><table>
<thead>
<tr>
<th>结构</th>
<th>XML,XHTML</th>
</tr>
</thead>
<tbody><tr>
<td>样式</td>
<td>CSS</td>
</tr>
<tr>
<td>行为</td>
<td>DOM  ,ECMAScript</td>
</tr>
</tbody></table>
<h2 id="0-1-语法结构"><a href="#0-1-语法结构" class="headerlink" title="0.1 语法结构"></a>0.1 语法结构</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>	//根标签</span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span>	//头标签</span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网站<span class="tag">&lt;/<span class="name">title</span>&gt;</span>	//标题标签</span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span>	//主体标签</span><br><span class="line">	天下无敌</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>只有在 <strong>标题标签中</strong> 和 <strong>主体标签中</strong>   可以写入  内容</li>
</ul>
<h4 id="标签之间的关系"><a href="#标签之间的关系" class="headerlink" title="标签之间的关系"></a>标签之间的关系</h4><p>嵌套关系</p>
<p>并列关系</p>
<p>若为嵌套关系，子元素缩进一个Tab键</p>
<p>若为并列关系，两个标签 上下对齐</p>
<h4 id="快速生成HTML5骨架"><a href="#快速生成HTML5骨架" class="headerlink" title="快速生成HTML5骨架"></a>快速生成HTML5骨架</h4><p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html:5接着输入Tab</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">！接着输入Tab</span><br></pre></td></tr></table></figure>



<p><strong>HTML5的标识</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br></pre></td></tr></table></figure>

<p><strong>UTF-8     字符集</strong>（包含全世界的字符）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br></pre></td></tr></table></figure>




<h2 id="0-2-标签的分类"><a href="#0-2-标签的分类" class="headerlink" title="0.2 标签的分类"></a>0.2 标签的分类</h2><p>双标签</p>
<p>单标签        非常少</p>
<h4 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h4><p><strong>标题标签</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;hn&gt;内容&lt;/hn&gt;		//1&lt;=n&lt;=6		&lt;h1&gt;尽量少用</span><br></pre></td></tr></table></figure>

<p><strong>段落标签</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>水平线标签</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>		//单标签</span><br></pre></td></tr></table></figure>

<p><strong>换行标签</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span>		//单标签</span><br></pre></td></tr></table></figure>

<p><strong>布局标签</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h4><p>加粗</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>		//推荐使用</span><br></pre></td></tr></table></figure>

<p>斜体</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span>				//推荐使用</span><br></pre></td></tr></table></figure>

<p>加删除线</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span><span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span>				//推荐使用</span><br></pre></td></tr></table></figure>

<p>加下划线</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span><span class="tag">&lt;/<span class="name">ins</span>&gt;</span>				//推荐使用</span><br></pre></td></tr></table></figure>

<h4 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h4><p>1.标签可以有多个属性  ，属性必须写在开始标签中，位于标签名后面</p>
<p>2.属性之间不分先后顺序，标签名与属性，属性与属性之间<strong>均以空格隔开</strong></p>
<p>3.任何标签的属性<strong>都有默认值</strong>，省略该属性则取默认值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">"red"</span> <span class="attr">width</span>=<span class="string">"666"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> 属性<span class="attr">1</span>=<span class="string">"值1"</span>  属性<span class="attr">2</span>=<span class="string">"值2"</span> /&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> /&gt;</span>		//src是img标签的必须属性	，单标签</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td>src</td>
<td>URL</td>
<td align="center">图片的路径</td>
</tr>
<tr>
<td>alt</td>
<td>文本</td>
<td align="center">图片不能显示时的替换文本</td>
</tr>
<tr>
<td>title</td>
<td>文本</td>
<td align="center">鼠标悬停时的内容</td>
</tr>
<tr>
<td>width</td>
<td>像素</td>
<td align="center">设置图片宽度，一般只改高度就行</td>
</tr>
<tr>
<td>height</td>
<td>像素</td>
<td align="center">设置图片高度，一般只改高度就行</td>
</tr>
<tr>
<td>border</td>
<td>数字</td>
<td align="center">设置图片边框的宽度</td>
</tr>
</tbody></table>
<h4 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"链接"</span>&gt;</span>链接名称<span class="tag">&lt;/<span class="name">a</span>&gt;</span>		//href是a标签的必须属性</span><br></pre></td></tr></table></figure>

<ol>
<li><p>外部链接        必须添加    http://</p>
</li>
<li><p>内部链接       直接添加网页名称</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"text.html"</span>&gt;</span>王者<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="base标签"><a href="#base标签" class="headerlink" title="base标签"></a>base标签</h4><p>可以设置整体链接的打开状态</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span> /&gt;</span>		//base标签放到这里，_blank表示打开新页面</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://chanwillian.github.io"</span> <span class="attr">target</span>=<span class="string">"_self"</span>&gt;</span>HELLO<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 	_self表示自身页面转换</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="特殊字符标签"><a href="#特殊字符标签" class="headerlink" title="特殊字符标签"></a>特殊字符标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">空格		<span class="symbol">&amp;nbsp;</span></span><br><span class="line"><span class="tag">&lt;		&amp;<span class="attr">lt</span>;</span></span><br><span class="line"><span class="tag">&gt;</span>		<span class="symbol">&amp;gt;</span></span><br><span class="line">版权		Ucopy;</span><br></pre></td></tr></table></figure>

<h4 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h4><ol>
<li>多使用注释</li>
<li>注释内容浏览器不执行</li>
<li>HTML注释快捷键</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Ctrl + /					//单行注释</span><br><span class="line">Ctrl + Shift + /			//多行注释</span><br></pre></td></tr></table></figure>



<h2 id="0-3-锚点定位"><a href="#0-3-锚点定位" class="headerlink" title="0.3    锚点定位"></a>0.3    锚点定位</h2><p>适用于较长的页面，点击某个关键词，直接到达这个位置</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#ID"</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span>名称<span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;#life&quot;&gt;个人生活&lt;&#x2F;a&gt;</span><br><span class="line">&lt;h3 id&#x3D;&quot;life&quot;&gt;个人生活&lt;h3&gt;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title>hexo+GitHub搭建自己的博客</title>
    <url>/2020/01/19/Others/hexo-GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。</p>
<h2 id="1-1-安装-hexo"><a href="#1-1-安装-hexo" class="headerlink" title="1.1    安装  hexo"></a>1.1    安装  hexo</h2><h4 id="安装前提（安装环境的搭建）"><a href="#安装前提（安装环境的搭建）" class="headerlink" title="安装前提（安装环境的搭建）"></a>安装前提（安装环境的搭建）</h4><p>先下载安装上<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>,</p>
<p>再下载安装上<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>, </p>
<p> 安装路径没有要求。</p>
<h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><p>在开始菜单找到 git bash, 然后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure>

<h2 id="1-2-创建网站"><a href="#1-2-创建网站" class="headerlink" title="1.2    创建网站"></a>1.2    创建网站</h2><p>下一步，自己找个  放网站文件的（网站文件会生成一个文件夹，文件夹的名称，你自己定） 路径，</p>
<p>然后 点击鼠标右键，打开git bash</p>
<p><img src="https://i.loli.net/2020/01/19/wlUN71oWuI9TbKf.png" alt="img"></p>
<p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init 文件夹名</span><br></pre></td></tr></table></figure>

<p>ok , 网站创好了，你会看到在 你选择的路径中  会多了那个文件夹</p>
<h4 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h4><p>输入（在git bash中）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g	</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>然后再，</p>
<p>找到  <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>    选中，鼠标 右键   打开 （open），</p>
<p>看看 你的网站 ，再回到  git bash  ,   按下 Ctrl+C   ，关闭网站</p>
<p>然后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>



<h2 id="1-3-连上GitHub"><a href="#1-3-连上GitHub" class="headerlink" title="1.3    连上GitHub"></a>1.3    连上GitHub</h2><h4 id="先这样做"><a href="#先这样做" class="headerlink" title="先这样做"></a>先这样做</h4><p><strong>1.首先，不用多说，得先有一个GitHub账号吧：</strong></p>
<p><img src="https://pic3.zhimg.com/80/v2-be8a3a6ad036c32b51caa3d78af4f146_hd.jpg" alt="img"></p>
<p>填好自己得个人信息（用户名好像不能用汉字）：</p>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gdkegelk9sj30k0094wem.jpg" alt="2222222222.jpg"></p>
<p>然后点击Create an account.</p>
<p><img src="https://pic2.zhimg.com/80/v2-7872012db459db8c8bab2793f7f79101_hd.jpg" alt="img"></p>
<p>这里选择免费的啦，然后Continue</p>
<p><img src="http://ww1.sinaimg.cn/large/0065EZzEly1gdkehe13euj30k008zglr.jpg" alt="33333.jpg"></p>
<p>这里选择自己的一些基本情况，然后submit。</p>
<p><img src="https://pic4.zhimg.com/80/v2-bb9610cdfb32da5e5d029356666ac8b3_hd.jpg" alt="44444.jpg"></p>
<p>最后来到这个界面就对了，点击右上角那个加号旁边那里，可以来到这个页面。</p>
<p><strong>2.开始搭建博客：</strong></p>
<p>首先，我们需要新建一个Repositories,Repositories就相当于一个库，存放我们的项目文件。</p>
<p><img src="https://pic4.zhimg.com/80/v2-bb9610cdfb32da5e5d029356666ac8b3_hd.jpg" alt="img"></p>
<p>然后给自己的Repositories取一个名字，注意：名称格式最好为：<a href="https://link.zhihu.com/?target=http%3A//xn--eqr924avxo.github.io/">用户名.github.io</a></p>
<p>因为我搭建过，所以会提示错误。</p>
<p><img src="https://pic2.zhimg.com/80/v2-ae40c07cde4cfe27b93c902850160891_hd.jpg" alt="img"></p>
<p>然后点击create repositories.</p>
<p>随后跳转到该库界面,由于我是搭建好的，所以会有项目文件，然后选择Settings</p>
<p><img src="https://pic4.zhimg.com/80/v2-3d639cfbaff027254b6e899a1642644b_hd.jpg" alt="img"></p>
<p>进入settings后，往下拉，找到GitHub pages设置界面</p>
<p><img src="https://pic1.zhimg.com/80/v2-90469a0aba1ab48ac8ddb7d9f39c1230_hd.jpg" alt="img"></p>
<p>按如图所示选择，注意，选择source之后记得Save，然后点击Choose a theme选择一个博客主题。</p>
<p><img src="https://pic2.zhimg.com/80/v2-be796f462202406cb2cd42fd511d6a85_hd.jpg" alt="img"></p>
<p>然后点击Select theme</p>
<p>到这一步呢，正常来说你就可以看到自己的博客了。在地址栏输入：用户名.<a href="https://link.zhihu.com/?target=http%3A//github.io">http://github.io</a>你就可以访问页面了。</p>
<h4 id="然后这样做"><a href="#然后这样做" class="headerlink" title="然后这样做"></a>然后这样做</h4><p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github注册邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>两个英文下的  引号  别丢了</p>
<p>然后  会出来  一些东西</p>
<p>你就   按下    三个  Enter  就行     然后  ，你会看到生成  了一个特殊 图案</p>
<h4 id="下一步-1"><a href="#下一步-1" class="headerlink" title="下一步"></a>下一步</h4><h5 id="进入GitHub首页"><a href="#进入GitHub首页" class="headerlink" title="进入GitHub首页"></a>进入GitHub首页</h5><p><img src="https://img-blog.csdnimg.cn/20190512110701804.png" alt="img">)<img src="https://img-blog.csdnimg.cn/201905121108238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpbnRvbjE=,size_16,color_FFFFFF,t_70" alt="img"></p>
<h5 id="点击New-SSHKey"><a href="#点击New-SSHKey" class="headerlink" title="点击New SSHKey"></a>点击New SSHKey</h5><p>​    然后找到当前用户目录下C:\Users\用户名\ .ssh id_rsa.pub文件以文本方式打开。打开之后全部复制到key中</p>
<p><img src="https://img-blog.csdnimg.cn/20190512111036837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpbnRvbjE=,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>然后 回到 gitbash   输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>再输入个 yes     ，</p>
<p> 如果提示：You’ve successfully authenticated, but GitHub does not provide shell access. 说明你连接成功了</p>
<h4 id="最后一步，设置用户信息："><a href="#最后一步，设置用户信息：" class="headerlink" title="最后一步，设置用户信息："></a>最后一步，设置用户信息：</h4><p>编辑 你创的文件夹 下一层的    _config.yml文件</p>
<p><strong>到文件的最后</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;你的GitHub 的username（昵称）&#x2F;你的GitHub 的username（昵称）.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>然后</p>
<p>找到你命名的 文件下  一层，鼠标右键gitbash，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.你的GitHub 的username（昵称） </span><br><span class="line">git config --global user.你的github注册邮箱</span><br></pre></td></tr></table></figure>

<p>细心检查，可以 再输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.你的GitHub 的username（昵称） </span><br><span class="line">git config user.你的github注册邮箱</span><br></pre></td></tr></table></figure>

<p>看看    输入对了否</p>
<p>然后输入  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>过一小会 ， 输入  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">你的GitHub 的username（昵称）.github.io</span><br></pre></td></tr></table></figure>

<p>看看你的网站    ，你的网站  成了，  以后用它登陆就可以了</p>
<h2 id="1-4-换个主题"><a href="#1-4-换个主题" class="headerlink" title="1.4    换个主题"></a>1.4    换个主题</h2><p>找到你命名的 文件下  一层，鼠标右键gitbash，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p>当 下载 完成后，打开 <strong>站点配置文件</strong>（就是  你创的文件夹 下一层的    _config.yml文件）， </p>
<p>找到 <code>theme</code> 字段，（可以使用 Ctrl+F，开启查找的一个东西）</p>
<p>再这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>下一步</p>
<p>找到你命名的 文件下  一层 的，theme 文件夹     ，进入  next 文件夹 ，   打开  _config.yml文件（<strong>主题配置文件</strong>）</p>
<p>找到 <strong>scheme</strong>字段，（可以使用 Ctrl+F，开启查找的一个东西）</p>
<p>改成这样</p>
<p><img src="https://i.loli.net/2020/01/19/sz59fHXuRkCYWej.png" alt="img"></p>
<p>重新生成，访问页面</p>
<p>（    找到你命名的 文件下  一层，鼠标右键git bash，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>再看看你的网站   ）</p>
<h2 id="1-5-加个评论系统"><a href="#1-5-加个评论系统" class="headerlink" title="1.5    加个评论系统"></a>1.5    加个评论系统</h2><ol>
<li><p>在<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>的官网上注册账号。</p>
</li>
<li><p>在<a href="https://livere.com/insight/myCode" target="_blank" rel="noopener">此处</a>获取data-uid。</p>
</li>
</ol>
<ol start="3">
<li><p>打开主题的配置文件<code>—config</code>，</p>
</li>
<li><p>搜索livere_uid，将livere_uid前面的#号去掉，然后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">livere_uid: 你的uid</span><br></pre></td></tr></table></figure>
</li>
<li><p>找到你命名的 文件下  一层，鼠标右键git bash，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</li>
<li><p>再看看你的网站</p>
</li>
</ol>
<h2 id="1-6-加个统计"><a href="#1-6-加个统计" class="headerlink" title="1.6    加个统计"></a>1.6    加个统计</h2><p>打开主题配置文件，</p>
<p>找到   <strong>busuanzi_count</strong>，</p>
<p>改成这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header:  本站访客数 &lt;i class&#x3D;&quot;fa fa-user&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  site_uv_footer: 人次</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header:  本站总访问量 &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: 本文总阅读量 &lt;i class&#x3D;&quot;fa fa-file-o&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  page_pv_footer: 次</span><br></pre></td></tr></table></figure>

<p>然后</p>
<p>找到我们在用的<code>next</code>主题文件夹，然后在<code>layout_third-partyanalytics</code>下找到<code>busuanzi-counter.swig</code>文件        ，在该文件下找到如下语句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script async src&#x3D;&quot;https:&#x2F;&#x2F;dn-lbstatics.qbox.me&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>将这句话更改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>然后   </p>
<p>重新生成，访问页面。</p>
<h2 id="1-7加个音乐播放器"><a href="#1-7加个音乐播放器" class="headerlink" title="1.7加个音乐播放器"></a>1.7加个音乐播放器</h2><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>点击访问Aplayer源码：<a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">GitHub Aplayer</a>。下载到本地，解压后将<code>dist</code>文件夹复制到<code>themes\next\source</code>文件夹下。</p>
<h4 id="2，music-js"><a href="#2，music-js" class="headerlink" title="2，music.js"></a>2，music.js</h4><p>新建<code>themes\next\source\dist\music.js</code>文件，添加内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const ap &#x3D; new APlayer(&#123;</span><br><span class="line">    container: document.getElementById(&#39;aplayer&#39;),</span><br><span class="line">    fixed: true,</span><br><span class="line">    autoplay: false,</span><br><span class="line">    audio: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;麻雀&quot;,</span><br><span class="line">        artist: &#39;李荣浩&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;1407551413.mp3&#39;,</span><br><span class="line">        cover: &#39;https:&#x2F;&#x2F;p2.music.126.net&#x2F;TzlSVBiNtpRD2b7MT2Hi-w&#x3D;&#x3D;&#x2F;109951164527590793.jpg?param&#x3D;300x300&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;下山&#39;,</span><br><span class="line">        artist: &#39;要不要买菜&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;1404885266.mp3&#39;,</span><br><span class="line">        cover: &#39;https:&#x2F;&#x2F;p1.music.126.net&#x2F;Aj4X1kpV-C2LLi-e_Xhgvg&#x3D;&#x3D;&#x2F;109951164499744148.jpg?param&#x3D;300x300&quot; location&#x3D;&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;消愁&#39;,</span><br><span class="line">        artist: &#39;毛不易&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;569200213.mp3&#39;,</span><br><span class="line">        cover: &#39;https:&#x2F;&#x2F;p1.music.126.net&#x2F;vmCcDvD1H04e9gm97xsCqg&#x3D;&#x3D;&#x2F;109951163350929740.jpg?param&#x3D;300x300&#39;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="3，-layout-swig"><a href="#3，-layout-swig" class="headerlink" title="3，_layout.swig"></a>3，_layout.swig</h4><p>打开<code>themes\next\layout\_layout.swig</code>文件，将</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>添加到     &lt;body itemscope …&gt;   后面就行，即再 <body><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"model":{"scale":1,"hHeadPos":0.5,"vHeadPos":0.618},"display":{"superSample":2,"width":150,"height":300,"position":"right","hOffset":0,"vOffset":-20},"mobile":{"show":true,"scale":0.5},"react":{"opacityDefault":0.7,"opacityOnHover":0.2},"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/","tagMode":false});</script></body> 里面</p>
<p>然后，  重新生成，访问页面</p>
<h2 id="1-8-添加公益404-页面"><a href="#1-8-添加公益404-页面" class="headerlink" title="1.8    添加公益404 页面"></a>1.8    添加公益404 页面</h2><p>打开网站文件夹，右键打开 git bash</p>
<p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n page 404</span><br></pre></td></tr></table></figure>

<p>再到 主题配置文件 中， 找到  关键字 <strong>menu</strong>， </p>
<p>再这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">commonweal: &#x2F;404&#x2F;|| heartbeat</span><br></pre></td></tr></table></figure>

<h4 id="下一步-2"><a href="#下一步-2" class="headerlink" title="下一步"></a>下一步</h4><p>找到  网站文件夹/source/_posts/404   路径  </p>
<p>打开       index.md 文件   </p>
<p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8;&quot;&#x2F;&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge,chrome&#x3D;1&quot; &#x2F;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;all&quot; &#x2F;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;index,follow&quot;&#x2F;&gt;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;style&#x2F;404style.css&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;plain&quot; src&#x3D;&quot;http:&#x2F;&#x2F;www.qq.com&#x2F;404&#x2F;search_children.js&quot;</span><br><span class="line">          charset&#x3D;&quot;utf-8&quot; homePageUrl&#x3D;&quot;&#x2F;&quot;</span><br><span class="line">          homePageName&#x3D;&quot;回到我的主页&quot;&gt;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;data.js&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;page.js&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>  再，重新生成，访问页面</p>
<h2 id="1-9-Font-Awesome-的使用"><a href="#1-9-Font-Awesome-的使用" class="headerlink" title="1.9    Font Awesome 的使用"></a>1.9    Font Awesome 的使用</h2><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>打开 <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a>，下载文件并解压 ，下载路径  你定    </p>
<ul>
<li>将  你下的文件   中的这个    css文件夹    中的     font-awesome.css 文件   </li>
</ul>
<p>复制到     网站文件夹/theme/next/source    路径  下的  css 中去</p>
<ul>
<li>然后    将  你下的文件   中的这个   fonts文件夹   </li>
</ul>
<p>复制到    网站文件夹/theme/next/source    路径下</p>
<p>再   选择  覆盖  </p>
<h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>在      这个     网站文件夹/theme/next/source    路径下</p>
<p>创建  名为   Font Awesome  的    html文件</p>
<p>然后     在这个 html  文件  中</p>
<p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;font-awesome.min.css&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>重新生成 ，访问页面  </p>
<h1 id="祝大家建站快乐，少遇坑"><a href="#祝大家建站快乐，少遇坑" class="headerlink" title="祝大家建站快乐，少遇坑~"></a>祝大家建站快乐，少遇坑~</h1><p> 参考博文   <a href="https://blog.csdn.net/linton1/article/details/90137367" target="_blank" rel="noopener">https://blog.csdn.net/linton1/article/details/90137367</a></p>
<p>​                    <a href="https://www.dazhuanlan.com/2019/09/23/5d88294abddd7/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/09/23/5d88294abddd7/</a></p>
<p>​                    <a href="https://asdfv1929.github.io/2018/05/26/next-add-music/" target="_blank" rel="noopener">https://asdfv1929.github.io/2018/05/26/next-add-music/</a></p>
<p>​                    <a href="https://jingyan.baidu.com/article/948f5924ff894cd80ef5f943.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/948f5924ff894cd80ef5f943.html</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
